{"version":3,"sources":["../../../../src/Apps/Artist/Components/ArtistHeader.tsx"],"names":["H1","styled","h1","H2","withComponent","carouselSlideTrack","track","ArtistHeader","props","context_module","modelName","entity_slug","artist","id","entity_id","_id","mediator","user","Component","LargeArtistHeader","_props","_state","slide","action_type","Schema","ActionType","Click","subject","destination_path","href","carousel","hasImages","images","isAdmin","slideIndex","onClickSlide","resized","url","width","height","name","nationality","years","counts","follows","toLocaleString","handleOpenAuth","SmallArtistHeader","entity","contextModule","ContextModule","ArtistPage","intent","AuthModalIntent","FollowArtist","ArtistHeaderFragmentContainer"],"mappings":"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","sourcesContent":["import { Box, Flex, Image, Serif, Spacer } from \"@artsy/palette\"\nimport { ArtistHeader_artist } from \"__generated__/ArtistHeader_artist.graphql\"\nimport { Mediator, SystemContextConsumer } from \"Artsy\"\nimport { track, Track } from \"Artsy/Analytics\"\nimport * as Schema from \"Artsy/Analytics/Schema\"\nimport { FollowArtistButtonFragmentContainer as FollowArtistButton } from \"Components/FollowButton/FollowArtistButton\"\nimport { Carousel } from \"Components/v2/Carousel\"\nimport React, { Component, Fragment } from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport styled from \"styled-components\"\nimport { AuthModalIntent, openAuthModal } from \"Utils/openAuthModal\"\nimport { Media } from \"Utils/Responsive\"\nimport { userIsAdmin } from \"Utils/user\"\n\n/**\n * This H1 and H2 were added for SEO purposes\n * TODO: Remove when palette provides the ability to override typography element\n */\nconst H1 = styled.h1`\n  all: initial;\n  all: unset;\n  margin: 0;\n  padding: 0;\n  font: normal;\n  font-family: inherit;\n  font-size: medium;\n  font-style: normal;\n  font-variant: normal;\n  font-weight: normal;\n  letter-spacing: normal;\n  line-height: normal;\n`\n\nconst H2 = H1.withComponent(\"h2\")\n\ninterface Props {\n  artist: ArtistHeader_artist\n  user?: User\n  mediator?: Mediator\n}\n\ntype Image = Props[\"artist\"][\"carousel\"][\"images\"][0]\n\nconst carouselSlideTrack: Track<null, null, [Image]> = track\n\n@track<Props>(\n  props =>\n    ({\n      context_module: \"Header\",\n      // TODO: Old schema for the Follow button\n      modelName: \"artist\",\n      entity_slug: props.artist.id,\n      entity_id: props.artist._id,\n    } as Schema.ContextModule & Schema.Old)\n)\nexport class ArtistHeader extends Component<Props> {\n  render() {\n    const props = this.props\n    return (\n      <SystemContextConsumer>\n        {({ mediator, user }) => {\n          return (\n            <>\n              <Media at=\"xs\">\n                <SmallArtistHeader mediator={mediator} user={user} {...props} />\n              </Media>\n              <Media greaterThan=\"xs\">\n                <LargeArtistHeader mediator={mediator} user={user} {...props} />\n              </Media>\n            </>\n          )\n        }}\n      </SystemContextConsumer>\n    )\n  }\n}\n\n@track()\nexport class LargeArtistHeader extends Component<Props> {\n  @carouselSlideTrack((_props, _state, [slide]) => {\n    return {\n      action_type: Schema.ActionType.Click,\n      // TODO: Or keep using ‘thumbnail’ as per old Force schema\n      subject: \"carouselSlide\",\n      // TODO: Are you sure this is no longer needed? Like, do we not need to\n      //       identify the specific slide?\n      destination_path: slide.href,\n    }\n  })\n  onClickSlide(slide) {\n    // no-op\n  }\n\n  render() {\n    const { props } = this\n    const {\n      artist: { carousel },\n      user,\n    } = props\n\n    const hasImages = carousel && carousel.images\n    const isAdmin = userIsAdmin(user)\n\n    return (\n      <Box width=\"100%\">\n        {hasImages && (\n          <Carousel\n            height=\"200px\"\n            data={carousel.images as object[]}\n            render={(slide: Image, slideIndex: number) => {\n              return (\n                <a href={slide.href} onClick={() => this.onClickSlide(slide)}>\n                  <Image\n                    px={5}\n                    lazyLoad={slideIndex > 5}\n                    src={slide.resized.url}\n                    width={slide.resized.width}\n                    height={slide.resized.height}\n                    preventRightClick={!isAdmin}\n                  />\n                </a>\n              )\n            }}\n          />\n        )}\n        <Spacer my={2} />\n\n        <span id=\"jumpto-ArtistHeader\" />\n\n        <Flex justifyContent=\"space-between\">\n          <Box>\n            <H1>\n              <Serif size=\"10\">{props.artist.name}</Serif>\n            </H1>\n            <Flex>\n              <H2>\n                <Serif size=\"3\">\n                  {props.artist.nationality && `${props.artist.nationality}, `}\n                  {props.artist.years}\n                </Serif>\n              </H2>\n              <Spacer mr={2} />\n              {props.artist.counts.follows > 50 && (\n                <Serif size=\"3\">\n                  {props.artist.counts.follows.toLocaleString()} followers\n                </Serif>\n              )}\n            </Flex>\n          </Box>\n          <FollowArtistButton\n            useDeprecatedButtonStyle={false}\n            artist={props.artist}\n            user={user}\n            onOpenAuthModal={() => handleOpenAuth(props.mediator, props.artist)}\n          >\n            Follow\n          </FollowArtistButton>\n        </Flex>\n      </Box>\n    )\n  }\n}\n\n@track()\nexport class SmallArtistHeader extends Component<Props> {\n  @carouselSlideTrack((_props, _state, [slide]) => {\n    return {\n      action_type: Schema.ActionType.Click,\n      // TODO: Or keep using ‘thumbnail’ as per old Force schema\n      subject: \"carouselSlide\",\n      // TODO: Are you sure this is no longer needed? Like, do we not need to\n      //       identify the specific slide?\n      destination_path: slide.href,\n    }\n  })\n  onClickSlide(slide) {\n    // no-op\n  }\n\n  render() {\n    const props = this.props\n    const {\n      artist: { carousel },\n      user,\n    } = props\n\n    const hasImages = carousel && carousel.images\n    const isAdmin = userIsAdmin(user)\n\n    return (\n      <Flex flexDirection=\"column\">\n        {hasImages && (\n          <Fragment>\n            <Carousel\n              data={carousel.images as object[]}\n              height=\"200px\"\n              render={slide => {\n                return (\n                  <a href={slide.href} onClick={() => this.onClickSlide(slide)}>\n                    <Image\n                      px={5}\n                      src={slide.resized.url}\n                      width={slide.resized.width}\n                      height={slide.resized.height}\n                      preventRightClick={!isAdmin}\n                    />\n                  </a>\n                )\n              }}\n            />\n            <Spacer my={2} />\n          </Fragment>\n        )}\n\n        <span id=\"jumpto-ArtistHeader\" />\n        <Flex flexDirection=\"column\" alignItems=\"center\">\n          <H1>\n            <Serif size=\"5\">{props.artist.name}</Serif>\n          </H1>\n          <Flex>\n            <Box mx={1}>\n              <H2>\n                <Serif size=\"2\">\n                  {props.artist.nationality && `${props.artist.nationality}, `}\n                  {props.artist.years}\n                </Serif>\n              </H2>\n            </Box>\n            {props.artist.counts.follows > 50 && (\n              <Serif size=\"2\">\n                {props.artist.counts.follows.toLocaleString()} followers\n              </Serif>\n            )}\n          </Flex>\n        </Flex>\n        <Box my={2}>\n          <FollowArtistButton\n            artist={props.artist}\n            useDeprecatedButtonStyle={false}\n            buttonProps={{ width: \"100%\" }}\n            user={user}\n            onOpenAuthModal={() => handleOpenAuth(props.mediator, props.artist)}\n          >\n            Follow\n          </FollowArtistButton>\n        </Box>\n      </Flex>\n    )\n  }\n}\n\nconst handleOpenAuth = (mediator, artist) => {\n  openAuthModal(mediator, {\n    entity: artist,\n    contextModule: Schema.ContextModule.ArtistPage,\n    intent: AuthModalIntent.FollowArtist,\n  })\n}\n\nexport const ArtistHeaderFragmentContainer = createFragmentContainer(\n  ArtistHeader,\n  {\n    artist: graphql`\n      fragment ArtistHeader_artist on Artist {\n        _id\n        id\n        name\n        nationality\n        years\n        counts {\n          follows\n        }\n        carousel {\n          images {\n            href\n            resized(height: 200) {\n              url\n              width\n              height\n            }\n          }\n        }\n        ...FollowArtistButton_artist\n      }\n    `,\n  }\n)\n"],"file":"ArtistHeader.js"}