{"version":3,"sources":["../../../../src/Apps/Artist/Components/ArtistMeta.tsx"],"names":["sellerFromPartner","partner","profile","image","imageObjectAttributes","name","url","sd","APP_URL","href","item","thumbnailUrl","small","large","offersAttributes","artist","edges","artworks_connection","offers","map","node","seller","itemOffered","productAttributes","availability","priceCurrency","price_currency","filter","offer","artwork","offerAttributes","additionalType","category","productionDate","date","title","brand","listPrice","__typename","minPrice","maxPrice","lowPrice","major","highPrice","currencyCode","price","structuredDataAttributes","makesOffer","length","undefined","attributes","gender","birthDate","birthday","deathDate","deathday","mainEntityOfPage","description","meta","nationality","ArtistMeta","props","hasImage","versions","indexOf","square","counts","artworks","blurb","id","FACEBOOK_APP_NAMESPACE","alternate_names","join","renderImageMetaTags","maybeRenderNoIndex","renderStructuredData","Component","ArtistMetaFragmentContainer"],"mappings":"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","sourcesContent":["import { ArtistMeta_artist } from \"__generated__/ArtistMeta_artist.graphql\"\nimport { Person as SeoDataForArtist } from \"Components/v2/Seo/Person\"\nimport { identity, pickBy } from \"lodash\"\nimport React, { Component } from \"react\"\nimport { Link, Meta, Title } from \"react-head\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { data as sd } from \"sharify\"\n\ninterface Props {\n  artist: ArtistMeta_artist\n}\n\ntype ArtworkNode = ArtistMeta_artist[\"artworks_connection\"][\"edges\"][0][\"node\"]\n\nexport const sellerFromPartner = (partner: ArtworkNode[\"partner\"]) => {\n  if (partner) {\n    const { profile } = partner\n    const image = imageObjectAttributes(profile)\n\n    return {\n      \"@context\": \"http://schema.org\",\n      \"@type\": \"ArtGallery\",\n      name: partner.name,\n      url: `${sd.APP_URL}${partner.href}`,\n      image,\n    }\n  }\n}\n\ninterface ItemWithImage {\n  image?: {\n    small: string\n    large: string\n  }\n}\n\nexport const imageObjectAttributes = (item: ItemWithImage) => {\n  if (!item) {\n    return null\n  }\n\n  const thumbnailUrl = item.image && item.image.small\n  const url = item.image && item.image.large\n\n  return (\n    thumbnailUrl && {\n      \"@type\": \"ImageObject\",\n      thumbnailUrl,\n      url,\n    }\n  )\n}\n\nexport const offersAttributes = (artist: ArtistMeta_artist) => {\n  const { edges } = artist.artworks_connection\n\n  const offers =\n    edges &&\n    edges\n      .map(({ node }) => {\n        const seller = sellerFromPartner(node.partner)\n        const itemOffered = productAttributes(artist, node)\n        const availability =\n          node.availability === \"for sale\" ? \"InStock\" : \"OutOfStock\"\n\n        if (!itemOffered) return null\n\n        return {\n          \"@type\": \"Offer\",\n          availability,\n          priceCurrency: node.price_currency,\n          seller,\n          itemOffered,\n        }\n      })\n      .filter(offer => !!offer)\n  return offers\n}\n\nexport const productAttributes = (\n  artist: ArtistMeta_artist,\n  artwork: ArtworkNode\n) => {\n  const image = imageObjectAttributes(artwork)\n  const offers = offerAttributes(artwork)\n\n  if (!offers) return null\n\n  return {\n    \"@type\": \"Product\",\n    additionalType: artwork.category,\n    productionDate: artwork.date,\n    name: artwork.title,\n    url: `${sd.APP_URL}${artwork.href}`,\n    image,\n    offers,\n    brand: {\n      \"@type\": \"Person\",\n      name: artist.name,\n    },\n  }\n}\n\nexport const offerAttributes = (artwork: ArtworkNode) => {\n  if (!artwork.listPrice) return null\n  switch (artwork.listPrice.__typename) {\n    case \"PriceRange\":\n      if (!artwork.listPrice.minPrice || !artwork.listPrice.maxPrice) {\n        return null\n      }\n      return {\n        \"@type\": \"AggregateOffer\",\n        lowPrice: artwork.listPrice.minPrice.major,\n        highPrice: artwork.listPrice.maxPrice.major,\n        priceCurrency: artwork.listPrice.maxPrice.currencyCode,\n      }\n    case \"Money\":\n      return {\n        \"@type\": \"Offer\",\n        price: artwork.listPrice.major,\n        priceCurrency: artwork.listPrice.currencyCode,\n        availability: \"InStock\",\n      }\n    default:\n      return null\n  }\n}\n\nexport const structuredDataAttributes = (artist: ArtistMeta_artist) => {\n  let makesOffer = offersAttributes(artist)\n  if (makesOffer && makesOffer.length === 0) {\n    makesOffer = undefined\n  }\n  const attributes = {\n    additionalType: \"Artist\",\n    image: artist.image ? artist.image.large : \"\",\n    name: artist.name,\n    url: `${sd.APP_URL}${artist.href}`,\n    gender: artist.gender,\n    birthDate: artist.birthday,\n    deathDate: artist.deathday,\n    mainEntityOfPage: `${sd.APP_URL}${artist.href}`,\n    description: artist.meta ? artist.meta.description : \"\",\n    nationality: {\n      \"@type\": \"Country\",\n      name: artist.nationality,\n    },\n    makesOffer,\n  }\n  return pickBy(attributes, identity)\n}\n\nexport class ArtistMeta extends Component<Props> {\n  renderImageMetaTags() {\n    const { artist } = this.props\n    const hasImage = artist.image && artist.image.versions.length\n    if (hasImage && artist.image.versions.indexOf(\"large\") !== -1) {\n      return (\n        <>\n          <Meta property=\"twitter:card\" content=\"summary_large_image\" />\n          <Meta property=\"og:image\" content={artist.image.large} />\n          <Meta name=\"thumbnail\" content={artist.image.square} />\n        </>\n      )\n    } else {\n      return (\n        <>\n          <Meta property=\"twitter:card\" content=\"summary\" />\n        </>\n      )\n    }\n  }\n\n  maybeRenderNoIndex() {\n    const { artist } = this.props\n    if (artist.counts.artworks === 0 && !artist.blurb) {\n      return (\n        <>\n          <Meta name=\"robots\" content=\"noindex, follow\" />\n        </>\n      )\n    }\n  }\n\n  renderStructuredData() {\n    const { artist } = this.props\n\n    return <SeoDataForArtist data={structuredDataAttributes(artist)} />\n  }\n\n  render() {\n    const { artist } = this.props\n    return (\n      <>\n        <Title>{artist.meta.title}</Title>\n        <Link rel=\"canonical\" href={`${sd.APP_URL}/artist/${artist.id}`} />\n        <Meta property=\"og:title\" content={artist.meta.title} />\n        <Meta name=\"description\" content={artist.meta.description} />\n        <Meta property=\"og:description\" content={artist.meta.description} />\n        <Meta\n          property=\"twitter:description\"\n          content={artist.meta.description}\n        />\n        <Meta property=\"og:url\" href={`${sd.APP_URL}/artist/${artist.id}`} />\n        <Meta property=\"og:type\" href={`${sd.FACEBOOK_APP_NAMESPACE}:artist`} />\n        {artist.alternate_names && (\n          <Meta\n            name=\"skos:prefLabel\"\n            content={artist.alternate_names.join(\"; \")}\n          />\n        )}\n\n        {artist.nationality && (\n          <Meta property=\"og:nationality\" content={artist.nationality} />\n        )}\n        {artist.birthday && (\n          <Meta property=\"og:birthyear\" content={artist.birthday} />\n        )}\n        {artist.deathday && (\n          <Meta property=\"og:deathyear\" content={artist.deathday} />\n        )}\n        {this.renderImageMetaTags()}\n        {this.maybeRenderNoIndex()}\n        {this.renderStructuredData()}\n      </>\n    )\n  }\n}\n\nexport const ArtistMetaFragmentContainer = createFragmentContainer(ArtistMeta, {\n  artist: graphql`\n    fragment ArtistMeta_artist on Artist {\n      id\n      name\n      nationality\n      birthday\n      deathday\n      gender\n      href\n      meta {\n        title\n        description\n      }\n      alternate_names\n      image {\n        versions\n        large: url(version: \"large\")\n        square: url(version: \"square\")\n      }\n      counts {\n        artworks\n      }\n      blurb\n      artworks_connection(first: 10, filter: IS_FOR_SALE, published: true) {\n        edges {\n          node {\n            title\n            date\n            description\n            category\n            price_currency\n            listPrice {\n              __typename\n              ... on PriceRange {\n                minPrice {\n                  major\n                }\n                maxPrice {\n                  major\n                  currencyCode\n                }\n              }\n              ... on Money {\n                major\n                currencyCode\n              }\n            }\n            availability\n            href\n            image {\n              small: url(version: \"small\")\n              large: url(version: \"large\")\n            }\n            partner {\n              name\n              href\n              profile {\n                image {\n                  small: url(version: \"small\")\n                  large: url(version: \"large\")\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `,\n})\n"],"file":"ArtistMeta.js"}