{"version":3,"sources":["../../../../../src/Apps/Artist/Routes/Articles/ArtistArticles.tsx"],"names":["PAGE_SIZE","Container","styled","div","ArtistArticles","isLoading","props","artist","articlesConnection","pageInfo","hasNextPage","endCursor","loadAfter","cursor","toggleLoading","relay","refetch","first","after","artistID","id","before","last","error","console","setState","articlesLength","edges","length","state","map","index","node","thumbnail_title","thumbnail_image","resized","url","published_at","author","name","href","pageCursors","loadNext","Component","ArtistArticlesRefetchContainer"],"mappings":"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","sourcesContent":["import { Box, Col, Row } from \"@artsy/palette\"\nimport { ArtistArticles_artist } from \"__generated__/ArtistArticles_artist.graphql\"\nimport { PaginationFragmentContainer as Pagination } from \"Components/v2\"\nimport React, { Component } from \"react\"\nimport { createRefetchContainer, graphql, RelayRefetchProp } from \"react-relay\"\nimport styled from \"styled-components\"\nimport { ArticleItem } from \"./ArtistArticle\"\n\nimport { LoadingArea, LoadingAreaState } from \"Components/v2/LoadingArea\"\n\nconst PAGE_SIZE = 10\n\nconst Container = styled.div`\n  &:last-child {\n    border-bottom: none;\n  }\n`\n\ninterface ArtistArticlesProps {\n  relay: RelayRefetchProp\n  artist: ArtistArticles_artist\n}\n\nexport class ArtistArticles extends Component<\n  ArtistArticlesProps,\n  LoadingAreaState\n> {\n  state = {\n    isLoading: false,\n  }\n\n  loadNext = () => {\n    const {\n      artist: {\n        articlesConnection: {\n          pageInfo: { hasNextPage, endCursor },\n        },\n      },\n    } = this.props\n\n    if (hasNextPage) {\n      this.loadAfter(endCursor)\n    }\n  }\n\n  loadAfter = cursor => {\n    this.toggleLoading(true)\n\n    this.props.relay.refetch(\n      {\n        first: PAGE_SIZE,\n        after: cursor,\n        artistID: this.props.artist.id,\n        before: null,\n        last: null,\n      },\n      null,\n      error => {\n        this.toggleLoading(false)\n\n        if (error) {\n          console.error(error)\n        }\n      }\n    )\n  }\n\n  toggleLoading = isLoading => {\n    this.setState({\n      isLoading,\n    })\n  }\n\n  render() {\n    const articlesLength = this.props.artist.articlesConnection.edges.length\n    return (\n      <>\n        <span id=\"jumpto--artistArticles\" />\n\n        <Row>\n          <Col>\n            <LoadingArea isLoading={this.state.isLoading}>\n              <Container>\n                {this.props.artist.articlesConnection.edges.map(\n                  ({ node }, index) => {\n                    return (\n                      <ArticleItem\n                        title={node.thumbnail_title}\n                        imageUrl={node.thumbnail_image.resized.url}\n                        date={node.published_at}\n                        author={node.author.name}\n                        href={node.href}\n                        key={index}\n                        lastChild={index === articlesLength - 1}\n                      />\n                    )\n                  }\n                )}\n              </Container>\n            </LoadingArea>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Box>\n              <Pagination\n                pageCursors={this.props.artist.articlesConnection.pageCursors}\n                onClick={this.loadAfter}\n                onNext={this.loadNext}\n                scrollTo=\"#jumpto-ArtistHeader\"\n                hasNextPage={\n                  this.props.artist.articlesConnection.pageInfo.hasNextPage\n                }\n              />\n            </Box>\n          </Col>\n        </Row>\n      </>\n    )\n  }\n}\n\nexport const ArtistArticlesRefetchContainer = createRefetchContainer(\n  ArtistArticles,\n  {\n    artist: graphql`\n      fragment ArtistArticles_artist on Artist\n        @argumentDefinitions(\n          first: { type: \"Int\", defaultValue: 10 }\n          last: { type: \"Int\" }\n          after: { type: \"String\" }\n          before: { type: \"String\" }\n        ) {\n        id\n        articlesConnection(\n          first: $first\n          after: $after\n          before: $before\n          last: $last\n          sort: PUBLISHED_AT_DESC\n          in_editorial_feed: true\n        ) {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          pageCursors {\n            ...Pagination_pageCursors\n          }\n          edges {\n            node {\n              href\n              thumbnail_title\n              author {\n                name\n              }\n              published_at(format: \"MMM Do, YYYY\")\n              thumbnail_image {\n                resized(width: 300) {\n                  url\n                }\n              }\n              href\n            }\n          }\n        }\n      }\n    `,\n  },\n  graphql`\n    query ArtistArticlesQuery(\n      $first: Int\n      $last: Int\n      $after: String\n      $before: String\n      $artistID: String!\n    ) {\n      artist(id: $artistID) {\n        ...ArtistArticles_artist\n          @arguments(first: $first, last: $last, after: $after, before: $before)\n      }\n    }\n  `\n)\n"],"file":"ArtistArticles.js"}