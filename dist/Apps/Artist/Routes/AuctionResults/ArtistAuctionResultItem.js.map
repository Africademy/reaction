{"version":3,"sources":["../../../../../src/Apps/Artist/Routes/AuctionResults/ArtistAuctionResultItem.tsx"],"names":["ArtistAuctionResultItem","props","SystemContext","user","mediator","className","renderChildren","lastChild","LargeAuctionItem","getProps","auctionResult","dimension_text","images","date_text","organization","sale_date_text","title","salePrice","truncatedDescription","estimatedPrice","imageUrl","i","thumbnail","url","AuctionResultsState","state","showDetailsModal","renderPricing","SmallAuctionItem","ExtraSmallAuctionItem","AuctionResultItemFragmentContainer","FullDescriptionLink","styled","span","displayName","getSalePrice","price_realized","cents_usd","display","getDescription","fullDescription","substr","description","estimate","size","btnSize","trigger","mode","copy"],"mappings":"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","sourcesContent":["import { Col, Row } from \"@artsy/palette\"\nimport { ArtistAuctionResultItem_auctionResult } from \"__generated__/ArtistAuctionResultItem_auctionResult.graphql\"\nimport { SystemContextProps } from \"Artsy\"\nimport { Mediator, SystemContext } from \"Artsy\"\nimport React, { SFC, useContext } from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport styled from \"styled-components\"\nimport { Subscribe } from \"unstated\"\nimport { Media } from \"Utils/Responsive\"\nimport { AuctionResultsState } from \"./state\"\n\nimport {\n  Box,\n  Button,\n  Flex,\n  Image,\n  Separator,\n  Serif,\n  Spacer,\n} from \"@artsy/palette\"\nimport { get } from \"Utils/get\"\n\nexport interface Props extends SystemContextProps {\n  auctionResult: ArtistAuctionResultItem_auctionResult\n  mediator?: Mediator\n  lastChild: boolean\n}\n\n// TODO: This whole component should be refactored to use less `Media` decisions\nexport const ArtistAuctionResultItem: SFC<Props> = props => {\n  const { user, mediator } = useContext(SystemContext)\n  return (\n    <>\n      <Media at=\"xs\">\n        {(className, renderChildren) => (\n          <Row className={className}>\n            {renderChildren && (\n              <ExtraSmallAuctionItem\n                {...props}\n                mediator={mediator}\n                user={user}\n              />\n            )}\n          </Row>\n        )}\n      </Media>\n      <Media between={[\"sm\", \"lg\"]}>\n        {(className, renderChildren) => (\n          <Row className={className}>\n            {renderChildren && (\n              <SmallAuctionItem {...props} mediator={mediator} user={user} />\n            )}\n          </Row>\n        )}\n      </Media>\n      <Media greaterThanOrEqual=\"lg\">\n        {(className, renderChildren) => (\n          <Row className={className}>\n            {renderChildren && (\n              <LargeAuctionItem {...props} mediator={mediator} user={user} />\n            )}\n          </Row>\n        )}\n      </Media>\n      <Col>\n        <Box pt={2} pb={1}>\n          {!props.lastChild && <Separator />}\n        </Box>\n      </Col>\n    </>\n  )\n}\n\nconst LargeAuctionItem: SFC<Props> = props => {\n  const {\n    auctionResult: {\n      dimension_text,\n      images,\n      date_text,\n      organization,\n      sale_date_text,\n      title,\n    },\n    salePrice,\n    truncatedDescription,\n    estimatedPrice,\n  } = getProps(props)\n\n  const imageUrl = get(images, i => i.thumbnail.url, \"\")\n  return (\n    <Subscribe to={[AuctionResultsState]}>\n      {({ state, showDetailsModal }: AuctionResultsState) => {\n        return (\n          <>\n            <Col sm={1}>\n              <Box height=\"auto\" pr={2}>\n                <Image width=\"70px\" src={imageUrl} />\n              </Box>\n            </Col>\n            <Col sm={4}>\n              <Box pl={1} pr={6}>\n                <Serif size=\"2\" italic>\n                  {title && title + \",\"}\n                  {date_text}\n                </Serif>\n                <Serif size=\"2\">{dimension_text}</Serif>\n                <Spacer pt={1} />\n                <Serif size=\"1\" color=\"black60\">\n                  {truncatedDescription}\n                </Serif>\n              </Box>\n            </Col>\n            <Col sm={3}>\n              <Box pr={2}>\n                <Serif size=\"2\">{organization}</Serif>\n                <Serif size=\"2\" color=\"black60\">\n                  {sale_date_text}\n                </Serif>\n                <Serif size=\"2\" color=\"black60\">\n                  <FullDescriptionLink onClick={() => showDetailsModal(props)}>\n                    Full description\n                  </FullDescriptionLink>\n                </Serif>\n              </Box>\n            </Col>\n            <Col sm={4}>\n              {renderPricing(\n                salePrice,\n                estimatedPrice,\n                props.user,\n                props.mediator,\n                \"lg\"\n              )}\n            </Col>\n          </>\n        )\n      }}\n    </Subscribe>\n  )\n}\n\nconst SmallAuctionItem: SFC<Props> = props => {\n  const {\n    auctionResult: { dimension_text, images, date_text, title },\n    salePrice,\n    truncatedDescription,\n    estimatedPrice,\n  } = getProps(props)\n  const imageUrl = get(images, i => i.thumbnail.url, \"\")\n\n  return (\n    <>\n      <Col sm={6}>\n        <Flex>\n          <Box height=\"auto\">\n            <Image width=\"70px\" src={imageUrl} />\n          </Box>\n\n          <Spacer mr={2} />\n\n          <Box pr={4}>\n            <Serif size=\"2\" italic>\n              {title && title + \",\"}\n              {date_text}\n            </Serif>\n            <Serif size=\"2\">{dimension_text}</Serif>\n            <Spacer pt={1} />\n            <Serif size=\"1\" color=\"black60\">\n              {truncatedDescription}\n            </Serif>\n          </Box>\n        </Flex>\n      </Col>\n      <Col sm={6}>\n        {renderPricing(\n          salePrice,\n          estimatedPrice,\n          props.user,\n          props.mediator,\n          \"sm\"\n        )}\n      </Col>\n    </>\n  )\n}\n\nconst ExtraSmallAuctionItem: SFC<Props> = props => {\n  const {\n    auctionResult: {\n      dimension_text,\n      images,\n      date_text,\n      organization,\n      sale_date_text,\n      title,\n    },\n    salePrice,\n    estimatedPrice,\n  } = getProps(props)\n  const imageUrl = get(images, i => i.thumbnail.url, \"\")\n\n  return (\n    <>\n      <Col>\n        <Flex>\n          <Box height=\"auto\">\n            <Image width=\"70px\" src={imageUrl} />\n          </Box>\n\n          <Spacer mr={2} />\n\n          <Box>\n            <Serif size=\"2\" italic>\n              {title && title + \",\"}\n              {date_text}\n            </Serif>\n            <Serif size=\"2\">{dimension_text}</Serif>\n\n            <Spacer pb={1} />\n\n            <Serif size=\"2\">{organization}</Serif>\n            <Serif size=\"2\" color=\"black60\">\n              {sale_date_text}\n            </Serif>\n\n            <Spacer pb={1} />\n            {renderPricing(\n              salePrice,\n              estimatedPrice,\n              props.user,\n              props.mediator,\n              \"xs\"\n            )}\n          </Box>\n        </Flex>\n      </Col>\n    </>\n  )\n}\n\nexport const AuctionResultItemFragmentContainer = createFragmentContainer(\n  ArtistAuctionResultItem,\n  {\n    auctionResult: graphql`\n      fragment ArtistAuctionResultItem_auctionResult on AuctionResult {\n        title\n        dimension_text\n        organization\n        images {\n          thumbnail {\n            url\n          }\n        }\n        description\n        date_text\n        sale_date_text\n        price_realized {\n          display\n          cents_usd\n        }\n        estimate {\n          display\n        }\n      }\n    `,\n  }\n)\n\nconst FullDescriptionLink = styled.span`\n  cursor: pointer;\n  text-decoration: underline;\n`\n\nFullDescriptionLink.displayName = \"FullDescriptionLink\"\n\n// Helpers\n\nconst getSalePrice = price_realized => {\n  const salePrice =\n    price_realized.cents_usd === 0 ? null : price_realized.display\n  return salePrice\n}\n\nconst getDescription = (fullDescription: string) => {\n  let truncatedDescription\n  if (fullDescription) {\n    truncatedDescription = fullDescription.substr(0, 200)\n    return truncatedDescription + \"...\"\n  }\n  return truncatedDescription\n}\n\nconst getProps = (props: Props) => {\n  const {\n    auctionResult: { description, estimate, price_realized },\n  } = props\n\n  const salePrice = getSalePrice(price_realized)\n  const truncatedDescription = getDescription(description)\n  const estimatedPrice = estimate.display\n\n  return {\n    ...props,\n    salePrice,\n    truncatedDescription,\n    estimatedPrice,\n  }\n}\n\nconst renderPricing = (salePrice, estimatedPrice, user, mediator, size) => {\n  if (user) {\n    return (\n      <>\n        {salePrice && <Serif size=\"2\">{`Sale: ${salePrice}`}</Serif>}\n        {estimatedPrice && (\n          <Serif size=\"2\" color=\"black60\">\n            Est: {estimatedPrice}\n          </Serif>\n        )}\n      </>\n    )\n  } else {\n    const btnSize = size === \"xs\" || \"sm\" ? \"small\" : \"large\"\n    return (\n      <Button\n        size={btnSize}\n        variant=\"secondaryOutline\"\n        onClick={() => {\n          mediator &&\n            mediator.trigger(\"open:auth\", {\n              mode: \"register\",\n              copy: \"Sign up to see full auction records — for free\",\n            })\n        }}\n      >\n        Sign up to see price\n      </Button>\n    )\n  }\n}\n"],"file":"ArtistAuctionResultItem.js"}