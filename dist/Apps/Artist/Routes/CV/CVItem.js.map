{"version":3,"sources":["../../../../../src/Apps/Artist/Routes/CV/CVItem.tsx"],"names":["PAGE_SIZE","ShowMoreButton","props","CVItem","isLoading","entries","size","undefined","map","key","node","hasMore","artist","showsConnection","pageInfo","hasNextPage","setState","relay","loadMore","error","console","edges","length","groupedByYear","show","start_at","xs","sm","md","sectionSpace","category","Object","keys","sort","reverse","year","index","isFirst","yearGroup","renderEntries","state","Component","CVPaginationContainer","direction","getConnectionFromProps","getFragmentVariables","prevVars","totalCount","count","getVariables","fragmentVariables","cursor","artistID","id","query","CVItems","Box","Year","Serif","Category","Sans","displayName"],"mappings":"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","sourcesContent":["import { Col, Row } from \"@artsy/palette\"\nimport { CVItem_artist } from \"__generated__/CVItem_artist.graphql\"\nimport { groupBy } from \"lodash\"\nimport React, { Component } from \"react\"\nimport styled from \"styled-components\"\nimport { Responsive } from \"Utils/Responsive\"\n\nimport {\n  Box,\n  Button,\n  Flex,\n  Sans,\n  Separator,\n  Serif,\n  space,\n  Spacer,\n} from \"@artsy/palette\"\n\nimport {\n  createPaginationContainer,\n  graphql,\n  RelayPaginationProp,\n} from \"react-relay\"\nimport { ShowEntry } from \"./ShowEntry\"\n\nexport const PAGE_SIZE = 10\n\nconst ShowMoreButton = props => (\n  <Button variant=\"secondaryOutline\" size=\"medium\" {...props}>\n    Show more\n  </Button>\n)\n\nexport interface CVItemProps {\n  relay: RelayPaginationProp\n  artist: CVItem_artist\n  category: string\n}\n\ninterface CVItemState {\n  isLoading: boolean\n}\n\nexport class CVItem extends Component<CVItemProps, CVItemState> {\n  state = {\n    isLoading: false,\n  }\n\n  loadMore() {\n    const hasMore = this.props.artist.showsConnection.pageInfo.hasNextPage\n\n    if (hasMore) {\n      this.setState({\n        isLoading: true,\n      })\n\n      this.props.relay.loadMore(PAGE_SIZE, error => {\n        if (error) {\n          console.error(error)\n        }\n\n        this.setState({\n          isLoading: false,\n        })\n      })\n    }\n  }\n\n  get hasMore() {\n    const hasMore = this.props.artist.showsConnection.pageInfo.hasNextPage\n    return hasMore\n  }\n\n  renderEntries = (entries, size = undefined) =>\n    entries.map(({ node }, key) => (\n      <ShowEntry node={node} key={key} size={size} />\n    ))\n\n  render() {\n    if (\n      !this.props.artist.showsConnection ||\n      !this.props.artist.showsConnection.edges.length\n    ) {\n      return null\n    }\n\n    const groupedByYear = groupBy(\n      this.props.artist.showsConnection.edges,\n      ({ node: show }) => {\n        return show.start_at\n      }\n    )\n\n    return (\n      <Responsive>\n        {({ xs, sm, md }) => {\n          // Element spacing - correction for lineheight\n          const sectionSpace = space(4) - 4\n\n          return (\n            <CVItems className=\"cvItems\">\n              {(xs || sm || md) && (\n                <Row>\n                  <Col>\n                    <Category size={xs ? \"2\" : \"3\"} weight=\"medium\">\n                      {this.props.category}\n                    </Category>\n                    <Spacer mb={xs ? 0.5 : 1} />\n                  </Col>\n                </Row>\n              )}\n              {Object.keys(groupedByYear)\n                .sort()\n                .reverse()\n                .map((year, index) => {\n                  const isFirst = index === 0\n                  const yearGroup = groupedByYear[year]\n                  return xs ? (\n                    <Flex key={index}>\n                      <Year size=\"2\" mr={1}>\n                        {year}\n                      </Year>\n                      <Box>{this.renderEntries(yearGroup, \"2\")}</Box>\n                    </Flex>\n                  ) : (\n                    <Row key={index}>\n                      {!sm && !md && (\n                        <Col xl={2} lg={2}>\n                          {isFirst && (\n                            <Category size=\"3\" weight=\"medium\">\n                              {this.props.category}\n                            </Category>\n                          )}\n                        </Col>\n                      )}\n                      <Col lg={1} md={2} sm={2}>\n                        <Year mr={2} size=\"3\">\n                          {year}\n                        </Year>\n                      </Col>\n                      <Col md={8} lg={9} xl={9} sm={10}>\n                        {this.renderEntries(yearGroup)}\n                      </Col>\n                    </Row>\n                  )\n                })}\n\n              {this.hasMore && (\n                <Row>\n                  <Col xs={0} sm={0} md={0} lg={2} xl={2} />\n                  <Col lgOffset={2} xlOffset={2} lg={10} xl={10}>\n                    <ShowMoreButton\n                      onClick={() => this.loadMore()}\n                      loading={this.state.isLoading ? true : false}\n                      width={xs ? \"100%\" : \"\"}\n                      mt={xs ? 1 : 2}\n                    />\n\n                    {xs && <Spacer mb={1} />}\n                  </Col>\n                </Row>\n              )}\n\n              <div className=\"cvSeparator\">\n                {xs ? <Spacer mt={1} /> : <Separator my={sectionSpace} />}\n              </div>\n            </CVItems>\n          )\n        }}\n      </Responsive>\n    )\n  }\n}\n\nexport const CVPaginationContainer = createPaginationContainer(\n  CVItem,\n  {\n    artist: graphql`\n      fragment CVItem_artist on Artist\n        @argumentDefinitions(\n          count: { type: \"Int\", defaultValue: 10 }\n          cursor: { type: \"String\" }\n          sort: { type: \"PartnerShowSorts\", defaultValue: START_AT_DESC }\n          at_a_fair: { type: \"Boolean\", defaultValue: false }\n          solo_show: { type: \"Boolean\", defaultValue: false }\n          is_reference: { type: \"Boolean\", defaultValue: true }\n          visible_to_public: { type: \"Boolean\", defaultValue: false }\n        ) {\n        id\n        showsConnection(\n          first: $count\n          after: $cursor\n          sort: $sort\n          at_a_fair: $at_a_fair\n          solo_show: $solo_show\n          is_reference: $is_reference\n          visible_to_public: $visible_to_public\n        ) @connection(key: \"Artist_showsConnection\") {\n          pageInfo {\n            hasNextPage\n          }\n          edges {\n            node {\n              __id\n              partner {\n                ... on ExternalPartner {\n                  name\n                }\n                ... on Partner {\n                  name\n                  href\n                }\n              }\n              name\n              start_at(format: \"YYYY\")\n              city\n              href\n            }\n          }\n        }\n      }\n    `,\n  },\n  {\n    direction: \"forward\",\n    getConnectionFromProps(props) {\n      return props.artist.showsConnection\n    },\n    getFragmentVariables(prevVars, totalCount) {\n      return { ...prevVars, count: totalCount }\n    },\n    getVariables(props, { count, cursor }, fragmentVariables) {\n      return {\n        // in most cases, for variables other than connection filters like\n        // `first`, `after`, etc. you may want to use the previous values.\n        ...fragmentVariables,\n        count,\n        cursor,\n        artistID: props.artist.id,\n      }\n    },\n    query: graphql`\n      query CVItemQuery(\n        $count: Int\n        $cursor: String\n        $artistID: String!\n        $sort: PartnerShowSorts\n        $at_a_fair: Boolean\n        $solo_show: Boolean\n        $is_reference: Boolean\n        $visible_to_public: Boolean\n      ) {\n        artist(id: $artistID) {\n          ...CVItem_artist\n            @arguments(\n              sort: $sort\n              count: $count\n              cursor: $cursor\n              at_a_fair: $at_a_fair\n              solo_show: $solo_show\n              is_reference: $is_reference\n              visible_to_public: $visible_to_public\n            )\n        }\n      }\n    `,\n  }\n)\n\nconst CVItems = styled(Box)``\nconst Year = Serif\nconst Category = Sans\n\nYear.displayName = \"Year\"\nCategory.displayName = \"Category\"\n"],"file":"CVItem.js"}