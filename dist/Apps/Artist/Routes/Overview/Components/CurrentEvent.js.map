{"version":3,"sources":["../../../../../../src/Apps/Artist/Routes/Overview/Components/CurrentEvent.tsx"],"names":["CurrentEvent","props","Component","LargeCurrentEvent","action_type","Schema","ActionType","Click","subject","artist","currentEvent","event","__typename","ActionName","InSale","InShow","destination_path","href","image","status","name","details","partner","handleClick","bind","resized","url","CurrentEventFragmentContainer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAMaA,Y;;;;;;;;;;;;;6BACF;AACP,aACE,6BAAC,iBAAD;AAAO,QAAA,WAAW,EAAC;AAAnB,SACE,6BAAC,iBAAD,EAAuB,KAAKC,KAA5B,CADF,CADF;AAKD;;;;EAP+BC,gB,GAUlC;;;;IAGaC,iB,WADZ,uB,UAEE,sBAAyB,UAAAF,KAAK;AAAA,SAAK;AAClCG,IAAAA,WAAW,EAAEC,MAAM,CAACC,UAAP,CAAkBC,KADG;AAElCC,IAAAA,OAAO,EACLP,KAAK,CAACQ,MAAN,CAAaC,YAAb,CAA0BC,KAA1B,CAAgCC,UAAhC,KAA+C,MAA/C,GACI;AACAP,IAAAA,MAAM,CAACQ,UAAP,CAAkBC,MAFtB,GAGIT,MAAM,CAACQ,UAAP,CAAkBE,MANU;AAOlCC,IAAAA,gBAAgB,EAAEf,KAAK,CAACQ,MAAN,CAAaC,YAAb,CAA0BO;AAPV,GAAL;AAAA,CAA9B,C;;;;;;;;;;;;;kCASa,CACZ;AACD;;;6BAEQ;AACP,UAAMhB,KAAK,GAAG,KAAKA,KAAnB;;AACA,UAAI,CAACA,KAAK,CAACQ,MAAN,CAAaC,YAAlB,EAAgC;AAC9B,eAAO,IAAP;AACD;;AAJM,kCAOHT,KAAK,CAACQ,MAPH,CAMLC,YANK;AAAA,UAMWQ,KANX,yBAMWA,KANX;AAAA,UAMkBC,MANlB,yBAMkBA,MANlB;AAAA,UAM0BC,IAN1B,yBAM0BA,IAN1B;AAAA,UAMgCC,OANhC,yBAMgCA,OANhC;AAAA,UAMyCC,OANzC,yBAMyCA,OANzC;AAAA,UAMkDL,IANlD,yBAMkDA,IANlD;AASP,aACE;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,SAAS,EAAC,aAFZ;AAGE,QAAA,OAAO,EAAE,KAAKM,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB;AAHX,SAKE,6BAAC,aAAD;AAAM,QAAA,aAAa,EAAC;AAApB,SACGN,KAAK,IACJ,6BAAC,YAAD;AAAK,QAAA,KAAK,EAAC,MAAX;AAAkB,QAAA,MAAM,EAAC;AAAzB,SACE,6BAAC,cAAD;AAAO,QAAA,GAAG,EAAEA,KAAK,CAACO,OAAN,CAAcC,GAA1B;AAA+B,QAAA,KAAK,EAAC,MAArC;AAA4C,QAAA,EAAE,EAAE;AAAhD,QADF,CAFJ,EAME,6BAAC,aAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAe,QAAA,MAAM,EAAC,QAAtB;AAA+B,QAAA,EAAE,EAAE;AAAnC,SACGP,MADH,CANF,EASE,6BAAC,cAAD;AAAO,QAAA,IAAI,EAAC;AAAZ,SAAkBC,IAAlB,CATF,EAUGE,OAAO,IACN,6BAAC,cAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,EAAC;AAAtB,SACGA,OADH,CAXJ,EAeE,6BAAC,cAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,EAAC;AAAtB,SACGD,OADH,CAfF,CALF,CADF;AA2BD;;;;EAlDoCnB,gB;;AAqDhC,IAAMyB,6BAA6B,GAAG,yCAC3C3B,YAD2C,EAE3C;AACES,EAAAA,MAAM;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADR,CAF2C,CAAtC","sourcesContent":["import { Box, Flex, Image, Sans, Serif } from \"@artsy/palette\"\nimport { CurrentEvent_artist } from \"__generated__/CurrentEvent_artist.graphql\"\nimport { track } from \"Artsy/Analytics\"\nimport * as Schema from \"Artsy/Analytics/Schema\"\nimport React, { Component } from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { Media } from \"Utils/Responsive\"\n\nexport interface CurrentEventProps {\n  artist: CurrentEvent_artist\n}\n\nexport class CurrentEvent extends Component<CurrentEventProps> {\n  render() {\n    return (\n      <Media greaterThan=\"xs\">\n        <LargeCurrentEvent {...this.props} />\n      </Media>\n    )\n  }\n}\n\n// const track: Track<CurrentEventProps> = _track\n\n@track()\nexport class LargeCurrentEvent extends Component<CurrentEventProps> {\n  @track<CurrentEventProps>(props => ({\n    action_type: Schema.ActionType.Click,\n    subject:\n      props.artist.currentEvent.event.__typename === \"Sale\"\n        ? // TODO: These are not action names!\n          Schema.ActionName.InSale\n        : Schema.ActionName.InShow,\n    destination_path: props.artist.currentEvent.href,\n  }))\n  handleClick() {\n    // no-op\n  }\n\n  render() {\n    const props = this.props\n    if (!props.artist.currentEvent) {\n      return null\n    }\n    const {\n      currentEvent: { image, status, name, details, partner, href },\n    } = props.artist\n\n    return (\n      <a\n        href={href}\n        className=\"noUnderline\"\n        onClick={this.handleClick.bind(this)}\n      >\n        <Flex flexDirection=\"column\">\n          {image && (\n            <Box width=\"100%\" height=\"auto\">\n              <Image src={image.resized.url} width=\"100%\" mb={1} />\n            </Box>\n          )}\n          <Sans size=\"2\" weight=\"medium\" my={0.5}>\n            {status}\n          </Sans>\n          <Serif size=\"3t\">{name}</Serif>\n          {partner && (\n            <Serif size=\"2\" color=\"black60\">\n              {partner}\n            </Serif>\n          )}\n          <Serif size=\"2\" color=\"black60\">\n            {details}\n          </Serif>\n        </Flex>\n      </a>\n    )\n  }\n}\n\nexport const CurrentEventFragmentContainer = createFragmentContainer(\n  CurrentEvent,\n  {\n    artist: graphql`\n      fragment CurrentEvent_artist on Artist {\n        currentEvent {\n          event {\n            __typename\n          }\n          image {\n            resized(width: 300) {\n              url\n            }\n          }\n          name\n          status\n          details\n          partner\n          href\n        }\n      }\n    `,\n  }\n)\n"],"file":"CurrentEvent.js"}