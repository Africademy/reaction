{"version":3,"sources":["../../../../../../src/Apps/Artist/Routes/Overview/Components/Genes.tsx"],"names":["GeneFamily","styled","div","GeneLink","a","space","Genes","related","props","artist","genes","edges","length","map","index","list","gene","node","geneDivider","href","sd","APP_URL","name","Component","GenesFragmentContainer"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,UAAU,GAAGC,0BAAOC,GAAV;AAAA;AAAA;AAAA,QAAhB;;AACA,IAAMC,QAAQ,GAAGF,0BAAOG,CAAV;AAAA;AAAA;AAAA,mCAEVC,mBAFU,CAAd;;IASaC,K;;;;;;;;;;;;;6BACF;AAAA,UACCC,OADD,GACa,KAAKC,KAAL,CAAWC,MADxB,CACCF,OADD;AAAA,UAECG,KAFD,GAEWH,OAFX,CAECG,KAFD;;AAGP,UAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,eAAO,IAAP;AACD;;AACD,aACE,6BAAC,UAAD,QACE,6BAAC,aAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAe,QAAA,MAAM,EAAC;AAAtB,8BADF,EAIE,6BAAC,eAAD;AAAQ,QAAA,EAAE,EAAE;AAAZ,QAJF,EAKGF,KAAK,CAACC,KAAN,CAAYE,GAAZ,CAAgB,gBAAiBC,KAAjB,EAAwBC,IAAxB,EAAiC;AAAA,YAAxBC,IAAwB,QAA9BC,IAA8B;AAChD,YAAMC,WAAW,GAAGJ,KAAK,GAAGC,IAAI,CAACH,MAAL,GAAc,CAAtB,GAA0B,GAA1B,GAAgC,EAApD;AACA,YAAMO,IAAI,GAAGC,cAAGC,OAAH,GAAaL,IAAI,CAACG,IAA/B;AACA,eACE,6BAAC,cAAD;AAAO,UAAA,IAAI,EAAC,IAAZ;AAAiB,UAAA,OAAO,EAAC,cAAzB;AAAwC,UAAA,GAAG,EAAEL,KAA7C;AAAoD,UAAA,EAAE,EAAE;AAAxD,WACE,6BAAC,QAAD;AAAU,UAAA,IAAI,EAAEK,IAAhB;AAAsB,UAAA,SAAS,EAAC;AAAhC,WACGH,IAAI,CAACM,IADR,EAEGJ,WAFH,CADF,CADF;AAQD,OAXA,CALH,CADF;AAoBD;;;;EA3BwBK,gB;;;AA8BpB,IAAMC,sBAAsB,GAAG,yCAAwBlB,KAAxB,EAA+B;AACnEG,EAAAA,MAAM;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAD6D,CAA/B,CAA/B","sourcesContent":["import { Sans, Serif, Spacer } from \"@artsy/palette\"\nimport { Genes_artist } from \"__generated__/Genes_artist.graphql\"\nimport React, { Component } from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { data as sd } from \"sharify\"\nimport styled from \"styled-components\"\nimport { space } from \"styled-system\"\n\nconst GeneFamily = styled.div``\nconst GeneLink = styled.a`\n  display: inline-block;\n  ${space};\n`\n\ninterface Props {\n  artist: Genes_artist\n}\n\nexport class Genes extends Component<Props> {\n  render() {\n    const { related } = this.props.artist\n    const { genes } = related\n    if (genes.edges.length === 0) {\n      return null\n    }\n    return (\n      <GeneFamily>\n        <Sans size=\"2\" weight=\"medium\">\n          Related Categories\n        </Sans>\n        <Spacer mb={1} />\n        {genes.edges.map(({ node: gene }, index, list) => {\n          const geneDivider = index < list.length - 1 ? \",\" : \"\"\n          const href = sd.APP_URL + gene.href\n          return (\n            <Serif size=\"3t\" display=\"inline-block\" key={index} mr={0.5}>\n              <GeneLink href={href} className=\"noUnderline\">\n                {gene.name}\n                {geneDivider}\n              </GeneLink>\n            </Serif>\n          )\n        })}\n      </GeneFamily>\n    )\n  }\n}\n\nexport const GenesFragmentContainer = createFragmentContainer(Genes, {\n  artist: graphql`\n    fragment Genes_artist on Artist {\n      related {\n        genes {\n          edges {\n            node {\n              href\n              name\n            }\n          }\n        }\n      }\n    }\n  `,\n})\n"],"file":"Genes.js"}