{"version":3,"sources":["../../../../../src/Apps/Artist/Routes/Shows/ArtistShows.tsx"],"names":["PAGE_SIZE","ArtistShows","isLoading","props","artist","showsConnection","pageInfo","hasNextPage","endCursor","loadAfter","cursor","toggleLoading","relay","refetch","first","after","artistID","id","before","last","status","sort","error","console","setState","edges","length","my","heading","state","map","index","node","imageUrl","n","cover_image","cropped","url","partner","name","exhibition_period","href","city","pageCursors","loadNext","scrollTo","Component","ArtistShowsRefetchContainer"],"mappings":"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","sourcesContent":["import { Box, Col, Flex, Row, Sans, Spacer } from \"@artsy/palette\"\nimport { ArtistShows_artist } from \"__generated__/ArtistShows_artist.graphql\"\nimport { PaginationFragmentContainer as Pagination } from \"Components/v2\"\nimport React, { Component } from \"react\"\nimport { createRefetchContainer, graphql, RelayRefetchProp } from \"react-relay\"\nimport { get } from \"Utils/get\"\nimport { Media } from \"Utils/Responsive\"\nimport { ArtistShowBlockItem } from \"./ArtistShowBlockItem\"\nimport { ArtistShowListItem } from \"./ArtistShowListItem\"\n\nimport { LoadingArea, LoadingAreaState } from \"Components/v2/LoadingArea\"\n\ninterface ArtistShowsProps {\n  relay: RelayRefetchProp\n  artist: ArtistShows_artist\n  status: string\n  sort: string\n  scrollTo: string\n  heading: string\n  my?: number\n}\n\nexport const PAGE_SIZE = 4\n\nclass ArtistShows extends Component<ArtistShowsProps, LoadingAreaState> {\n  static defaultProps = {\n    my: 4,\n  }\n\n  state = {\n    isLoading: false,\n  }\n\n  loadNext = () => {\n    const {\n      artist: {\n        showsConnection: {\n          pageInfo: { hasNextPage, endCursor },\n        },\n      },\n    } = this.props\n\n    if (hasNextPage) {\n      this.loadAfter(endCursor)\n    }\n  }\n\n  loadAfter = cursor => {\n    this.toggleLoading(true)\n\n    this.props.relay.refetch(\n      {\n        first: PAGE_SIZE,\n        after: cursor,\n        artistID: this.props.artist.id,\n        before: null,\n        last: null,\n        status: this.props.status,\n        sort: this.props.sort,\n      },\n      null,\n      error => {\n        this.toggleLoading(false)\n\n        if (error) {\n          console.error(error)\n        }\n      }\n    )\n  }\n\n  toggleLoading = isLoading => {\n    this.setState({\n      isLoading,\n    })\n  }\n\n  render() {\n    if (\n      !this.props.artist.showsConnection ||\n      !this.props.artist.showsConnection.edges.length\n    ) {\n      return null\n    }\n    return (\n      <Box my={this.props.my}>\n        <>\n          <Row>\n            <Col>\n              <Row>\n                <Col>\n                  {/* Negative margin bottom to make space 20px from bottom of\n                    text to the image below */}\n                  <Sans size=\"3\" weight=\"medium\" mb={-0.5}>\n                    {this.props.heading}\n                  </Sans>\n                  <Spacer mb={2} />\n                  <LoadingArea isLoading={this.state.isLoading}>\n                    {this.props.status === \"running\" ? (\n                      <Flex flexDirection={[\"column\", \"row\"]} flexWrap=\"wrap\">\n                        {this.props.artist.showsConnection.edges.map(\n                          ({ node }, index) => {\n                            const imageUrl = get(\n                              node,\n                              n => n.cover_image.cropped.url\n                            )\n                            return (\n                              <React.Fragment key={index}>\n                                <ArtistShowBlockItem\n                                  blockWidth={[\"100%\", \"50%\"]}\n                                  imageUrl={imageUrl}\n                                  partner={node.partner && node.partner.name}\n                                  name={node.name}\n                                  exhibitionInfo={node.exhibition_period}\n                                  pr={[0, 2]}\n                                  pb={[0, 2]}\n                                  href={node.href}\n                                  city={node.city}\n                                />\n                                <Media at=\"xs\">\n                                  <Spacer mb={3} />\n                                </Media>\n                              </React.Fragment>\n                            )\n                          }\n                        )}\n                      </Flex>\n                    ) : (\n                      <Box>\n                        {this.props.artist.showsConnection.edges.map(\n                          ({ node }, index) => {\n                            return (\n                              <React.Fragment key={index}>\n                                <ArtistShowListItem\n                                  key={index}\n                                  city={node.city}\n                                  partner={node.partner && node.partner.name}\n                                  name={node.name}\n                                  exhibitionInfo={node.exhibition_period}\n                                  href={node.href}\n                                />\n\n                                <Media at=\"xs\">\n                                  <Spacer mb={3} />\n                                </Media>\n                              </React.Fragment>\n                            )\n                          }\n                        )}\n                      </Box>\n                    )}\n                  </LoadingArea>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col>\n                  <Box>\n                    <Pagination\n                      hasNextPage={\n                        this.props.artist.showsConnection.pageInfo.hasNextPage\n                      }\n                      pageCursors={\n                        this.props.artist.showsConnection.pageCursors\n                      }\n                      onClick={this.loadAfter}\n                      onNext={this.loadNext}\n                      scrollTo={this.props.scrollTo}\n                    />\n                  </Box>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </>\n      </Box>\n    )\n  }\n}\n\nexport const ArtistShowsRefetchContainer = createRefetchContainer(\n  ArtistShows,\n  {\n    artist: graphql`\n      fragment ArtistShows_artist on Artist\n        @argumentDefinitions(\n          first: { type: \"Int\", defaultValue: 4 }\n          last: { type: \"Int\" }\n          after: { type: \"String\" }\n          before: { type: \"String\" }\n          sort: { type: \"PartnerShowSorts\" }\n          status: { type: \"String\" }\n        ) {\n        id\n        showsConnection(\n          first: $first\n          after: $after\n          before: $before\n          last: $last\n          sort: $sort\n          status: $status\n        ) {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          pageCursors {\n            ...Pagination_pageCursors\n          }\n          edges {\n            node {\n              partner {\n                ... on ExternalPartner {\n                  name\n                }\n                ... on Partner {\n                  name\n                }\n              }\n              name\n              href\n              exhibition_period\n              cover_image {\n                cropped(width: 800, height: 600) {\n                  url\n                }\n              }\n              city\n            }\n          }\n        }\n      }\n    `,\n  },\n  graphql`\n    query ArtistShowsQuery(\n      $first: Int\n      $last: Int\n      $after: String\n      $before: String\n      $artistID: String!\n      $sort: PartnerShowSorts\n      $status: String!\n    ) {\n      artist(id: $artistID) {\n        ...ArtistShows_artist\n          @arguments(\n            sort: $sort\n            first: $first\n            last: $last\n            after: $after\n            before: $before\n            status: $status\n          )\n      }\n    }\n  `\n)\n"],"file":"ArtistShows.js"}