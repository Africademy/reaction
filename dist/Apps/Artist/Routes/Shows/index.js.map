{"version":3,"sources":["../../../../../src/Apps/Artist/Routes/Shows/index.tsx"],"names":["ShowsRoute","props","viewer","artist_currentShows","artist_upcomingShows","artist_pastShows","ShowsRouteFragmentContainer"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;AAKO,IAAMA,UAAiC,GAAG,SAApCA,UAAoC,CAAAC,KAAK,EAAI;AAAA,MAChDC,MADgD,GACrCD,KADqC,CAChDC,MADgD;AAGxD,SACE,4DACE,6BAAC,eAAD;AAAQ,IAAA,EAAE,EAAE,CAAC;AAAb,IADF,EAGE,6BAAC,wCAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,MAAM,EAAC,SAFT;AAGE,IAAA,MAAM,EAAEA,MAAM,CAACC,mBAHjB;AAIE,IAAA,QAAQ,EAAC,sBAJX;AAKE,IAAA,OAAO,EAAC,mBALV;AAME,IAAA,EAAE,EAAE;AANN,IAHF,EAYE;AAAM,IAAA,EAAE,EAAC;AAAT,IAZF,EAcE,6BAAC,wCAAD;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,MAAM,EAAC,UAFT;AAGE,IAAA,MAAM,EAAED,MAAM,CAACE,oBAHjB;AAIE,IAAA,QAAQ,EAAC,wBAJX;AAKE,IAAA,OAAO,EAAC,UALV;AAME,IAAA,EAAE,EAAE;AANN,IAdF,EAuBE;AAAM,IAAA,EAAE,EAAC;AAAT,IAvBF,EAyBE,6BAAC,wCAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,MAAM,EAAEF,MAAM,CAACG,gBAHjB;AAIE,IAAA,QAAQ,EAAC,oBAJX;AAKE,IAAA,OAAO,EAAC;AALV,IAzBF,CADF;AAmCD,CAtCM;;;AAwCA,IAAMC,2BAA2B,GAAG,yCAAwBN,UAAxB,EAAoC;AAC7EE,EAAAA,MAAM;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADuE,CAApC,CAApC","sourcesContent":["import { Spacer } from \"@artsy/palette\"\nimport { Shows_viewer } from \"__generated__/Shows_viewer.graphql\"\nimport React, { SFC } from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { ArtistShowsRefetchContainer as Shows } from \"./ArtistShows\"\n\nexport interface ArtistShowsProps {\n  viewer: Shows_viewer\n}\nexport const ShowsRoute: SFC<ArtistShowsProps> = props => {\n  const { viewer } = props\n\n  return (\n    <>\n      <Spacer mb={-1} />\n\n      <Shows\n        sort=\"end_at_asc\"\n        status=\"running\"\n        artist={viewer.artist_currentShows}\n        scrollTo=\"#jumpto-ArtistHeader\"\n        heading=\"Currently on view\"\n        my={4}\n      />\n\n      <span id=\"jumpto-Shows-Upcoming\" />\n\n      <Shows\n        sort=\"start_at_asc\"\n        status=\"upcoming\"\n        artist={viewer.artist_upcomingShows}\n        scrollTo=\"#jumpto-Shows-Upcoming\"\n        heading=\"Upcoming\"\n        my={4}\n      />\n\n      <span id=\"jumpto-Shows-Past\" />\n\n      <Shows\n        sort=\"end_at_desc\"\n        status=\"closed\"\n        artist={viewer.artist_pastShows}\n        scrollTo=\"#jumpto-Shows-Past\"\n        heading=\"Past\"\n      />\n    </>\n  )\n}\n\nexport const ShowsRouteFragmentContainer = createFragmentContainer(ShowsRoute, {\n  viewer: graphql`\n    fragment Shows_viewer on Viewer\n      @argumentDefinitions(\n        currentShowsStatus: { type: \"String\", defaultValue: \"running\" }\n        currentShowsSort: { type: \"PartnerShowSorts\", defaultValue: END_AT_ASC }\n        upcomingShowsStatus: { type: \"String\", defaultValue: \"upcoming\" }\n        upcomingShowsSort: {\n          type: \"PartnerShowSorts\"\n          defaultValue: START_AT_ASC\n        }\n        pastShowsStatus: { type: \"String\", defaultValue: \"closed\" }\n        pastShowsSort: { type: \"PartnerShowSorts\", defaultValue: END_AT_DESC }\n      ) {\n      artist_currentShows: artist(id: $artist_id) {\n        ...ArtistShows_artist\n          @arguments(sort: $currentShowsSort, status: $currentShowsStatus)\n      }\n      artist_upcomingShows: artist(id: $artist_id) {\n        ...ArtistShows_artist\n          @arguments(sort: $upcomingShowsSort, status: $upcomingShowsStatus)\n      }\n      artist_pastShows: artist(id: $artist_id) {\n        ...ArtistShows_artist\n          @arguments(sort: $pastShowsSort, status: $pastShowsStatus)\n      }\n    }\n  `,\n})\n"],"file":"index.js"}