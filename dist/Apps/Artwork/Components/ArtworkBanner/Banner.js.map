{"version":3,"sources":["../../../../../src/Apps/Artwork/Components/ArtworkBanner/Banner.tsx"],"names":["StyledLink","Link","withLink","href","children","sd","APP_URL","Banner","props","LargeBanner","imageUrl","initials","meta","name","subHeadline","SmallBanner"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAiBA,IAAMA,UAAU,GAAG,+BAAOC,aAAP,CAAH;AAAA;AAAA;AAAA,sCAAhB;;AAMA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAeC,QAAf,EAA6C;AAC5D,MAAID,IAAJ,EAAU;AACR,WACE,6BAAC,UAAD;AAAY,MAAA,WAAW,MAAvB;AAAwB,MAAA,IAAI,EAAEE,cAAGC,OAAH,GAAaH;AAA3C,OACGC,QADH,CADF;AAKD;;AAED,SAAOA,QAAP;AACD,CAVD;;AAYO,IAAMG,MAA8B,GAAG,SAAjCA,MAAiC,CAAAC,KAAK,EAAI;AACrD,SACE,4DACE,6BAAC,iBAAD;AAAO,IAAA,EAAE,EAAC;AAAV,KAAgBN,QAAQ,CAACM,KAAK,CAACL,IAAP,EAAa,6BAAC,WAAD,EAAiBK,KAAjB,CAAb,CAAxB,CADF,EAEE,6BAAC,iBAAD;AAAO,IAAA,WAAW,EAAC;AAAnB,KACGN,QAAQ,CAACM,KAAK,CAACL,IAAP,EAAa,6BAAC,WAAD,EAAiBK,KAAjB,CAAb,CADX,CAFF,CADF;AAQD,CATM;;;;AAWA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAD,KAAK;AAAA,SAC9B,6BAAC,aAAD;AAAM,IAAA,aAAa,EAAC,KAApB;AAA0B,IAAA,EAAE,EAAE;AAA9B,KACE,6BAAC,eAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAkB,IAAA,GAAG,EAAEA,KAAK,CAACE,QAA7B;AAAuC,IAAA,QAAQ,EAAEF,KAAK,CAACG;AAAvD,IADF,EAEE,6BAAC,aAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAA6B,IAAA,cAAc,EAAC,QAA5C;AAAqD,IAAA,EAAE,EAAE;AAAzD,KACE,6BAAC,aAAD;AAAM,IAAA,MAAM,EAAC,QAAb;AAAsB,IAAA,IAAI,EAAC;AAA3B,KACGH,KAAK,CAACI,IADT,CADF,EAIE,6BAAC,cAAD;AAAO,IAAA,IAAI,EAAC;AAAZ,KAAkBJ,KAAK,CAACK,IAAxB,CAJF,EAKE,6BAAC,cAAD;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAiB,IAAA,KAAK,EAAC;AAAvB,KACGL,KAAK,CAACM,WADT,CALF,CAFF,CAD8B;AAAA,CAAzB;;;;AAeA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAP,KAAK;AAAA,SAC9B,6BAAC,aAAD;AAAM,IAAA,aAAa,EAAC,KAApB;AAA0B,IAAA,KAAK,EAAC,MAAhC;AAAuC,IAAA,cAAc,EAAC,eAAtD;AAAsE,IAAA,EAAE,EAAE;AAA1E,KACE,6BAAC,aAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAA6B,IAAA,cAAc,EAAC,QAA5C;AAAqD,IAAA,EAAE,EAAE;AAAzD,KACE,6BAAC,aAAD;AAAM,IAAA,MAAM,EAAC,QAAb;AAAsB,IAAA,IAAI,EAAC;AAA3B,KACE,6BAAC,oBAAD;AAAW,IAAA,YAAY,EAAE;AAAzB,KAA6BA,KAAK,CAACI,IAAnC,CADF,CADF,EAIE,6BAAC,cAAD;AAAO,IAAA,IAAI,EAAC;AAAZ,KACE,6BAAC,oBAAD;AAAW,IAAA,YAAY,EAAE;AAAzB,KAA6BJ,KAAK,CAACK,IAAnC,CADF,CAJF,EAOE,6BAAC,cAAD;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAiB,IAAA,KAAK,EAAC;AAAvB,KACE,6BAAC,oBAAD;AAAW,IAAA,YAAY,EAAE;AAAzB,KAA6BL,KAAK,CAACM,WAAnC,CADF,CAPF,CADF,EAYE,6BAAC,eAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAkB,IAAA,GAAG,EAAEN,KAAK,CAACE,QAA7B;AAAuC,IAAA,QAAQ,EAAEF,KAAK,CAACG;AAAvD,IAZF,CAD8B;AAAA,CAAzB","sourcesContent":["import { Avatar, Flex, Link, Sans, Serif } from \"@artsy/palette\"\nimport { Truncator } from \"Components/Truncator\"\nimport React from \"react\"\nimport { data as sd } from \"sharify\"\nimport styled from \"styled-components\"\nimport { Media } from \"Utils/Responsive\"\n\nexport interface BannerProps {\n  /** Image for avatar  */\n  imageUrl?: string\n  /** Fallback partner initials in case image is not there. */\n  initials?: string\n  /** In auction / at fair / in show */\n  meta?: string\n  /** Auction / fair / show name */\n  name?: string\n  /** Partner name */\n  subHeadline?: string\n  /** Link to auction */\n  href?: string\n}\n\nconst StyledLink = styled(Link)`\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst withLink = (href: string, children: React.ReactNode) => {\n  if (href) {\n    return (\n      <StyledLink noUnderline href={sd.APP_URL + href}>\n        {children}\n      </StyledLink>\n    )\n  }\n\n  return children\n}\n\nexport const Banner: React.SFC<BannerProps> = props => {\n  return (\n    <>\n      <Media at=\"xs\">{withLink(props.href, <SmallBanner {...props} />)}</Media>\n      <Media greaterThan=\"xs\">\n        {withLink(props.href, <LargeBanner {...props} />)}\n      </Media>\n    </>\n  )\n}\n\nexport const LargeBanner = props => (\n  <Flex flexDirection=\"row\" mt={2}>\n    <Avatar size=\"sm\" src={props.imageUrl} initials={props.initials} />\n    <Flex flexDirection=\"column\" justifyContent=\"center\" ml={2}>\n      <Sans weight=\"medium\" size=\"2\">\n        {props.meta}\n      </Sans>\n      <Serif size=\"4t\">{props.name}</Serif>\n      <Serif size=\"4t\" color=\"black60\">\n        {props.subHeadline}\n      </Serif>\n    </Flex>\n  </Flex>\n)\n\nexport const SmallBanner = props => (\n  <Flex flexDirection=\"row\" width=\"100%\" justifyContent=\"space-between\" mt={2}>\n    <Flex flexDirection=\"column\" justifyContent=\"center\" mr={2}>\n      <Sans weight=\"medium\" size=\"2\">\n        <Truncator maxLineCount={1}>{props.meta}</Truncator>\n      </Sans>\n      <Serif size=\"4t\">\n        <Truncator maxLineCount={1}>{props.name}</Truncator>\n      </Serif>\n      <Serif size=\"4t\" color=\"black60\">\n        <Truncator maxLineCount={1}>{props.subHeadline}</Truncator>\n      </Serif>\n    </Flex>\n    <Avatar size=\"sm\" src={props.imageUrl} initials={props.initials} />\n  </Flex>\n)\n"],"file":"Banner.js"}