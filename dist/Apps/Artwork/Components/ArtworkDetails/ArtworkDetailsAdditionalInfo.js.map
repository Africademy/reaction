{"version":3,"sources":["../../../../../src/Apps/Artwork/Components/ArtworkDetails/ArtworkDetailsAdditionalInfo.tsx"],"names":["ArtworkDetailsAdditionalInfo","props","artwork","series","publisher","manufacturer","image_rights","framed","signatureInfo","conditionDescription","certificateOfAuthenticity","listItems","title","value","details","displayItems","filter","i","length","map","index","React","Component","ArtworkDetailsAdditionalInfoFragmentContainer"],"mappings":"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","sourcesContent":["import {\n  Col,\n  Grid,\n  ReadMore,\n  Row,\n  Sans,\n  StackableBorderBox,\n} from \"@artsy/palette\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\n\nimport { ArtworkDetailsAdditionalInfo_artwork } from \"__generated__/ArtworkDetailsAdditionalInfo_artwork.graphql\"\n\nexport interface ArtworkDetailsAdditionalInfoProps {\n  artwork: ArtworkDetailsAdditionalInfo_artwork\n}\n\nexport class ArtworkDetailsAdditionalInfo extends React.Component<\n  ArtworkDetailsAdditionalInfoProps\n> {\n  render() {\n    const {\n      series,\n      publisher,\n      manufacturer,\n      image_rights,\n      framed,\n      signatureInfo,\n      conditionDescription,\n      certificateOfAuthenticity,\n    } = this.props.artwork\n\n    const listItems = [\n      {\n        title: \"Condition\",\n        value: conditionDescription ? conditionDescription.details : null,\n      },\n      {\n        title: \"Signature\",\n        value: signatureInfo && signatureInfo.details,\n      },\n      {\n        title: \"Certificate of authenticity\",\n        value: certificateOfAuthenticity && certificateOfAuthenticity.details,\n      },\n      {\n        title: \"Frame\",\n        value: framed && framed.details,\n      },\n      { title: \"Series\", value: series },\n      { title: \"Publisher\", value: publisher },\n      { title: \"Manufacturer\", value: manufacturer },\n      { title: \"Image rights\", value: image_rights },\n    ]\n\n    const displayItems = listItems.filter(\n      i => i.value != null && i.value !== \"\"\n    )\n\n    if (displayItems.length === 0) {\n      return null\n    }\n\n    return (\n      <StackableBorderBox p={2}>\n        <Grid>\n          {displayItems.map(({ title, value }, index) => (\n            <Row\n              key={`artwork-details-${index}`}\n              pb={index === displayItems.length - 1 ? 0 : 1}\n            >\n              <Col xs={12} sm={6} md={6} lg={3}>\n                <Sans size=\"2\" weight=\"medium\" pr={2}>\n                  {title}\n                </Sans>\n              </Col>\n              <Col xs={12} sm={6} md={6} lg={9}>\n                <Sans size=\"2\" weight=\"regular\" color=\"black60\">\n                  <ReadMore maxChars={140} content={value} />\n                </Sans>\n              </Col>\n            </Row>\n          ))}\n        </Grid>\n      </StackableBorderBox>\n    )\n  }\n}\n\nexport const ArtworkDetailsAdditionalInfoFragmentContainer = createFragmentContainer(\n  ArtworkDetailsAdditionalInfo,\n  {\n    artwork: graphql`\n      fragment ArtworkDetailsAdditionalInfo_artwork on Artwork {\n        series\n        publisher\n        manufacturer\n        image_rights\n        framed {\n          label\n          details\n        }\n        signatureInfo {\n          label\n          details\n        }\n        conditionDescription {\n          label\n          details\n        }\n        certificateOfAuthenticity {\n          label\n          details\n        }\n      }\n    `,\n  }\n)\n"],"file":"ArtworkDetailsAdditionalInfo.js"}