{"version":3,"sources":["../../../../../src/Apps/Artwork/Components/ArtworkImageBrowser/ArtworkActions.tsx"],"names":["ArtworkActions","flow","Schema","Flow","ArtworkShare","action_type","ActionType","Click","context_module","ContextModule","ShareButton","type","Type","Button","ArtworkViewInRoom","ViewInRoom","showSharePanel","showMorePanel","state","setState","props","artwork","is_downloadable","href","artists","title","date","isAdmin","artistNames","map","name","join","filename","downloadableImageUrl","sd","APP_URL","selectDefaultSlide","setTimeout","dimensions","image","mediator","trigger","Save","openViewInRoom","toggleSharePanel","bind","getDownloadableImageUrl","editUrl","CMS_URL","id","partner","genomeUrl","GENOME_URL","actionsToShow","condition","renderer","renderSaveButton","is_hangable","renderViewInRoomButton","renderShareButton","renderDownloadButton","renderEditButton","renderGenomeButton","showableActions","filter","action","initialActions","slice","moreActions","length","toggleMorePanel","user","React","Component","ArtworkActionsFragmentContainer","SystemContext","UtilButton","hovered","label","onClick","Icon","getIcon","BellIcon","DownloadIcon","EditIcon","GenomeIcon","HeartIcon","MoreIcon","ShareIcon","OpenEyeIcon","ActionIcon","defaultFill","fill","UtilButtonLink","Link","UtilButtonContainer","Flex","Container","attrs","justifyContent","mb","ml","pt","actionProps","sale","isOpenSale","is_auction","is_closed","isSaved","is_saved","FilledIcon","displayName"],"mappings":"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","sourcesContent":["import { ArtworkActions_artwork } from \"__generated__/ArtworkActions_artwork.graphql\"\nimport { Mediator, SystemContext } from \"Artsy\"\nimport { track } from \"Artsy/Analytics\"\nimport * as Schema from \"Artsy/Analytics/Schema\"\nimport SaveButton, { SaveProps, SaveState } from \"Components/Artwork/Save\"\nimport { compact } from \"lodash\"\nimport { isNull } from \"lodash\"\nimport React, { useContext } from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { data as sd } from \"sharify\"\nimport styled from \"styled-components\"\nimport { slugify } from \"underscore.string\"\nimport { Media } from \"Utils/Responsive\"\nimport { ArtworkSharePanelFragmentContainer as ArtworkSharePanel } from \"./ArtworkSharePanel\"\n\nimport {\n  BellFillIcon,\n  BellIcon,\n  color,\n  DownloadIcon,\n  EditIcon,\n  Flex,\n  GenomeIcon,\n  HeartFillIcon,\n  HeartIcon,\n  Join,\n  Link,\n  MoreIcon,\n  OpenEyeIcon,\n  Sans,\n  ShareIcon,\n  Spacer,\n} from \"@artsy/palette\"\nimport { userIsAdmin } from \"Utils/user\"\nimport { ArtworkPopoutPanel } from \"./ArtworkPopoutPanel\"\n\ninterface ArtworkActionsProps {\n  artwork: ArtworkActions_artwork\n  user?: User\n  mediator?: Mediator\n  selectDefaultSlide(): void\n}\n\ninterface ArtworkActionsState {\n  showSharePanel: boolean\n  showMorePanel: boolean\n}\n\n@track()\nexport class ArtworkActions extends React.Component<\n  ArtworkActionsProps,\n  ArtworkActionsState\n> {\n  state = {\n    showSharePanel: false,\n    showMorePanel: false,\n  }\n\n  @track({\n    flow: Schema.Flow.ArtworkShare,\n    action_type: Schema.ActionType.Click,\n    context_module: Schema.ContextModule.ShareButton,\n    type: Schema.Type.Button,\n  })\n  toggleSharePanel() {\n    const showSharePanel = !this.state.showSharePanel\n    this.setState({\n      showSharePanel,\n      showMorePanel: false,\n    })\n  }\n\n  toggleMorePanel() {\n    const showMorePanel = !this.state.showMorePanel\n    this.setState({ showMorePanel, showSharePanel: false })\n  }\n\n  get isAdmin() {\n    return userIsAdmin(this.props.user)\n  }\n\n  getDownloadableImageUrl() {\n    const {\n      artwork: { is_downloadable, href, artists, title, date },\n    } = this.props\n\n    if (is_downloadable || this.isAdmin) {\n      const artistNames = artists.map(({ name }) => name).join(\", \")\n      const filename = slugify(compact([artistNames, title, date]).join(\" \"))\n      const downloadableImageUrl = `${sd.APP_URL}${href}/download/${filename}.jpg` // prettier-ignore\n      return downloadableImageUrl\n    }\n  }\n\n  @track({\n    flow: Schema.Flow.ArtworkViewInRoom,\n    action_type: Schema.ActionType.Click,\n    context_module: Schema.ContextModule.ViewInRoom,\n    type: Schema.Type.Button,\n  })\n  openViewInRoom() {\n    this.props.selectDefaultSlide()\n\n    setTimeout(() => {\n      const {\n        artwork: { dimensions, image },\n        mediator,\n      } = this.props\n\n      mediator &&\n        mediator.trigger &&\n        mediator.trigger(\"openViewInRoom\", {\n          dimensions,\n          image,\n        })\n    }, 300)\n  }\n\n  renderSaveButton() {\n    return <SaveButton artwork={this.props.artwork} render={Save(this.props)} />\n  }\n\n  renderViewInRoomButton() {\n    return (\n      <UtilButton\n        name=\"viewInRoom\"\n        onClick={() => this.openViewInRoom()}\n        label=\"View in room\"\n      />\n    )\n  }\n\n  renderShareButton() {\n    return (\n      <UtilButton\n        name=\"share\"\n        onClick={this.toggleSharePanel.bind(this)}\n        label=\"Share\"\n      />\n    )\n  }\n\n  renderDownloadButton() {\n    return (\n      <UtilButton\n        name=\"download\"\n        href={this.getDownloadableImageUrl()}\n        label=\"Download\"\n      />\n    )\n  }\n\n  renderEditButton() {\n    const { artwork } = this.props\n    const editUrl = `${sd.CMS_URL}/artworks/${artwork.id}/edit?current_partner_id=${artwork.partner.id}` // prettier-ignore\n\n    return <UtilButton name=\"edit\" href={editUrl} label=\"Edit\" />\n  }\n\n  renderGenomeButton() {\n    const { artwork } = this.props\n    const genomeUrl = `${sd.GENOME_URL}/genome/artworks?artwork_ids=${artwork.id}` // prettier-ignore\n\n    return <UtilButton name=\"genome\" href={genomeUrl} label=\"Genome\" />\n  }\n\n  render() {\n    const { artwork } = this.props\n    const downloadableImageUrl = this.getDownloadableImageUrl()\n\n    const actionsToShow = [\n      { name: \"save\", condition: true, renderer: this.renderSaveButton },\n      {\n        name: \"viewInRoom\",\n        condition: artwork.is_hangable,\n        renderer: this.renderViewInRoomButton,\n      },\n      { name: \"share\", condition: true, renderer: this.renderShareButton },\n      {\n        name: \"download\",\n        condition: !!downloadableImageUrl,\n        renderer: this.renderDownloadButton,\n      },\n      {\n        name: \"edit\",\n        condition: this.isAdmin,\n        renderer: this.renderEditButton,\n      },\n      {\n        name: \"genome\",\n        condition: this.isAdmin,\n        renderer: this.renderGenomeButton,\n      },\n    ]\n\n    const showableActions = actionsToShow.filter(action => {\n      return action.condition\n    })\n\n    const initialActions = showableActions.slice(0, 3)\n    const moreActions = showableActions.slice(3)\n\n    return (\n      <>\n        <Container>\n          <Join separator={<Spacer mx={0} />}>\n            <Media greaterThan=\"xs\">\n              <Flex>\n                {showableActions.map(action => {\n                  return (\n                    <div key={action.name}>{action.renderer.bind(this)()}</div>\n                  )\n                })}\n              </Flex>\n            </Media>\n\n            <Media at=\"xs\">\n              <Flex>\n                {initialActions.map(action => {\n                  return (\n                    <div key={action.name}>{action.renderer.bind(this)()}</div>\n                  )\n                })}\n\n                {moreActions && moreActions.length > 0 && (\n                  <UtilButton\n                    name=\"more\"\n                    onClick={this.toggleMorePanel.bind(this)}\n                  />\n                )}\n              </Flex>\n            </Media>\n          </Join>\n\n          {this.state.showSharePanel && (\n            <ArtworkSharePanel\n              artwork={this.props.artwork}\n              onClose={this.toggleSharePanel.bind(this)}\n            />\n          )}\n\n          {this.state.showMorePanel && (\n            <ArtworkPopoutPanel\n              title=\"More actions\"\n              onClose={this.toggleMorePanel.bind(this)}\n            >\n              <Flex flexDirection=\"row\" flexWrap=\"wrap\">\n                {moreActions.map(action => {\n                  return (\n                    <Flex flexDirection=\"row\" flexBasis=\"50%\" key={action.name}>\n                      {action.renderer.bind(this)()}\n                    </Flex>\n                  )\n                })}\n              </Flex>\n            </ArtworkPopoutPanel>\n          )}\n        </Container>\n      </>\n    )\n  }\n}\n\nexport const ArtworkActionsFragmentContainer = createFragmentContainer(\n  (props: ArtworkActionsProps) => {\n    const { user, mediator } = useContext(SystemContext)\n    return <ArtworkActions user={user} mediator={mediator} {...props} />\n  },\n  {\n    artwork: graphql`\n      fragment ArtworkActions_artwork on Artwork {\n        ...Save_artwork\n        ...ArtworkSharePanel_artwork\n\n        artists {\n          name\n        }\n        date\n        dimensions {\n          cm\n        }\n        href\n        id\n        image {\n          id\n          url(version: \"larger\")\n          height\n          width\n        }\n        is_downloadable\n        is_hangable\n        partner {\n          id\n        }\n        title\n        sale {\n          is_closed\n          is_auction\n        }\n      }\n    `,\n  }\n)\n\ninterface UtilButtonProps {\n  name:\n    | \"bell\"\n    | \"edit\"\n    | \"download\"\n    | \"genome\"\n    | \"heart\"\n    | \"more\"\n    | \"share\"\n    | \"viewInRoom\"\n  href?: string\n  onClick?: () => void\n  selected?: boolean\n  label?: string\n  Icon?: React.ReactNode\n}\n\nexport class UtilButton extends React.Component<\n  UtilButtonProps,\n  { hovered: boolean }\n> {\n  state = {\n    hovered: false,\n  }\n\n  render() {\n    const { href, label, name, onClick, Icon, ...props } = this.props\n\n    const getIcon = () => {\n      switch (name) {\n        case \"bell\":\n          return BellIcon\n        case \"download\":\n          return DownloadIcon\n        case \"edit\":\n          return EditIcon\n        case \"genome\":\n          return GenomeIcon\n        case \"heart\":\n          return HeartIcon\n        case \"more\":\n          return MoreIcon\n        case \"share\":\n          return ShareIcon\n        case \"viewInRoom\":\n          return OpenEyeIcon\n      }\n    }\n\n    // If we're passing in an `Icon`, override\n    let ActionIcon\n    if (Icon) {\n      ActionIcon = Icon\n    } else {\n      ActionIcon = getIcon()\n    }\n\n    const defaultFill = name === \"more\" ? null : \"black100\"\n    const fill = this.state.hovered ? \"purple100\" : defaultFill\n\n    return (\n      <UtilButtonContainer\n        p={1}\n        pt={0}\n        onMouseOver={() => this.setState({ hovered: true })}\n        onMouseOut={() =>\n          this.setState({\n            hovered: false,\n          })\n        }\n        onClick={onClick}\n      >\n        {href ? (\n          <UtilButtonLink className=\"noUnderline\" href={href} target=\"_blank\">\n            <ActionIcon {...props} fill={\"black100\"} />\n            {label && (\n              <Sans size=\"2\" pl={0.5} pt=\"1px\">\n                {label}\n              </Sans>\n            )}\n          </UtilButtonLink>\n        ) : (\n          <>\n            <ActionIcon {...props} fill={fill} />\n            {label && (\n              <Sans size=\"2\" pl={0.5} pt=\"1px\">\n                {label}\n              </Sans>\n            )}\n          </>\n        )}\n      </UtilButtonContainer>\n    )\n  }\n}\n\nconst UtilButtonLink = styled(Link)`\n  display: flex;\n\n  &:hover {\n    color: ${color(\"purple100\")} !important;\n    text-decoration: none !important;\n  }\n`\n\nconst UtilButtonContainer = styled(Flex)`\n  cursor: pointer;\n  justify-content: center;\n\n  &:hover {\n    color: ${color(\"purple100\")};\n  }\n`\n\nconst Container = styled(Flex).attrs({\n  justifyContent: \"center\",\n  mb: 2,\n  ml: 0.5,\n  pt: 3,\n})`\n  position: relative;\n  user-select: none;\n`\n\n/**\n * Custom renderer for SaveButton\n */\nconst Save = (actionProps: ArtworkActionsProps) => (\n  props: SaveProps,\n  state: SaveState\n) => {\n  // Grab props from ArtworkActions to check if sale is open\n  const { sale } = actionProps.artwork\n  const isOpenSale = sale && sale.is_auction && !sale.is_closed\n\n  // Check if saved by evaluating props from SaveButton\n  const isSaved = isNull(state.is_saved)\n    ? props.artwork.is_saved\n    : state.is_saved\n\n  // If an Auction, use Bell (for notifications); if a standard artwork use Heart\n  if (isOpenSale) {\n    const FilledIcon = () => <BellFillIcon fill=\"purple100\" />\n    return (\n      <UtilButton\n        name=\"bell\"\n        Icon={isSaved ? FilledIcon : BellIcon}\n        label=\"Watch lot\"\n      />\n    )\n  } else {\n    const FilledIcon = () => <HeartFillIcon fill=\"purple100\" />\n    return (\n      <UtilButton\n        name=\"heart\"\n        Icon={isSaved ? FilledIcon : HeartIcon}\n        label=\"Save\"\n      />\n    )\n  }\n}\n\nArtworkActionsFragmentContainer.displayName = \"ArtworkActions\"\n"],"file":"ArtworkActions.js"}