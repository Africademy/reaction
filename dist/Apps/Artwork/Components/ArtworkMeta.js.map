{"version":3,"sources":["../../../../src/Apps/Artwork/Components/ArtworkMeta.tsx"],"names":["ArtworkMeta","artwork","props","meta_image","is_shareable","imageURL","img","resized","url","width","height","a","context","__typename","date","artist_names","sale_message","id","name","partner","image_rights","fromPropsGoogleAdId","googleAdId","fromSharifyGoogleAdId","sd","GOOGLE_ADWORDS_ID","is_in_auction","is_acquireable","_id","script","__html","meta","title","description","APP_URL","href","long_description","FACEBOOK_APP_NAMESPACE","renderImageMetaTags","renderSailthruTags","renderGoogleAdSnippet","Component","ArtworkMetaFragmentContainer"],"mappings":"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","sourcesContent":["import { ArtworkMeta_artwork } from \"__generated__/ArtworkMeta_artwork.graphql\"\nimport React, { Component } from \"react\"\nimport { Link, Meta, Title } from \"react-head\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { data as sd } from \"sharify\"\nimport { get } from \"Utils/get\"\n\nimport { withSystemContext } from \"Artsy\"\nimport { SeoDataForArtworkFragmentContainer as SeoDataForArtwork } from \"./Seo/SeoDataForArtwork\"\n\ninterface ArtworkMetaProps {\n  artwork: ArtworkMeta_artwork\n  googleAdId?: string\n}\n\nexport class ArtworkMeta extends Component<ArtworkMetaProps> {\n  renderImageMetaTags() {\n    const { artwork } = this.props\n    const { meta_image, is_shareable } = artwork\n    const imageURL = get(meta_image, img => img.resized.url)\n\n    if (is_shareable && imageURL) {\n      return (\n        <>\n          <Meta property=\"twitter:card\" content=\"summary_large_image\" />\n          <Meta property=\"og:image\" content={imageURL} />\n          <Meta property=\"og:image:width\" content={meta_image.resized.width} />\n          <Meta\n            property=\"og:image:height\"\n            content={meta_image.resized.height}\n          />\n        </>\n      )\n    }\n\n    return (\n      <>\n        <Meta property=\"twitter:card\" content=\"summary\" />\n      </>\n    )\n  }\n\n  renderSailthruTags() {\n    const { artwork } = this.props\n    const imageURL = get(artwork, a => a.meta_image.resized.url)\n\n    if (\n      artwork.context &&\n      artwork.context.__typename === \"ArtworkContextFair\"\n    ) {\n      return (\n        <>\n          <Meta name=\"artwork_type\" content=\"fair\" />\n          <Meta name=\"artwork_date\" content={artwork.date} />\n          {artwork.artist_names && (\n            <Meta name=\"artist_name\" content={artwork.artist_names} />\n          )}\n          {artwork.sale_message && (\n            <Meta name=\"price\" content={artwork.sale_message} />\n          )}\n          <Meta name=\"sailthru_fair_slug\" content={artwork.context.id} />\n          <Meta name=\"sailthru_fair_name\" content={artwork.context.name} />\n          <Meta name=\"sailthru_fair_page\" content=\"artwork\" />\n          {artwork.partner && (\n            <Meta name=\"sailthru_partner_name\" content={artwork.partner.name} />\n          )}\n          {artwork.image_rights && (\n            <Meta name=\"sailthru_credit\" content={artwork.image_rights} />\n          )}\n          {imageURL && <Meta name=\"image\" content={imageURL} />}\n        </>\n      )\n    }\n  }\n\n  renderGoogleAdSnippet() {\n    const { artwork, googleAdId: fromPropsGoogleAdId } = this.props\n    const { GOOGLE_ADWORDS_ID: fromSharifyGoogleAdId } = sd\n    const { is_in_auction, is_acquireable, _id } = artwork\n    if (!is_in_auction && !is_acquireable) return\n\n    // TODO: Investigate always being able to select from sharify.\n    const googleAdId = fromSharifyGoogleAdId || fromPropsGoogleAdId\n    if (!googleAdId) return\n\n    const script = `\n      window.dataLayer = window.dataLayer || [];\n      function gtag(){dataLayer.push(arguments);}\n      gtag('js', new Date());\n      gtag('config', \"${googleAdId}\");\n      gtag('event', 'page_view', {\n        'send_to': \"${googleAdId}\",\n        'dynx_itemid': \"${_id}\"\n      });`\n\n    // The below might be a useful guard if scripts start to be evaluated twice.\n    // const isServer = typeof window === \"undefined\"\n    // if (!isServer) return\n\n    return (\n      <>\n        <Meta\n          tag=\"script\"\n          type=\"text/javascript\"\n          async\n          src={`https://www.googletagmanager.com/gtag/js?id=${googleAdId}`}\n        />\n        <Meta\n          tag=\"script\"\n          type=\"text/javascript\"\n          dangerouslySetInnerHTML={{ __html: script }}\n        />\n      </>\n    )\n  }\n\n  render() {\n    const { artwork } = this.props\n    const imageURL = get(artwork, a => a.meta_image.resized.url)\n\n    return (\n      <>\n        <Title>{artwork.meta.title}</Title>\n        <Meta name=\"description\" content={artwork.meta.description} />\n        {imageURL && <Meta name=\"thumbnail\" content={imageURL} />}\n        <Link rel=\"canonical\" href={`${sd.APP_URL}${artwork.href}`} />\n        <Meta\n          property=\"twitter:description\"\n          content={artwork.meta.long_description}\n        />\n        <Meta property=\"og:title\" content={artwork.meta.title} />\n        <Meta property=\"og:description\" content={artwork.meta.description} />\n        <Meta property=\"og:url\" content={`${sd.APP_URL}${artwork.href}`} />\n        <Meta\n          property=\"og:type\"\n          content={`${sd.FACEBOOK_APP_NAMESPACE}:artwork`}\n        />\n\n        <SeoDataForArtwork artwork={artwork} />\n        {this.renderImageMetaTags()}\n        {this.renderSailthruTags()}\n        {this.renderGoogleAdSnippet()}\n      </>\n    )\n  }\n}\n\nexport const ArtworkMetaFragmentContainer = createFragmentContainer(\n  withSystemContext(ArtworkMeta),\n  {\n    artwork: graphql`\n      fragment ArtworkMeta_artwork on Artwork {\n        href\n        _id\n        date\n        artist_names\n        sale_message\n        partner {\n          name\n        }\n        image_rights\n        is_in_auction\n        is_acquireable\n        is_shareable\n        meta_image: image {\n          resized(\n            width: 640\n            height: 640\n            version: [\"large\", \"medium\", \"tall\"]\n          ) {\n            width\n            height\n            url\n          }\n        }\n        meta {\n          title\n          description(limit: 155)\n          long_description: description(limit: 200)\n        }\n        context {\n          __typename\n          ... on ArtworkContextFair {\n            id\n            name\n          }\n        }\n        ...SeoDataForArtwork_artwork\n      }\n    `,\n  }\n)\n"],"file":"ArtworkMeta.js"}