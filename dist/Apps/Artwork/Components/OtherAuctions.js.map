{"version":3,"sources":["../../../../src/Apps/Artwork/Components/OtherAuctions.tsx"],"names":["OtherAuctions","sd","APP_URL","props","sales","map","auction","index","React","Component","OtherAuctionsFragmentContainer","OtherAuctionsQueryRenderer","SystemContext","relayEnvironment","size","sort"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAKaA,a;;;;;;;;;;;;;6BACF;AACP,aACE,6BAAC,YAAD;AAAK,QAAA,EAAE,EAAE;AAAT,SACE,6BAAC,cAAD;AAAQ,QAAA,KAAK,EAAC,gBAAd;AAA+B,QAAA,UAAU,EAAEC,cAAGC,OAAH,GAAa;AAAxD,QADF,EAEE,6BAAC,aAAD;AAAM,QAAA,QAAQ,EAAC,MAAf;AAAsB,QAAA,EAAE,EAAE,CAAC,CAA3B;AAA8B,QAAA,KAAK,EAAC;AAApC,SACG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACxC,eACE,6BAAC,YAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAhB;AAAwB,UAAA,KAAK,EAAE,CAAC,MAAD,EAAS,KAAT,CAA/B;AAAgD,UAAA,GAAG,EAAEA;AAArD,WACE,6BAAC,yCAAD;AAAa,UAAA,IAAI,EAAED;AAAnB,UADF,CADF;AAKD,OANA,CADH,CAFF,CADF;AAcD;;;;EAhBgCE,eAAMC,S;;;AAmBlC,IAAMC,8BAA8B,GAAG,yCAC5CV,aAD4C;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,EAAvC;;;AASA,IAAMW,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AAAA,oBACjB,uBAAWC,oBAAX,CADiB;AAAA,MACtCC,gBADsC,eACtCA,gBADsC;;AAG9C,SACE,6BAAC,wCAAD;AACE,IAAA,WAAW,EAAEA,gBADf;AAEE,IAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,IAAI,EAAE;AAAjB,KAFb;AAGE,IAAA,KAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAHP;AAUE,IAAA,MAAM,EAAE,oDAAuBL,8BAAvB;AAVV,IADF;AAcD,CAjBM","sourcesContent":["import { Box, Flex } from \"@artsy/palette\"\nimport { OtherAuctions_sales } from \"__generated__/OtherAuctions_sales.graphql\"\nimport { OtherAuctionsQuery } from \"__generated__/OtherAuctionsQuery.graphql\"\nimport { SystemContext } from \"Artsy\"\nimport { renderWithLoadProgress } from \"Artsy/Relay/renderWithLoadProgress\"\nimport { SystemQueryRenderer as QueryRenderer } from \"Artsy/Relay/SystemQueryRenderer\"\nimport { AuctionCardFragmentContainer as AuctionCard } from \"Components/v2/AuctionCard\"\nimport React, { useContext } from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { data as sd } from \"sharify\"\nimport { Header } from \"./OtherWorks/Header\"\n\ninterface OtherAuctionsProps {\n  sales: OtherAuctions_sales\n}\nexport class OtherAuctions extends React.Component<OtherAuctionsProps> {\n  render() {\n    return (\n      <Box mt={6}>\n        <Header title=\"Other auctions\" buttonHref={sd.APP_URL + \"/auctions\"} />\n        <Flex flexWrap=\"wrap\" mr={-2} width=\"100%\">\n          {this.props.sales.map((auction, index) => {\n            return (\n              <Box pr={2} mb={[1, 4]} width={[\"100%\", \"25%\"]} key={index}>\n                <AuctionCard sale={auction} />\n              </Box>\n            )\n          })}\n        </Flex>\n      </Box>\n    )\n  }\n}\n\nexport const OtherAuctionsFragmentContainer = createFragmentContainer(\n  OtherAuctions,\n  graphql`\n    fragment OtherAuctions_sales on Sale @relay(plural: true) {\n      ...AuctionCard_sale\n    }\n  `\n)\n\nexport const OtherAuctionsQueryRenderer = () => {\n  const { relayEnvironment } = useContext(SystemContext)\n\n  return (\n    <QueryRenderer<OtherAuctionsQuery>\n      environment={relayEnvironment}\n      variables={{ size: 4, sort: \"TIMELY_AT_NAME_ASC\" }}\n      query={graphql`\n        query OtherAuctionsQuery($size: Int!, $sort: SaleSorts) {\n          sales(size: $size, sort: $sort) {\n            ...OtherAuctions_sales\n          }\n        }\n      `}\n      render={renderWithLoadProgress(OtherAuctionsFragmentContainer)}\n    />\n  )\n}\n"],"file":"OtherAuctions.js"}