{"version":3,"sources":["../../../../../src/Apps/Artwork/Components/OtherWorks/index.tsx"],"names":["hideGrid","artworksConnection","Boolean","p","edges","length","populatedGrids","grids","filter","grid","artworks","__typename","contextGridTypeToContextModule","contextGridType","Schema","ContextModule","OtherWorksByArtist","OtherWorksFromGallery","OtherWorksInAuction","OtherWorksFromShow","OtherWorks","props","artwork","context","contextGrids","sale","gridsToShow","tracking","map","index","title","ctaHref","mediator","trackEvent","type","Type","ArtworkBrick","action_type","ActionType","Click","context_module","is_closed","OtherWorksFragmentContainer"],"mappings":"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","sourcesContent":["import { Box, Join, Spacer } from \"@artsy/palette\"\nimport { OtherWorks_artwork } from \"__generated__/OtherWorks_artwork.graphql\"\nimport { OtherAuctionsQueryRenderer as OtherAuctions } from \"Apps/Artwork/Components/OtherAuctions\"\nimport { Header } from \"Apps/Artwork/Components/OtherWorks/Header\"\nimport { RelatedWorksArtworkGridRefetchContainer as RelatedWorksArtworkGrid } from \"Apps/Artwork/Components/OtherWorks/RelatedWorksArtworkGrid\"\nimport { Mediator, SystemContextProps, withSystemContext } from \"Artsy\"\nimport { track, useTracking } from \"Artsy/Analytics\"\nimport * as Schema from \"Artsy/Analytics/Schema\"\nimport ArtworkGrid from \"Components/ArtworkGrid\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { get } from \"Utils/get\"\n\nexport interface OtherWorksContextProps {\n  artwork: OtherWorks_artwork\n  mediator?: Mediator\n}\n\n/**\n * Check to see if a connection's edges have a length; if false hide the grid.\n */\nexport function hideGrid(artworksConnection): boolean {\n  return Boolean(get(artworksConnection, p => !p.edges.length))\n}\n\nconst populatedGrids = (grids: OtherWorks_artwork[\"contextGrids\"]) => {\n  if (grids && grids.length > 0) {\n    return grids.filter(grid => {\n      return (\n        grid.artworks &&\n        grid.artworks.edges &&\n        grid.artworks.edges.length > 0 &&\n        grid.__typename !== \"RelatedArtworkGrid\"\n      )\n    })\n  }\n}\n\nconst contextGridTypeToContextModule = contextGridType => {\n  switch (contextGridType) {\n    case \"ArtistArtworkGrid\": {\n      return Schema.ContextModule.OtherWorksByArtist\n    }\n    case \"PartnerArtworkGrid\": {\n      return Schema.ContextModule.OtherWorksFromGallery\n    }\n    case \"AuctionArtworkGrid\": {\n      return Schema.ContextModule.OtherWorksInAuction\n    }\n    case \"ShowArtworkGrid\": {\n      return Schema.ContextModule.OtherWorksFromShow\n    }\n  }\n}\n\nexport const OtherWorks = track()(\n  (props: { artwork: OtherWorks_artwork } & SystemContextProps) => {\n    const { context, contextGrids, sale } = props.artwork\n    const gridsToShow = populatedGrids(contextGrids)\n    const tracking = useTracking()\n\n    return (\n      <>\n        {gridsToShow && gridsToShow.length > 0 && (\n          <Join separator={<Spacer my={3} />}>\n            {gridsToShow.map((grid, index) => (\n              <React.Fragment key={`Grid-${index}`}>\n                <Header title={grid.title} buttonHref={grid.ctaHref} />\n                <ArtworkGrid\n                  artworks={grid.artworks}\n                  columnCount={[2, 3, 4]}\n                  preloadImageCount={0}\n                  mediator={props.mediator}\n                  onBrickClick={() =>\n                    tracking.trackEvent({\n                      type: Schema.Type.ArtworkBrick,\n                      action_type: Schema.ActionType.Click,\n                      context_module: contextGridTypeToContextModule(\n                        grid.__typename\n                      ),\n                    })\n                  }\n                />\n              </React.Fragment>\n            ))}\n          </Join>\n        )}\n        {!(\n          context &&\n          context.__typename === \"ArtworkContextAuction\" &&\n          !(sale && sale.is_closed)\n        ) && (\n          <Box mt={3}>\n            <RelatedWorksArtworkGrid artwork={props.artwork} />\n          </Box>\n        )}\n        {context && context.__typename === \"ArtworkContextAuction\" && (\n          <OtherAuctions />\n        )}\n      </>\n    )\n  }\n)\n\nexport const OtherWorksFragmentContainer = createFragmentContainer<{\n  artwork: OtherWorks_artwork\n}>(withSystemContext(OtherWorks), {\n  artwork: graphql`\n    fragment OtherWorks_artwork on Artwork {\n      contextGrids {\n        __typename\n        title\n        ctaTitle\n        ctaHref\n        artworks(first: 8) {\n          ...ArtworkGrid_artworks\n\n          edges {\n            node {\n              id\n            }\n          }\n        }\n      }\n\n      ...RelatedWorksArtworkGrid_artwork\n\n      id\n      _id\n      sale {\n        is_closed\n      }\n      context {\n        __typename\n      }\n    }\n  `,\n})\n"],"file":"index.js"}