{"version":3,"sources":["../../../../src/Apps/Artwork/Components/PricingContext.tsx"],"names":["PricingContext","context_module","Schema","ContextModule","PriceContext","dispatch","data","Events","postEvent","action_type","ActionType","Impression","flow","Flow","ArtworkPriceContext","subject","Subject","HistogramBar","type","Type","Chart","Hover","Click","BrowseWorks","dimension","category","artistId","url","window","open","artwork","props","pricingContext","priceCents","max","min","artworkFallsBeforeFirstBin","bins","minPriceCents","artworkFallsAfterLastBin","length","maxPriceCents","artists","id","trackImpression","bind","appliedFiltersDisplay","collectPageLinkClick","appliedFilters","maxPrice","map","bin","index","isFirstBin","isLastBin","title","minPrice","artworkFallsInThisBin","binValue","numArtworks","labelSuffix","value","label","description","onHover","barchartHover","highlightLabel","undefined","React","Component","PricingContextFragmentContainer","displayName"],"mappings":"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","sourcesContent":["import {\n  BarChart,\n  BarDescriptor,\n  BorderBox,\n  Flex,\n  Link,\n  Sans,\n  Spacer,\n} from \"@artsy/palette\"\nimport { PricingContext_artwork } from \"__generated__/PricingContext_artwork.graphql\"\nimport { track } from \"Artsy/Analytics\"\nimport * as Schema from \"Artsy/Analytics/Schema\"\nimport { once } from \"lodash\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport Waypoint from \"react-waypoint\"\nimport Events from \"Utils/Events\"\nimport { createCollectUrl, FilterCategory } from \"./../Utils/createCollectUrl\"\nimport { PricingContextModal } from \"./PricingContextModal\"\n\ninterface PricingContextProps {\n  artwork: PricingContext_artwork\n}\n\n@track(\n  {\n    context_module: Schema.ContextModule.PriceContext,\n  },\n  {\n    dispatch: data => Events.postEvent(data),\n  }\n)\nexport class PricingContext extends React.Component<PricingContextProps> {\n  @track({\n    action_type: Schema.ActionType.Impression,\n    flow: Schema.Flow.ArtworkPriceContext,\n    subject: Schema.Subject.HistogramBar,\n    type: Schema.Type.Chart,\n  })\n  trackImpression() {\n    // noop\n  }\n\n  @track({\n    action_type: Schema.ActionType.Hover,\n    flow: Schema.Flow.ArtworkPriceContext,\n    subject: Schema.Subject.HistogramBar,\n    type: Schema.Type.Chart,\n  })\n  barchartHover() {\n    // I'm just for tracking!\n  }\n\n  @track({\n    action_type: Schema.ActionType.Click,\n    flow: Schema.Flow.ArtworkPriceContext,\n    subject: Schema.Subject.BrowseWorks,\n    type: Schema.Type.Chart,\n  })\n  collectPageLinkClick({\n    dimension,\n    category,\n    artistId,\n  }: {\n    dimension: \"SMALL\" | \"MEDIUM\" | \"LARGE\" | null\n    category: FilterCategory\n    artistId: string\n  }) {\n    const url = createCollectUrl({ dimension, category, artistId })\n    if (typeof window !== \"undefined\") {\n      window.open(url)\n    }\n  }\n\n  render() {\n    const { artwork } = this.props\n    if (!artwork.pricingContext) {\n      return null\n    }\n\n    const priceCents = artwork.priceCents.max || artwork.priceCents.min\n\n    const artworkFallsBeforeFirstBin =\n      priceCents < artwork.pricingContext.bins[0].minPriceCents\n    const artworkFallsAfterLastBin =\n      priceCents >=\n      artwork.pricingContext.bins[artwork.pricingContext.bins.length - 1]\n        .maxPriceCents\n\n    const artistId = artwork.artists[0].id\n    return (\n      <BorderBox mb={2} flexDirection=\"column\">\n        <Waypoint onEnter={once(this.trackImpression.bind(this))} />\n        <Flex>\n          <Sans size=\"2\" weight=\"medium\">\n            {artwork.pricingContext.appliedFiltersDisplay}\n          </Sans>\n          <PricingContextModal />\n        </Flex>\n        <Link\n          onClick={this.collectPageLinkClick.bind(this, {\n            dimension: artwork.pricingContext.appliedFilters.dimension,\n            category: artwork.category,\n            artistId,\n          })}\n          color=\"black60\"\n        >\n          <Sans size=\"2\">Browse works in this category</Sans>\n        </Link>\n        <Spacer mb={[2, 3]} />\n        <BarChart\n          // TODO: use artwork's currency\n          minLabel=\"$0\"\n          maxLabel={\n            artwork.pricingContext.bins[artwork.pricingContext.bins.length - 1]\n              .maxPrice + \"+\"\n          }\n          bars={artwork.pricingContext.bins.map(\n            (bin, index): BarDescriptor => {\n              const isFirstBin = index === 0\n              const isLastBin = index === artwork.pricingContext.bins.length - 1\n              const title = isLastBin\n                ? `${bin.minPrice}+`\n                : // TODO: use artwork's currency\n                  `${isFirstBin ? \"$0\" : bin.minPrice}â€“${bin.maxPrice}`\n              const artworkFallsInThisBin =\n                (isFirstBin && artworkFallsBeforeFirstBin) ||\n                (isLastBin && artworkFallsAfterLastBin) ||\n                (priceCents >= bin.minPriceCents &&\n                  priceCents < bin.maxPriceCents)\n\n              const binValue =\n                artworkFallsInThisBin && bin.numArtworks === 0\n                  ? 1\n                  : bin.numArtworks\n              const labelSuffix = binValue === 1 ? \" work\" : \" works\"\n              return {\n                value: binValue,\n                label: {\n                  title,\n                  description: binValue + labelSuffix,\n                },\n                onHover: this.barchartHover.bind(this),\n                highlightLabel: artworkFallsInThisBin\n                  ? {\n                      title,\n                      description: \"This work\",\n                    }\n                  : undefined,\n              }\n            }\n          )}\n        />\n      </BorderBox>\n    )\n  }\n}\n\nexport const PricingContextFragmentContainer = createFragmentContainer(\n  PricingContext,\n  {\n    artwork: graphql`\n      fragment PricingContext_artwork on Artwork {\n        priceCents {\n          min\n          max\n        }\n        artists {\n          id\n        }\n        category\n        pricingContext {\n          appliedFiltersDisplay\n          appliedFilters {\n            dimension\n            category\n          }\n          bins {\n            maxPrice\n            maxPriceCents\n            minPrice\n            minPriceCents\n            numArtworks\n          }\n        }\n      }\n    `,\n  }\n)\n\nPricingContextFragmentContainer.displayName = \"PricingContext\"\n"],"file":"PricingContext.js"}