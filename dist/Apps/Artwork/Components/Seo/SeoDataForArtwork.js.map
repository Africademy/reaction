{"version":3,"sources":["../../../../../src/Apps/Artwork/Components/Seo/SeoDataForArtwork.tsx"],"names":["APP_URL","sd","AVAILABILITY","sold","SeoDataForArtwork","artwork","artistsName","artist_names","dimensions","parseDimensions","a","in","artworkMetaData","name","meta","title","image","meta_image","resized","url","description","href","brand","partnerType","partner","type","ecommerceData","category","productionDate","date","offers","displayPrice","availability","seller","profile","SeoDataForArtworkFragmentContainer","is_price_hidden","is_price_range","price","sale_message","price_currency","buildPriceSpecification","splitPriceRange","includes","priceCurrency","priceRange","minAndMaxPrice","split","minPrice","replace","maxPrice","priceSpecification","segments","length","width","height","depth"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAEQA,O,GAAYC,a,CAAZD,O;AAMD,IAAME,YAAY,GAAG;AAC1B,cAAY,4BADc;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB;;;AAKA,IAAMC,iBAAmD,GAAG,SAAtDA,iBAAsD,OAE7D;AAAA,MADJC,OACI,QADJA,OACI;AACJ,MAAMC,WAAW,GAAGD,OAAO,CAACE,YAA5B;AAEA,MAAMC,UAAU,GAAGC,eAAe,CAAC,cAAIJ,OAAJ,EAAa,UAAAK,CAAC;AAAA,WAAIA,CAAC,CAACF,UAAF,CAAaG,EAAjB;AAAA,GAAd,EAAmC,EAAnC,CAAD,CAAlC;;AAEA,MAAMC,eAAe;AACnBC,IAAAA,IAAI,EAAER,OAAO,CAACS,IAAR,CAAaC,KADA;AAEnBC,IAAAA,KAAK,EAAE,cAAIX,OAAJ,EAAa,UAAAK,CAAC;AAAA,aAAIA,CAAC,CAACO,UAAF,CAAaC,OAAb,CAAqBC,GAAzB;AAAA,KAAd,CAFY;AAGnBC,IAAAA,WAAW,EAAE,cAAIf,OAAJ,EAAa,UAAAK,CAAC;AAAA,aAAIA,CAAC,CAACI,IAAF,CAAOM,WAAX;AAAA,KAAd,CAHM;AAInBD,IAAAA,GAAG,YAAKnB,OAAL,SAAeK,OAAO,CAACgB,IAAvB;AAJgB,KAKhBb,UALgB;AAMnBc,IAAAA,KAAK,EAAE;AACL,eAAS,QADJ;AAELT,MAAAA,IAAI,EAAEP;AAFD;AANY,IAArB;;AAYA,MAAMiB,WAAW,GAAG,cAAIlB,OAAJ,EAAa,UAAAK,CAAC;AAAA,WAAIA,CAAC,CAACc,OAAF,CAAUC,IAAd;AAAA,GAAd,CAApB;;AACA,MAAIF,WAAW,KAAK,aAApB,EAAmC;AACjC,WAAO,6BAAC,0BAAD;AAAc,MAAA,IAAI,EAAEX;AAApB,MAAP;AACD;;AAED,MAAMc,aAAa,GAAG;AACpBC,IAAAA,QAAQ,EAAEtB,OAAO,CAACsB,QADE;AAEpBC,IAAAA,cAAc,EAAEvB,OAAO,CAACwB,IAFJ;AAGpBC,IAAAA,MAAM;AACJ,eAAS;AADL,OAEDC,YAAY,CAAC1B,OAAD,CAFX;AAGJ2B,MAAAA,YAAY,EAAE9B,YAAY,CAACG,OAAO,CAAC2B,YAAT,CAHtB;AAIJC,MAAAA,MAAM,EAAE;AACN,iBAAS,YADH;AAENpB,QAAAA,IAAI,EAAE,cAAIR,OAAJ,EAAa,UAAAK,CAAC;AAAA,iBAAIA,CAAC,CAACc,OAAF,CAAUX,IAAd;AAAA,SAAd,CAFA;AAGNG,QAAAA,KAAK,EAAE,cAAIX,OAAJ,EAAa,UAAAK,CAAC;AAAA,iBAAIA,CAAC,CAACc,OAAF,CAAUU,OAAV,CAAkBlB,KAAlB,CAAwBE,OAAxB,CAAgCC,GAApC;AAAA,SAAd;AAHD;AAJJ;AAHc,GAAtB;AAeA,SACE,6BAAC,gBAAD;AACE,IAAA,IAAI,oBACCP,eADD,EAECc,aAFD;AADN,IADF;AAQD,CA/CM;;;AAiDA,IAAMS,kCAAkC,GAAG,yCAChD/B,iBADgD,EAEhD;AACEC,EAAAA,OAAO;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADT,CAFgD,CAA3C;;;AAiDP,IAAM0B,YAAY,GAAG,SAAfA,YAAe,CAAA1B,OAAO,EAAI;AAAA,MAE5B+B,eAF4B,GAO1B/B,OAP0B,CAE5B+B,eAF4B;AAAA,MAG5BC,cAH4B,GAO1BhC,OAP0B,CAG5BgC,cAH4B;AAAA,MAI5BC,KAJ4B,GAO1BjC,OAP0B,CAI5BiC,KAJ4B;AAAA,MAK5BC,YAL4B,GAO1BlC,OAP0B,CAK5BkC,YAL4B;AAAA,MAM5BC,cAN4B,GAO1BnC,OAP0B,CAM5BmC,cAN4B;;AAS9B,MAAIH,cAAc,IAAI,CAACD,eAAnB,IAAsCE,KAA1C,EAAiD;AAC/C,WAAOG,uBAAuB,CAACD,cAAD,EAAiBE,eAAe,CAACJ,KAAD,CAAhC,CAA9B;AACD;;AAED,MAAIC,YAAY,IAAIA,YAAY,CAACI,QAAb,CAAsB,GAAtB,CAApB,EAAgD;AAC9C,WAAOF,uBAAuB,CAC5BD,cAD4B,EAE5BE,eAAe,CAACH,YAAD,CAFa,CAA9B;AAID;;AAED,SAAO;AACLD,IAAAA,KAAK,EAAEC,YADF;AAELK,IAAAA,aAAa,EAAEJ;AAFV,GAAP;AAID,CAxBD;;AA0BA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACG,UAAD,EAAwB;AAC9C,MAAMC,cAAc,GAAGD,UAAU,CAACE,KAAX,CAAiB,GAAjB,CAAvB;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,oBAAKF,cAAc,CAAC,CAAD,CAAnB,EAAwBG,OAAxB,CAAgC,GAAhC,EAAqC,EAArC,CADL;AAELC,IAAAA,QAAQ,EAAE,oBAAKJ,cAAc,CAAC,CAAD,CAAnB;AAFL,GAAP;AAID,CAND;;AAQA,IAAML,uBAAuB,GAAG,SAA1BA,uBAA0B,CAC9BD,cAD8B,EAE9BK,UAF8B,EAG3B;AACH,SAAO;AACLM,IAAAA,kBAAkB;AAChB,eAAS,oBADO;AAEhBP,MAAAA,aAAa,EAAEJ;AAFC,OAGbK,UAHa;AADb,GAAP;AAOD,CAXD;;AAaA,IAAMpC,eAAe,GAAG,SAAlBA,eAAkB,CAACD,UAAD,EAAwB;AAC9C,MAAI,CAACA,UAAL,EAAiB,OAAO,EAAP;AAEjB,MAAM4C,QAAQ,GAAG5C,UAAU,CAACyC,OAAX,CAAmB,KAAnB,EAA0B,EAA1B,EAA8BF,KAA9B,CAAoC,GAApC,CAAjB;;AAEA,MAAIK,QAAQ,CAACC,MAAT,KAAoB,CAAxB,EAA2B;AACzB,WAAO;AACLC,MAAAA,KAAK,YAAK,oBAAKF,QAAQ,CAAC,CAAD,CAAb,CAAL,QADA;AAELG,MAAAA,MAAM,YAAK,oBAAKH,QAAQ,CAAC,CAAD,CAAb,CAAL;AAFD,KAAP;AAID;;AAED,MAAIA,QAAQ,CAACC,MAAT,KAAoB,CAAxB,EAA2B;AACzB,WAAO;AACLC,MAAAA,KAAK,YAAK,oBAAKF,QAAQ,CAAC,CAAD,CAAb,CAAL,QADA;AAELG,MAAAA,MAAM,YAAK,oBAAKH,QAAQ,CAAC,CAAD,CAAb,CAAL,QAFD;AAGLI,MAAAA,KAAK,YAAK,oBAAKJ,QAAQ,CAAC,CAAD,CAAb,CAAL;AAHA,KAAP;AAKD;;AAED,SAAO,EAAP;AACD,CArBD","sourcesContent":["import { trim } from \"lodash\"\nimport React from \"react\"\n\nimport { SeoDataForArtwork_artwork } from \"__generated__/SeoDataForArtwork_artwork.graphql\"\nimport { CreativeWork } from \"Components/v2/Seo/CreativeWork\"\nimport { Product } from \"Components/v2/Seo/Product\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { data as sd } from \"sharify\"\nimport { get } from \"Utils/get\"\n\nconst { APP_URL } = sd\n\ninterface SeoDataForArtworkProps {\n  artwork: SeoDataForArtwork_artwork\n}\n\nexport const AVAILABILITY = {\n  \"for sale\": \"https://schema.org/InStock\",\n  sold: \"https://schema.org/OutOfStock\",\n}\n\nexport const SeoDataForArtwork: React.FC<SeoDataForArtworkProps> = ({\n  artwork,\n}) => {\n  const artistsName = artwork.artist_names\n\n  const dimensions = parseDimensions(get(artwork, a => a.dimensions.in, \"\"))\n\n  const artworkMetaData = {\n    name: artwork.meta.title,\n    image: get(artwork, a => a.meta_image.resized.url),\n    description: get(artwork, a => a.meta.description),\n    url: `${APP_URL}${artwork.href}`,\n    ...dimensions,\n    brand: {\n      \"@type\": \"Person\",\n      name: artistsName,\n    },\n  }\n\n  const partnerType = get(artwork, a => a.partner.type)\n  if (partnerType === \"Institution\") {\n    return <CreativeWork data={artworkMetaData} />\n  }\n\n  const ecommerceData = {\n    category: artwork.category,\n    productionDate: artwork.date,\n    offers: {\n      \"@type\": \"Offer\",\n      ...displayPrice(artwork),\n      availability: AVAILABILITY[artwork.availability],\n      seller: {\n        \"@type\": \"ArtGallery\",\n        name: get(artwork, a => a.partner.name),\n        image: get(artwork, a => a.partner.profile.image.resized.url),\n      },\n    },\n  }\n\n  return (\n    <Product\n      data={{\n        ...artworkMetaData,\n        ...ecommerceData,\n      }}\n    />\n  )\n}\n\nexport const SeoDataForArtworkFragmentContainer = createFragmentContainer(\n  SeoDataForArtwork,\n  {\n    artwork: graphql`\n      fragment SeoDataForArtwork_artwork on Artwork {\n        href\n        date\n        is_price_hidden\n        is_price_range\n        price\n        price_currency\n        sale_message\n        meta_image: image {\n          resized(\n            width: 640\n            height: 640\n            version: [\"large\", \"medium\", \"tall\"]\n          ) {\n            width\n            height\n            url\n          }\n        }\n        meta {\n          title\n          description(limit: 155)\n        }\n        partner {\n          name\n          type\n          profile {\n            image {\n              resized(width: 320, height: 320, version: [\"medium\"]) {\n                url\n              }\n            }\n          }\n        }\n        artist_names\n        availability\n        category\n        dimensions {\n          in\n        }\n      }\n    `,\n  }\n)\n\nconst displayPrice = artwork => {\n  const {\n    is_price_hidden,\n    is_price_range,\n    price,\n    sale_message,\n    price_currency,\n  } = artwork\n\n  if (is_price_range && !is_price_hidden && price) {\n    return buildPriceSpecification(price_currency, splitPriceRange(price))\n  }\n\n  if (sale_message && sale_message.includes(\"-\")) {\n    return buildPriceSpecification(\n      price_currency,\n      splitPriceRange(sale_message)\n    )\n  }\n\n  return {\n    price: sale_message,\n    priceCurrency: price_currency,\n  }\n}\n\nconst splitPriceRange = (priceRange: string) => {\n  const minAndMaxPrice = priceRange.split(\"-\")\n  return {\n    minPrice: trim(minAndMaxPrice[0]).replace(\"$\", \"\"),\n    maxPrice: trim(minAndMaxPrice[1]),\n  }\n}\n\nconst buildPriceSpecification = (\n  price_currency: string,\n  priceRange: { minPrice: string; maxPrice: string }\n) => {\n  return {\n    priceSpecification: {\n      \"@type\": \"PriceSpecification\",\n      priceCurrency: price_currency,\n      ...priceRange,\n    },\n  }\n}\n\nconst parseDimensions = (dimensions: string) => {\n  if (!dimensions) return {}\n\n  const segments = dimensions.replace(\" in\", \"\").split(\"Ã—\")\n\n  if (segments.length === 2) {\n    return {\n      width: `${trim(segments[0])} in`,\n      height: `${trim(segments[1])} in`,\n    }\n  }\n\n  if (segments.length === 3) {\n    return {\n      width: `${trim(segments[0])} in`,\n      height: `${trim(segments[1])} in`,\n      depth: `${trim(segments[2])} in`,\n    }\n  }\n\n  return {}\n}\n"],"file":"SeoDataForArtwork.js"}