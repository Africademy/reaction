{"version":3,"sources":["../../../../src/Apps/Artwork/Utils/filterLocations.tsx"],"names":["filterLocations","locations","length","locationCities","map","location","index","city","filteredForDuplicatesAndBlanks","filter","pos","indexOf"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAIO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,SAAD,EAAgD;AAC7E,MAAI,CAACA,SAAD,IAAcA,SAAS,CAACC,MAAV,GAAmB,CAArC,EAAwC;AACtC,WAAO,IAAP;AACD;;AACD,MAAMC,cAAc,GAAGF,SAAS,CAACG,GAAV,CAAc,UAACC,QAAD,EAAWC,KAAX,EAAqB;AACxD,WAAOD,QAAQ,CAACE,IAAhB;AACD,GAFsB,CAAvB;AAGA,MAAMC,8BAA8B,GAAGL,cAAc,CAACM,MAAf,CAAsB,UAACF,IAAD,EAAOG,GAAP,EAAe;AAC1E,WAAOH,IAAI,IAAIJ,cAAc,CAACQ,OAAf,CAAuBJ,IAAvB,MAAiCG,GAAzC,IAAgDH,IAAI,CAACL,MAAL,GAAc,CAArE;AACD,GAFsC,CAAvC;AAGA,SAAOM,8BAAP;AACD,CAXM","sourcesContent":["/**\n * Helper function to filter out blank and duplicate location names\n * @param locations collection of location objects to filter\n */\nexport const filterLocations = (locations: ReadonlyArray<{ city: string }>) => {\n  if (!locations || locations.length < 1) {\n    return null\n  }\n  const locationCities = locations.map((location, index) => {\n    return location.city\n  })\n  const filteredForDuplicatesAndBlanks = locationCities.filter((city, pos) => {\n    return city && locationCities.indexOf(city) === pos && city.length > 0\n  })\n  return filteredForDuplicatesAndBlanks\n}\n"],"file":"filterLocations.js"}