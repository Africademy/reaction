{"version":3,"sources":["../../../src/Apps/Auction/getRedirect.ts"],"names":["registerRedirect","me","sale","has_qualified_credit_cards","path","registrationFlowPath","reason","is_auction","id","isRegisterable","auctionPath","userRegisteredToBid","confirmRegistrationPath","confirmBidRedirect","data","location","artwork","saleArtwork","registrationStatus","encodeURIComponent","pathname","is_registration_closed","artworkPath","qualified_for_bidding","is_closed","is_preview","is_open"],"mappings":"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","sourcesContent":["import { routes_ConfirmBidQueryResponse } from \"__generated__/routes_ConfirmBidQuery.graphql\"\nimport { routes_RegisterQueryResponse } from \"__generated__/routes_RegisterQuery.graphql\"\n\nexport interface Redirect {\n  path: string\n  reason: string\n}\n\nexport function registerRedirect({\n  me,\n  sale,\n}: routes_RegisterQueryResponse): Redirect | null {\n  if (me.has_qualified_credit_cards) {\n    return {\n      path: registrationFlowPath(sale),\n      reason: \"user already has a qualified credit card\",\n    }\n  } else if (!sale.is_auction) {\n    return {\n      path: `/sale/${sale.id}`,\n      reason: \"sale must be an auction\",\n    }\n  } else if (!isRegisterable(sale)) {\n    return {\n      path: auctionPath(sale),\n      reason: \"auction must be registerable\",\n    }\n  } else if (userRegisteredToBid(sale)) {\n    return {\n      path: confirmRegistrationPath(sale),\n      reason: \"user is already registered to bid\",\n    }\n  }\n\n  return null\n}\n\nexport function confirmBidRedirect(\n  data: routes_ConfirmBidQueryResponse,\n  location: Location\n): Redirect | null {\n  const { artwork, me } = data\n  const { saleArtwork } = artwork\n\n  const { sale } = saleArtwork\n  const { registrationStatus } = sale\n\n  if (!me) {\n    return {\n      path: \"/log_in?redirect_uri=\" + encodeURIComponent(location.pathname),\n      reason: \"user is not signed in\",\n    }\n  }\n\n  if (!registrationStatus && sale.is_registration_closed) {\n    return {\n      path: artworkPath(sale, artwork),\n      reason: \"user is not registered, registration closed\",\n    }\n  }\n  if (registrationStatus && !registrationStatus.qualified_for_bidding) {\n    return {\n      path: confirmRegistrationPath(sale),\n      reason: \"user is not qualified for bidding\",\n    }\n  }\n  if (sale.is_closed) {\n    return {\n      path: artworkPath(sale, artwork),\n      reason: \"sale is closed\",\n    }\n  }\n  return null\n}\n\nconst auctionPath = (sale: { id: string }): string => `/auction/${sale.id}`\nconst registrationFlowPath = (sale: { id: string }): string =>\n  auctionPath(sale) + \"/registration-flow\"\nconst confirmRegistrationPath = (sale: { id: string }): string =>\n  auctionPath(sale) + \"/confirm-registration\"\nconst artworkPath = (sale: { id: string }, artwork: { id: string }): string =>\n  auctionPath(sale) + `/artwork/${artwork.id}`\n\nfunction isRegisterable(sale: {\n  is_preview: boolean\n  is_open: boolean\n  is_registration_closed: boolean\n}): boolean {\n  return (sale.is_preview || sale.is_open) && !sale.is_registration_closed\n}\n\nfunction userRegisteredToBid(sale: {\n  registrationStatus: { qualified_for_bidding: boolean }\n}): boolean {\n  return !!sale.registrationStatus\n}\n"],"file":"getRedirect.js"}