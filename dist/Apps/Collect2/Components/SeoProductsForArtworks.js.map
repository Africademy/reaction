{"version":3,"sources":["../../../../src/Apps/Collect2/Components/SeoProductsForArtworks.tsx"],"names":["APP_URL","process","env","AVAILABILITY","sold","formatCurrency","value","separator","format","SeoProducts","artworks_connection","props","artworks","artworksForSeoProduct","edges","filter","edge","e","node","is_acquireable","partner","profile","icon","url","map","a","artists","availability","image","is_price_range","price","location","locations","artistsName","artist","name","isInstitution","type","partnerImg","p","__id","title","description","meta","href","brand","category","productionDate","date","offers","minPrice","split","maxPrice","priceCurrency","price_currency","seller","address","address_2","city","state","country","postal_code","Boolean","join","telephone","phone","React","Component","SeoProductsForArtworks"],"mappings":"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","sourcesContent":["import currency from \"currency.js\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { toSentence } from \"underscore.string\"\n\nimport { SeoProductsForArtworks_artworks } from \"__generated__/SeoProductsForArtworks_artworks.graphql\"\nimport { Product } from \"Components/v2/Seo/Product\"\nimport { get } from \"Utils/get\"\n\nconst { APP_URL } = process.env\n\nconst AVAILABILITY = {\n  \"for sale\": \"https://schema.org/InStock\",\n  sold: \"https://schema.org/OutOfStock\",\n}\n\nconst formatCurrency = value => currency(value, { separator: \"\" }).format()\n\ninterface SeoProductsProps {\n  artworks: SeoProductsForArtworks_artworks\n}\n\nexport class SeoProducts extends React.Component<SeoProductsProps> {\n  render() {\n    const {\n      artworks: { artworks_connection },\n    } = this.props\n\n    // here the filtering is necessary so we can re-use the artwork list shown in the page (could include\n    // non-acquireable artworks) without making an extra request. Also, seller image is a required field\n    // so excluding those that don't have `partner.profile.icon.url`.\n    const artworksForSeoProduct = artworks_connection!.edges!.filter(edge => {\n      return get(edge, e => {\n        return e!.node!.is_acquireable && e!.node!.partner!.profile!.icon!.url\n      })\n    })\n\n    return artworksForSeoProduct!.map(a => {\n      if (a!.node !== null) {\n        const node = a!.node\n        const {\n          artists,\n          availability,\n          image,\n          is_price_range,\n          partner,\n          price,\n        } = node\n        const location = partner && partner.locations && partner.locations[0]\n        const artistsName = artists\n          ? toSentence(artists.map(artist => artist!.name))\n          : null\n        const isInstitution = partner && partner.type === \"Institution\"\n        const partnerImg = get(partner, p => {\n          return p.profile.icon.url\n        })\n\n        return (\n          <Product\n            key={node.__id}\n            data={{\n              name: node.title,\n              image: image && image.url,\n              description: node.meta && node.meta.description,\n              url: `${APP_URL}${node.href}`,\n              brand: {\n                \"@type\": \"Person\",\n                name: artistsName,\n              },\n              ...(isInstitution\n                ? {}\n                : {\n                    category: node.category,\n                    productionDate: node.date,\n                    offers: {\n                      \"@type\": \"Offer\",\n                      price: !is_price_range\n                        ? formatCurrency(price)\n                        : {\n                            minPrice:\n                              price && formatCurrency(price.split(\"-\")[0]),\n                            maxPrice:\n                              price && formatCurrency(price.split(\"-\")[1]),\n                          },\n                      priceCurrency: node.price_currency,\n                      availability: availability && AVAILABILITY[availability],\n                      seller: {\n                        \"@type\": \"ArtGallery\",\n                        name: partner && partner.name,\n                        image: partnerImg,\n                        address: location\n                          ? [\n                              location.address,\n                              location.address_2,\n                              location.city,\n                              location.state,\n                              location.country,\n                              location.postal_code,\n                            ]\n                              .filter(Boolean)\n                              .join(\", \")\n                          : null,\n                        telephone: location ? location.phone : null,\n                      },\n                    },\n                  }),\n            }}\n          />\n        )\n      }\n    })\n  }\n}\n\nexport const SeoProductsForArtworks = createFragmentContainer(SeoProducts, {\n  artworks: graphql`\n    fragment SeoProductsForArtworks_artworks on FilterArtworks\n      @argumentDefinitions(\n        first: { type: \"Int\", defaultValue: 30 }\n        after: { type: \"String\", defaultValue: \"\" }\n      ) {\n      artworks_connection(first: $first, after: $after) {\n        edges {\n          node {\n            __id\n            availability\n            category\n            date\n            href\n            is_acquireable\n            is_price_range\n            price\n            price_currency\n            title\n            artists(shallow: true) {\n              name\n            }\n            image {\n              url(version: \"larger\")\n            }\n            meta {\n              description\n            }\n            partner(shallow: true) {\n              name\n              type\n              profile {\n                icon {\n                  url(version: \"larger\")\n                }\n              }\n              locations(size: 1) {\n                address\n                address_2\n                city\n                state\n                country\n                postal_code\n                phone\n              }\n            }\n          }\n        }\n      }\n    }\n  `,\n})\n"],"file":"SeoProductsForArtworks.js"}