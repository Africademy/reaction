{"version":3,"sources":["../../../../../src/Apps/Collect2/Routes/Collect/index.tsx"],"names":["CollectApp","context_page","Schema","PageName","CollectPage","props","params","viewer","location","medium","description","breadcrumbTitle","title","trackEvent","COLLECTION_HUB_ENTRYPOINTS_TEST","experiment","action_type","ActionType","ExperimentViewed","experiment_id","experiment_name","variation_id","variation_name","nonInteraction","canonicalHref","sd","APP_URL","showCollectionHubs","filterArtworks","items","path","name","push","marketingHubCollections","query","value","text","filters","url","window","history","replaceState","key","filterState","CommercialFilterParamsChanged","changed","current","CollectAppFragmentContainer"],"mappings":"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","sourcesContent":["import { Box, Separator, Serif, Spacer } from \"@artsy/palette\"\nimport { Location, Router } from \"found\"\nimport React, { useEffect } from \"react\"\nimport { Link, Meta, Title } from \"react-head\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { data as sd } from \"sharify\"\n\nimport { SeoProductsForArtworks } from \"Apps/Collect2/Components/SeoProductsForArtworks\"\nimport { buildUrlForCollectApp } from \"Apps/Collect2/Utils/urlBuilder\"\nimport { AppContainer } from \"Apps/Components/AppContainer\"\n\nimport { track, useTracking } from \"Artsy/Analytics\"\nimport * as Schema from \"Artsy/Analytics/Schema\"\nimport { FrameWithRecentlyViewed } from \"Components/FrameWithRecentlyViewed\"\nimport { BreadCrumbList } from \"Components/v2/Seo\"\n\nimport { getMetadataForMedium } from \"./Components/CollectMediumMetadata\"\n\nimport { Collect_marketingHubCollections } from \"__generated__/Collect_marketingHubCollections.graphql\"\nimport { collectRoutes_ArtworkFilterQueryResponse } from \"__generated__/collectRoutes_ArtworkFilterQuery.graphql\"\nimport { useSystemContext } from \"Artsy\"\nimport { ArtworkFilter } from \"Components/v2/ArtworkFilter\"\nimport { CollectionsHubsNavFragmentContainer as CollectionsHubsNav } from \"Components/v2/CollectionsHubsNav\"\n\nexport interface CollectAppProps {\n  COLLECTION_HUB_ENTRYPOINTS_TEST?: string\n  location: Location\n  router: Router\n  marketingHubCollections: Collect_marketingHubCollections\n  viewer: collectRoutes_ArtworkFilterQueryResponse[\"viewer\"]\n  filterArtworks: collectRoutes_ArtworkFilterQueryResponse[\"filterArtworks\"]\n  params?: {\n    medium: string\n  }\n}\n\nexport const CollectApp = track({\n  context_page: Schema.PageName.CollectPage,\n})((props: CollectAppProps) => {\n  const { params, viewer, location } = props\n  const medium = params && params.medium\n  const { description, breadcrumbTitle, title } = getMetadataForMedium(medium)\n  const { trackEvent } = useTracking()\n\n  // FIXME: Remove after A/B test completes\n  // @ts-ignore\n  const { COLLECTION_HUB_ENTRYPOINTS_TEST } = useSystemContext()\n\n  useEffect(() => {\n    const experiment = \"collection_hub_entrypoints_test\"\n    trackEvent({\n      action_type: Schema.ActionType.ExperimentViewed,\n      experiment_id: experiment,\n      experiment_name: experiment,\n      variation_id: COLLECTION_HUB_ENTRYPOINTS_TEST,\n      variation_name: COLLECTION_HUB_ENTRYPOINTS_TEST,\n      nonInteraction: 1,\n    })\n  }, [])\n\n  const canonicalHref = medium\n    ? `${sd.APP_URL}/collect/${medium}`\n    : `${sd.APP_URL}/collect`\n\n  // Client renders will get COLLECTION_HUB_ENTRYPOINTS_TEST from sd; server renders\n  // will get it from the SystemContext.\n  const showCollectionHubs = COLLECTION_HUB_ENTRYPOINTS_TEST === \"experiment\"\n\n  const { filterArtworks } = props\n\n  const items = [{ path: \"/collect\", name: \"Collect\" }]\n  if (medium) {\n    items.push({\n      path: `/collect/${medium}`,\n      name: breadcrumbTitle,\n    })\n  }\n\n  return (\n    <AppContainer>\n      <FrameWithRecentlyViewed>\n        <Title>{title}</Title>\n        <Meta property=\"og:url\" content={`${sd.APP_URL}/collect`} />\n        <Meta\n          property=\"og:image\"\n          content={`${sd.APP_URL}/images/og_image.jpg`}\n        />\n        <Meta name=\"description\" content={description} />\n        <Meta property=\"og:description\" content={description} />\n        <Meta property=\"twitter:description\" content={description} />\n        <Link rel=\"canonical\" href={canonicalHref} />\n\n        <BreadCrumbList items={items} />\n\n        {filterArtworks && <SeoProductsForArtworks artworks={filterArtworks} />}\n\n        <Box mt={3}>\n          <Serif size=\"8\">\n            <h1>Collect art and design online</h1>\n          </Serif>\n          <Separator mt={2} mb={[2, 2, 2, 4]} />\n\n          {showCollectionHubs && (\n            <>\n              <CollectionsHubsNav\n                marketingHubCollections={props.marketingHubCollections}\n              />\n\n              <Spacer mb={2} mt={[2, 2, 2, 4]} />\n            </>\n          )}\n        </Box>\n\n        <Box>\n          <ArtworkFilter\n            viewer={viewer}\n            filters={location.query as any}\n            sortOptions={[\n              { value: \"-decayed_merch\", text: \"Default\" },\n              { value: \"-partner_updated_at\", text: \"Recently updated\" },\n              { value: \"-published_at\", text: \"Recently added\" },\n              { value: \"-year\", text: \"Artwork year (desc.)\" },\n              { value: \"year\", text: \"Artwork year (asc.)\" },\n            ]}\n            onChange={filters => {\n              const url = buildUrlForCollectApp(filters)\n\n              if (typeof window !== \"undefined\") {\n                window.history.replaceState({}, \"\", url)\n              }\n\n              /**\n               * FIXME: Ideally we route using our router, but are running into\n               * synchronization issues between router state and URL bar state.\n               *\n               * See below example as an illustration:\n               *\n                const newLocation = router.createLocation(url)\n\n                router.replace({\n                  ...newLocation,\n                  state: {\n                    scrollTo: \"#jump--artworkFilter\"\n                  },\n                })\n               *\n               */\n            }}\n            onFilterClick={(key, value, filterState) => {\n              trackEvent({\n                action_type: Schema.ActionType.CommercialFilterParamsChanged,\n                changed: { [key]: value },\n                current: filterState,\n              })\n            }}\n          />\n        </Box>\n      </FrameWithRecentlyViewed>\n    </AppContainer>\n  )\n})\n\nexport const CollectAppFragmentContainer = createFragmentContainer(CollectApp, {\n  marketingHubCollections: graphql`\n    fragment Collect_marketingHubCollections on MarketingCollection\n      @relay(plural: true) {\n      ...CollectionsHubsNav_marketingHubCollections\n    }\n  `,\n})\n"],"file":"index.js"}