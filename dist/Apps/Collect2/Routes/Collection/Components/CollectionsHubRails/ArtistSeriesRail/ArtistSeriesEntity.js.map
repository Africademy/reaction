{"version":3,"sources":["../../../../../../../../src/Apps/Collect2/Routes/Collection/Components/CollectionsHubRails/ArtistSeriesRail/ArtistSeriesEntity.tsx"],"names":["ArtistSeriesEntity","member","itemNumber","headerImage","artworks_connection","artworks","price_guidance","slug","title","edges","map","node","bgImages","image","url","imageSize","length","trackEvent","handleLinkClick","action_type","AnalyticsSchema","ActionType","Click","context_page","PageName","CollectionPage","context_module","ContextModule","ArtistCollectionsRail","context_page_owner_type","OwnerType","Collection","type","Type","Thumbnail","destination_path","sd","APP_URL","item_number","i","hit","artistName","artist","a","name","alt","separator","precision","format","ArtworkImage","styled","img","width","ImgOverlay","Box","Container","SingleImgContainer","CollectionTitle","Serif","ImgWrapper","Flex","StyledLink","RouterLink","ArtistSeriesRailContainer"],"mappings":"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","sourcesContent":["import { Box, color, Flex, Sans, Serif } from \"@artsy/palette\"\nimport { ArtistSeriesEntity_member } from \"__generated__/ArtistSeriesEntity_member.graphql\"\nimport { AnalyticsSchema } from \"Artsy/Analytics\"\nimport { useTracking } from \"Artsy/Analytics/useTracking\"\nimport { RouterLink } from \"Artsy/Router/RouterLink\"\nimport { Truncator } from \"Components/Truncator\"\nimport currency from \"currency.js\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { data as sd } from \"sharify\"\nimport styled from \"styled-components\"\nimport { get } from \"Utils/get\"\n\nexport interface ArtistSeriesEntityProps {\n  member: ArtistSeriesEntity_member\n  itemNumber: number\n}\n\nexport const ArtistSeriesEntity: React.FC<ArtistSeriesEntityProps> = ({\n  member,\n  itemNumber,\n}) => {\n  const {\n    headerImage,\n    artworks: { artworks_connection },\n    price_guidance,\n    slug,\n    title,\n  } = member\n  const artworks = artworks_connection.edges.map(({ node }) => node)\n  const bgImages = artworks.map(({ image }) => image && image.url)\n  const imageSize =\n    bgImages!.length === 1 ? 221 : bgImages!.length === 2 ? 109 : 72\n\n  const { trackEvent } = useTracking()\n\n  const handleLinkClick = () => {\n    trackEvent({\n      action_type: AnalyticsSchema.ActionType.Click,\n      context_page: AnalyticsSchema.PageName.CollectionPage,\n      context_module: AnalyticsSchema.ContextModule.ArtistCollectionsRail,\n      context_page_owner_type: AnalyticsSchema.OwnerType.Collection,\n      type: AnalyticsSchema.Type.Thumbnail,\n      destination_path: `${sd.APP_URL}/collection/${slug}`,\n      item_number: itemNumber,\n    })\n  }\n\n  return (\n    <Container px={2} pt={2} pb={2} m={1}>\n      <StyledLink to={`/collection/${slug}`} onClick={handleLinkClick}>\n        <ImgWrapper>\n          {bgImages!.length\n            ? bgImages.map((url, i) => {\n                const hit = artworks![i]\n                const artistName = get(hit!.artist, a => a!.name)\n                const alt = `${artistName ? artistName + \", \" : \"\"}${\n                  hit!.title\n                }`\n                return (\n                  <SingleImgContainer key={i}>\n                    <ImgOverlay width={imageSize} />\n                    {url && (\n                      <ArtworkImage\n                        key={i}\n                        src={url}\n                        width={imageSize}\n                        alt={alt}\n                      />\n                    )}\n                  </SingleImgContainer>\n                )\n              })\n            : headerImage && <ArtworkImage src={headerImage} width={221} />}\n        </ImgWrapper>\n        {\n          <CollectionTitle pt={1} pb={0.5} size=\"3\">\n            <Truncator maxLineCount={1}>{title}</Truncator>\n          </CollectionTitle>\n        }\n        {price_guidance && (\n          <Sans size=\"2\" color=\"black60\" pb={1}>\n            From $\n            {currency(price_guidance, {\n              separator: \",\",\n              precision: 0,\n            }).format()}\n          </Sans>\n        )}\n      </StyledLink>\n    </Container>\n  )\n}\n\nexport const ArtworkImage = styled.img<{ width: number }>`\n  width: ${({ width }) => width}px;\n  height: 125px;\n  background-color: ${color(\"black10\")};\n  object-fit: cover;\n  object-position: center;\n  opacity: 0.9;\n`\n\nconst ImgOverlay = styled(Box)<{ width: number }>`\n  height: 125px;\n  background-color: ${color(\"black30\")};\n  opacity: 0.1;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 7;\n`\n\nexport const Container = styled(Box)`\n  border: 1px solid ${color(\"black10\")};\n  border-radius: 2px;\n\n  &:hover {\n    text-decoration: none;\n    border: 1px solid ${color(\"black60\")};\n  }\n`\n\nconst SingleImgContainer = styled(Box)`\n  position: relative;\n  margin-right: 2px;\n\n  &:last-child {\n    margin-right: 0;\n  }\n`\n\nconst CollectionTitle = styled(Serif)`\n  width: 100%;\n`\n\nexport const ImgWrapper = styled(Flex)`\n  width: 221px;\n`\n\nexport const StyledLink = styled(RouterLink)`\n  text-decoration: none;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nexport const ArtistSeriesRailContainer = createFragmentContainer(\n  ArtistSeriesEntity,\n  {\n    member: graphql`\n      fragment ArtistSeriesEntity_member on MarketingCollection {\n        slug\n        headerImage\n        thumbnail\n        title\n        price_guidance\n\n        artworks(aggregations: [TOTAL], sort: \"-decayed_merch\") {\n          artworks_connection(first: 3) {\n            edges {\n              node {\n                artist {\n                  name\n                }\n                title\n                image {\n                  url(version: \"small\")\n                }\n              }\n            }\n          }\n        }\n      }\n    `,\n  }\n)\n"],"file":"ArtistSeriesEntity.js"}