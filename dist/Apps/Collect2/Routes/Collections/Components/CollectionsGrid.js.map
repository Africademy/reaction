{"version":3,"sources":["../../../../../../src/Apps/Collect2/Routes/Collections/Components/CollectionsGrid.tsx"],"names":["CollectionsGrid","props","collections","name","router","hasShortRow","length","sort","a","b","title","localeCompare","map","collection","index","imageUrl","headerImage","width","height","slug","undefined","event","preventDefault","push","_","renderChildren","Component","CollectionsGridAnchor","styled"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAcaA,e;;;;;;;;;;;;;6BACF;AAAA,wBAC+B,KAAKC,KADpC;AAAA,UACCC,WADD,eACCA,WADD;AAAA,UACcC,IADd,eACcA,IADd;AAAA,UACoBC,MADpB,eACoBA,MADpB;AAEP,UAAMC,WAAW,GAAGH,WAAW,CAACI,MAAZ,GAAqB,CAArB,KAA2B,CAA/C,CAFO,CAE0C;;AAEjD,aACE,6BAAC,YAAD;AAAK,QAAA,EAAE,EAAE;AAAT,SACE,6BAAC,qBAAD;AAAuB,QAAA,EAAE,EAAEH,IAAI,IAAI,yBAAQA,IAAR;AAAnC,QADF,EAEE,6BAAC,aAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAe,QAAA,MAAM,EAAC,QAAtB;AAA+B,QAAA,EAAE,EAAE;AAAnC,SACGA,IADH,CAFF,EAME,6BAAC,aAAD;AAAM,QAAA,QAAQ,EAAC,MAAf;AAAsB,QAAA,cAAc,EAAC;AAArC,SACG,mBAAID,WAAJ,EAAiB;AAAjB,OACEK,IADF,CACO,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUD,CAAC,CAACE,KAAF,CAAQC,aAAR,CAAsBF,CAAC,CAACC,KAAxB,CAAV;AAAA,OADP,EAEEE,GAFF,CAEM,UAACC,UAAD,EAAaC,KAAb,EAAuB;AAC1B,YAAMC,QAAQ,GACZF,UAAU,CAACG,WAAX,IACA,mBAAKH,UAAU,CAACG,WAAhB,EAA6B;AAC3BC,UAAAA,KAAK,EAAE,EADoB;AAE3BC,UAAAA,MAAM,EAAE;AAFmB,SAA7B,CAFF;AAOA,eACE,6BAAC,aAAD;AACE,UAAA,KAAK,EAAE,CAAC,MAAD,EAAS,KAAT,CADT;AAEE,UAAA,aAAa,EAAC,QAFhB;AAGE,UAAA,GAAG,EAAEL,UAAU,CAACM,IAAX,GAAkBL;AAHzB,WAKE,6BAAC,iBAAD;AAAO,UAAA,EAAE,EAAC;AAAV,WAAgBA,KAAK,KAAK,CAAV,IAAe,6BAAC,kBAAD,OAA/B,CALF,EAME,6BAAC,iBAAD;AAAO,UAAA,WAAW,EAAC;AAAnB,WAAyBA,KAAK,GAAG,CAAR,IAAa,6BAAC,kBAAD,OAAtC,CANF,EAQE,6BAAC,qBAAD;AACE,UAAA,EAAE,EAAE,CADN;AAEE,UAAA,IAAI,wBAAiBD,UAAU,CAACM,IAA5B,CAFN;AAGE,UAAA,QAAQ,EAAEJ,QAAQ,IAAIK,SAHxB;AAIE,UAAA,IAAI,EAAEP,UAAU,CAACH,KAJnB;AAKE,UAAA,OAAO,EAAE,iBAAAW,KAAK,EAAI;AAChBA,YAAAA,KAAK,CAACC,cAAN;AACAlB,YAAAA,MAAM,CAACmB,IAAP,uBAA2BV,UAAU,CAACM,IAAtC;AACD;AARH,UARF,EAkBE,6BAAC,kBAAD,OAlBF,CADF;AAsBD,OAhCF,CADH,EAmCGd,WAAW,IACV,6BAAC,iBAAD;AAAO,QAAA,WAAW,EAAC;AAAnB,SACG,UAACmB,CAAD,EAAIC,cAAJ;AAAA,eACCA,cAAc,IAAI,6BAAC,eAAD;AAAQ,UAAA,KAAK,EAAE,CAAC,MAAD,EAAS,KAAT;AAAf,UADnB;AAAA,OADH,CApCJ,CANF,CADF;AAoDD;;;;EAzDkCC,gB;;;;AA4DrC,IAAMC,qBAAqB,GAAGC,0BAAOpB,CAAV;AAAA;AAAA;AAAA,oEAA3B","sourcesContent":["import React, { Component } from \"react\"\nimport { slugify } from \"underscore.string\"\nimport { crop } from \"Utils/resizer\"\nimport { Media } from \"Utils/Responsive\"\n\nimport {\n  Box,\n  EntityHeader,\n  Flex,\n  Sans,\n  Separator,\n  Spacer,\n} from \"@artsy/palette\"\nimport { Router } from \"found\"\nimport styled from \"styled-components\"\n\nexport interface CollectionEntity {\n  title: string\n  headerImage?: string\n  slug: string\n}\n\ninterface CollectionsGridProps {\n  collections: CollectionEntity[]\n  name?: string\n  router: Router\n}\n\nexport class CollectionsGrid extends Component<CollectionsGridProps> {\n  render() {\n    const { collections, name, router } = this.props\n    const hasShortRow = collections.length % 3 !== 0 // Preserve left align\n\n    return (\n      <Box pb={80}>\n        <CollectionsGridAnchor id={name && slugify(name)} />\n        <Sans size=\"3\" weight=\"medium\" pb={15}>\n          {name}\n        </Sans>\n\n        <Flex flexWrap=\"wrap\" justifyContent=\"space-between\">\n          {[...collections] // needs to create a new array since the sort function modifies the array.\n            .sort((a, b) => a.title.localeCompare(b.title))\n            .map((collection, index) => {\n              const imageUrl =\n                collection.headerImage &&\n                crop(collection.headerImage, {\n                  width: 50,\n                  height: 50,\n                })\n\n              return (\n                <Flex\n                  width={[\"100%\", \"30%\"]}\n                  flexDirection=\"column\"\n                  key={collection.slug + index}\n                >\n                  <Media at=\"xs\">{index === 0 && <Separator />}</Media>\n                  <Media greaterThan=\"xs\">{index < 3 && <Separator />}</Media>\n\n                  <EntityHeader\n                    py={2}\n                    href={`/collection/${collection.slug}`}\n                    imageUrl={imageUrl || undefined}\n                    name={collection.title}\n                    onClick={event => {\n                      event.preventDefault()\n                      router.push(`/collection/${collection.slug}`)\n                    }}\n                  />\n                  <Separator />\n                </Flex>\n              )\n            })}\n\n          {hasShortRow && (\n            <Media greaterThan=\"xs\">\n              {(_, renderChildren) =>\n                renderChildren && <Spacer width={[\"100%\", \"30%\"]} />\n              }\n            </Media>\n          )}\n        </Flex>\n      </Box>\n    )\n  }\n}\n\nconst CollectionsGridAnchor = styled.a`\n  display: block;\n  position: relative;\n  top: -90px;\n  visibility: hidden;\n`\n"],"file":"CollectionsGrid.js"}