{"version":3,"sources":["../../../../../src/Apps/Collect2/Routes/Collections/index.tsx"],"names":["META_DESCRIPTION","isServer","window","CollectionsApp","props","categories","router","sd","APP_URL","path","name","sort","a","b","localeCompare","map","category","index","Component","CategoryItem","showAll","toggleShowAll","collections","truncatedCollections","slice","displayableCollections","textAlign","CollectionsAppFragmentContainer"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Sans, Serif } from \"@artsy/palette\"\nimport { Collections_categories } from \"__generated__/Collections_categories.graphql\"\nimport { AppContainer } from \"Apps/Components/AppContainer\"\nimport { FrameWithRecentlyViewed } from \"Components/FrameWithRecentlyViewed\"\nimport { BreadCrumbList } from \"Components/v2/Seo\"\nimport { Link, Router } from \"found\"\nimport React, { Component, useState } from \"react\"\nimport { Meta, Title } from \"react-head\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { data as sd } from \"sharify\"\nimport { CollectionEntity, CollectionsGrid } from \"./Components/CollectionsGrid\"\n\ninterface CollectionsAppProps {\n  categories: Collections_categories\n  router: Router\n}\n\nconst META_DESCRIPTION =\n  \"Discover collections of art curated by Artsy Specialists. From iconic artist series to trending design, shop \" +\n  \"collections on the world's largest online art marketplace.\"\n\nconst isServer = typeof window === \"undefined\"\n\nexport class CollectionsApp extends Component<CollectionsAppProps> {\n  render() {\n    const { categories, router } = this.props\n\n    return (\n      <>\n        <Title>Collections | Artsy</Title>\n        <Meta property=\"og:url\" content={`${sd.APP_URL}/collections`} />\n        <Meta name=\"description\" content={META_DESCRIPTION} />\n        <Meta property=\"og:description\" content={META_DESCRIPTION} />\n        <Meta property=\"twitter:description\" content={META_DESCRIPTION} />\n        <BreadCrumbList\n          items={[{ path: \"/collections\", name: \"Collections\" }]}\n        />\n\n        <AppContainer>\n          <FrameWithRecentlyViewed>\n            <Flex\n              mt={3}\n              mb={4}\n              justifyContent=\"space-between\"\n              alignItems=\"flex-end\"\n            >\n              <Serif size=\"8\">\n                <h1>Collections</h1>\n              </Serif>\n\n              <Box pb={0.3}>\n                <Sans size=\"3\" weight=\"medium\">\n                  <Link to=\"/collect\">View works</Link>\n                </Sans>\n              </Box>\n            </Flex>\n            {categories &&\n              [...categories] // creates a new array since the sort function modifies the array.\n                .sort((a, b) => a.name.localeCompare(b.name))\n                .map((category, index) => {\n                  return (\n                    <Box key={category.name + index}>\n                      <CategoryItem category={category} router={router} />\n                    </Box>\n                  )\n                })}\n          </FrameWithRecentlyViewed>\n        </AppContainer>\n      </>\n    )\n  }\n}\n\nconst CategoryItem = props => {\n  const [showAll, toggleShowAll] = useState(false)\n  const { category, router } = props\n  const { collections } = category\n  const truncatedCollections = collections.slice(0, 21)\n  const displayableCollections = (showAll || isServer\n    ? collections\n    : truncatedCollections) as CollectionEntity[]\n\n  return (\n    <>\n      <CollectionsGrid\n        name={category.name}\n        collections={displayableCollections}\n        router={router}\n      />\n      {!(isServer || showAll) && (\n        <Box mb={6} width=\"100%\" style={{ textAlign: \"center\" }}>\n          <Button\n            size=\"medium\"\n            variant=\"secondaryOutline\"\n            onClick={() => toggleShowAll(true)}\n          >\n            More in {category.name}\n          </Button>\n        </Box>\n      )}\n    </>\n  )\n}\n\nexport const CollectionsAppFragmentContainer = createFragmentContainer(\n  CollectionsApp,\n  {\n    categories: graphql`\n      fragment Collections_categories on MarketingCollectionCategory\n        @relay(plural: true) {\n        name\n        collections {\n          slug\n          headerImage\n          title\n        }\n      }\n    `,\n  }\n)\n"],"file":"index.js"}