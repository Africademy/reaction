{"version":3,"sources":["../../../src/Apps/Collect2/collectRoutes.tsx"],"names":["collectRoutes","path","Component","CollectApp","fetchIndicator","prepareVariables","initializeVariablesWithFilterState","query","CollectionsApp","CollectionApp","CollectionAppQuery","params","props","initialFilterState","location","medium","state","sort"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;;AAEA;;AACA;;AAEA;;;;;;AAKO,IAAMA,aAA4B,GAAG,CAC1C;AACEC,EAAAA,IAAI,EAAE,mBADR;AAEEC,EAAAA,SAAS,EAAEC,oCAFb;AAGEC,EAAAA,cAAc,EAAE,SAHlB;AAIEC,EAAAA,gBAAgB,EAAEC,kCAJpB;AAKEC,EAAAA,KAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AALP,CAD0C,EAgE1C;AACEN,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,SAAS,EAAEM,4CAFb;AAGEJ,EAAAA,cAAc,EAAE,SAHlB;AAIEG,EAAAA,KAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJP,CAhE0C,EA4E1C;AACEN,EAAAA,IAAI,EAAE,mBADR;AAEEC,EAAAA,SAAS,EAAEO,sCAFb;AAGEJ,EAAAA,gBAAgB,EAAEC,kCAHpB;AAIEF,EAAAA,cAAc,EAAE,SAJlB;AAKEG,EAAAA,KAAK,EAAEG;AALT,CA5E0C,CAArC;;;AAqFP,SAASJ,kCAAT,CAA4CK,MAA5C,EAAoDC,KAApD,EAA2D;AACzD,MAAMC,kBAAkB,GAAGD,KAAK,CAACE,QAAN,GAAiBF,KAAK,CAACE,QAAN,CAAeP,KAAhC,GAAwC,EAAnE;;AAEA,MAAII,MAAM,CAACI,MAAX,EAAmB;AACjBF,IAAAA,kBAAkB,CAACE,MAAnB,GAA4BJ,MAAM,CAACI,MAAnC;;AAEA,QAAIH,KAAK,CAACE,QAAN,CAAeP,KAAnB,EAA0B;AACxBK,MAAAA,KAAK,CAACE,QAAN,CAAeP,KAAf,CAAqBQ,MAArB,GAA8BJ,MAAM,CAACI,MAArC;AACD;AACF;;AAED,MAAMC,KAAK;AACTC,IAAAA,IAAI,EAAE;AADG,KAENJ,kBAFM,EAGNF,MAHM,CAAX;;AAMA,SAAOK,KAAP;AACD","sourcesContent":["import { RouteConfig } from \"found\"\nimport { graphql } from \"react-relay\"\n\nimport { CollectAppFragmentContainer as CollectApp } from \"./Routes/Collect\"\nimport { CollectionsAppFragmentContainer as CollectionsApp } from \"./Routes/Collections\"\n\nimport {\n  CollectionAppQuery,\n  CollectionRefetchContainer as CollectionApp,\n} from \"./Routes/Collection\"\n\nexport const collectRoutes: RouteConfig[] = [\n  {\n    path: \"/collect/:medium?\",\n    Component: CollectApp,\n    fetchIndicator: \"overlay\",\n    prepareVariables: initializeVariablesWithFilterState,\n    query: graphql`\n      query collectRoutes_ArtworkFilterQuery(\n        $acquireable: Boolean\n        $aggregations: [ArtworkAggregation] = [TOTAL]\n        $artist_id: String\n        $at_auction: Boolean\n        $attribution_class: [String]\n        $color: String\n        $for_sale: Boolean\n        $height: String\n        $inquireable_only: Boolean\n        $major_periods: [String]\n        $medium: String\n        $offerable: Boolean\n        $page: Int\n        $partner_id: ID\n        $price_range: String\n        $sort: String\n        $keyword: String\n        $width: String\n      ) {\n        marketingHubCollections {\n          ...Collect_marketingHubCollections\n        }\n\n        filterArtworks: filter_artworks(\n          aggregations: $aggregations\n          sort: $sort\n        ) {\n          ...SeoProductsForArtworks_artworks\n        }\n\n        viewer {\n          ...ArtworkFilter_viewer\n            @arguments(\n              acquireable: $acquireable\n              aggregations: $aggregations\n              artist_id: $artist_id\n              at_auction: $at_auction\n              attribution_class: $attribution_class\n              color: $color\n              for_sale: $for_sale\n              height: $height\n              inquireable_only: $inquireable_only\n              keyword: $keyword\n              major_periods: $major_periods\n              medium: $medium\n              offerable: $offerable\n              page: $page\n              partner_id: $partner_id\n              price_range: $price_range\n              sort: $sort\n              width: $width\n            )\n        }\n      }\n    `,\n  },\n  {\n    path: \"/collections\",\n    Component: CollectionsApp,\n    fetchIndicator: \"overlay\",\n    query: graphql`\n      query collectRoutes_MarketingCollectionsAppQuery {\n        categories: marketingCategories @principalField {\n          ...Collections_categories\n        }\n      }\n    `,\n  },\n  {\n    path: \"/collection/:slug\",\n    Component: CollectionApp,\n    prepareVariables: initializeVariablesWithFilterState,\n    fetchIndicator: \"overlay\",\n    query: CollectionAppQuery,\n  },\n]\n\nfunction initializeVariablesWithFilterState(params, props) {\n  const initialFilterState = props.location ? props.location.query : {}\n\n  if (params.medium) {\n    initialFilterState.medium = params.medium\n\n    if (props.location.query) {\n      props.location.query.medium = params.medium\n    }\n  }\n\n  const state = {\n    sort: \"-decayed_merch\",\n    ...initialFilterState,\n    ...params,\n  }\n\n  return state\n}\n"],"file":"collectRoutes.js"}