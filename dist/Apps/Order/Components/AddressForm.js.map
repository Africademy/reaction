{"version":3,"sources":["../../../../src/Apps/Order/Components/AddressForm.tsx"],"names":["emptyAddress","Object","freeze","name","country","postalCode","addressLine1","addressLine2","city","region","phoneNumber","AddressForm","address","props","value","key","ev","onChangeValue","currentTarget","setState","state","onChange","touched","errors","billing","showPhoneNumberInput","lockCountryToOrigin","domesticOnly","changeEventHandler","getError","shippingCountry","changeValueHandler","phoneNumberInputDescription","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBO,IAAMA,YAAqB,GAAGC,MAAM,CAACC,MAAP,CAAc;AACjDC,EAAAA,IAAI,EAAE,EAD2C;AAEjDC,EAAAA,OAAO,EAAE,EAFwC;AAGjDC,EAAAA,UAAU,EAAE,EAHqC;AAIjDC,EAAAA,YAAY,EAAE,EAJmC;AAKjDC,EAAAA,YAAY,EAAE,EALmC;AAMjDC,EAAAA,IAAI,EAAE,EAN2C;AAOjDC,EAAAA,MAAM,EAAE,EAPyC;AAQjDC,EAAAA,WAAW,EAAE;AARoC,CAAd,CAA9B;;;IAyBMC,W;;;;;;;;;;;;;;;;;;4DAIH;AACNC,MAAAA,OAAO,oBACFZ,YADE,EAEF,MAAKa,KAAL,CAAWC,KAFT;AADD,K;;yEAOa,UAACC,GAAD;AAAA,aAAwB,UAC3CC,EAD2C,EAExC;AACH,cAAKC,aAAL,CAAmBF,GAAnB,EAAwBC,EAAE,CAACE,aAAH,CAAiBJ,KAAzC;AACD,OAJoB;AAAA,K;;yEAMA,UAACC,GAAD;AAAA,aAAwB,UAACD,KAAD,EAAmB;AAC9D,cAAKG,aAAL,CAAmBF,GAAnB,EAAwBD,KAAxB;AACD,OAFoB;AAAA,K;;oEAIL,UAACC,GAAD,EAAqBD,KAArB,EAAuC;AACrD,YAAKK,QAAL,CAAc;AAAEP,QAAAA,OAAO,oBAAO,MAAKQ,KAAL,CAAWR,OAAlB,sBAA4BG,GAA5B,EAAkCD,KAAlC;AAAT,OAAd,EAAoE,YAAM;AACxE,cAAKD,KAAL,CAAWQ,QAAX,CAAoB,MAAKD,KAAL,CAAWR,OAA/B,EAAwCG,GAAxC;AACD,OAFD;AAGD,K;;+DAEU,UAACA,GAAD,EAAgC;AACzC,aACG,MAAKF,KAAL,CAAWS,OAAX,IACC,MAAKT,KAAL,CAAWS,OAAX,CAAmBP,GAAnB,CADD,IAEC,MAAKF,KAAL,CAAWU,MAFZ,IAGC,MAAKV,KAAL,CAAWU,MAAX,CAAkBR,GAAlB,CAHF,IAIA,EALF;AAOD,K;;kFAE6B,YAAqB;AACjD,UAAI,MAAKF,KAAL,CAAWW,OAAX,IAAsB,MAAKX,KAAL,CAAWY,oBAArC,EAA2D;AACzD,eAAO,IAAP;AACD,OAFD,MAEO;AACL,eAAO,iCAAP;AACD;AACF,K;;;;;;;6BAEQ;AACP,UAAMC,mBAAmB,GAAG,CAAC,KAAKb,KAAL,CAAWW,OAAZ,IAAuB,KAAKX,KAAL,CAAWc,YAA9D;AACA,aACE,6BAAC,aAAD;AAAM,QAAA,SAAS,EAAE,6BAAC,eAAD;AAAQ,UAAA,EAAE,EAAE;AAAZ;AAAjB,SACE,6BAAC,aAAD;AAAM,QAAA,aAAa,EAAC;AAApB,SACE,6BAAC,cAAD;AACE,QAAA,EAAE,EAAC,kBADL;AAEE,QAAA,WAAW,EAAC,eAFd;AAGE,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWW,OAAX,GAAqB,cAArB,GAAsC,WAH/C;AAIE,QAAA,cAAc,EAAC,OAJjB;AAKE,QAAA,WAAW,EAAC,KALd;AAME,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,KAAX,CAAiBX,IAN1B;AAOE,QAAA,QAAQ,EAAE,KAAKyB,kBAAL,CAAwB,MAAxB,CAPZ;AAQE,QAAA,KAAK,EAAE,KAAKC,QAAL,CAAc,MAAd,CART;AASE,QAAA,KAAK;AATP,QADF,CADF,EAeE,6BAAC,+BAAD,QACE,6BAAC,aAAD;AAAM,QAAA,aAAa,EAAC,QAApB;AAA6B,QAAA,EAAE,EAAE;AAAjC,SACE,6BAAC,cAAD;AAAO,QAAA,EAAE,EAAE,CAAX;AAAc,QAAA,IAAI,EAAC,IAAnB;AAAwB,QAAA,KAAK,EAAC,UAA9B;AAAyC,QAAA,UAAU,EAAC;AAApD,mBADF,EAIE,6BAAC,gBAAD;AACE,QAAA,QAAQ,EACNH,mBAAmB,GACf,KAAKb,KAAL,CAAWiB,eADI,GAEf,KAAKV,KAAL,CAAWR,OAAX,CAAmBR,OAJ3B;AAME,QAAA,QAAQ,EAAE,KAAK2B,kBAAL,CAAwB,SAAxB,CANZ;AAOE,QAAA,QAAQ,EAAEL;AAPZ,QAJF,EAaGA,mBAAmB,IAClB,4DACE,6BAAC,eAAD;AAAQ,QAAA,CAAC,EAAE;AAAX,QADF,EAEE,6BAAC,aAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAe,QAAA,KAAK,EAAC;AAArB,mCAFF,CAdJ,CADF,EAwBE,6BAAC,aAAD;AAAM,QAAA,aAAa,EAAC;AAApB,SACE,6BAAC,cAAD;AACE,QAAA,EAAE,EAAC,wBADL;AAEE,QAAA,WAAW,EAAC,iBAFd;AAGE,QAAA,KAAK,EAAC,aAHR;AAIE,QAAA,cAAc,EAAC,YAJjB;AAKE,QAAA,WAAW,EAAC,KALd;AAME,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,KAAX,CAAiBT,UAN1B;AAOE,QAAA,QAAQ,EAAE,KAAKuB,kBAAL,CAAwB,YAAxB,CAPZ;AAQE,QAAA,KAAK,EAAE,KAAKC,QAAL,CAAc,YAAd,CART;AASE,QAAA,KAAK;AATP,QADF,CAxBF,CAfF,EAqDE,6BAAC,+BAAD,QACE,6BAAC,aAAD;AAAM,QAAA,aAAa,EAAC;AAApB,SACE,6BAAC,cAAD;AACE,QAAA,EAAE,EAAC,0BADL;AAEE,QAAA,WAAW,EAAC,oBAFd;AAGE,QAAA,KAAK,EAAC,gBAHR;AAIE,QAAA,cAAc,EAAC,OAJjB;AAKE,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,KAAX,CAAiBR,YAL1B;AAME,QAAA,QAAQ,EAAE,KAAKsB,kBAAL,CAAwB,cAAxB,CANZ;AAOE,QAAA,KAAK,EAAE,KAAKC,QAAL,CAAc,cAAd,CAPT;AAQE,QAAA,KAAK;AARP,QADF,CADF,EAcE,6BAAC,aAAD;AAAM,QAAA,aAAa,EAAC;AAApB,SACE,6BAAC,cAAD;AACE,QAAA,EAAE,EAAC,0BADL;AAEE,QAAA,WAAW,EAAC,6BAFd;AAGE,QAAA,KAAK,EAAC,2BAHR;AAIE,QAAA,cAAc,EAAC,OAJjB;AAKE,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,KAAX,CAAiBP,YAL1B;AAME,QAAA,QAAQ,EAAE,KAAKqB,kBAAL,CAAwB,cAAxB,CANZ;AAOE,QAAA,KAAK,EAAE,KAAKC,QAAL,CAAc,cAAd,CAPT;AAQE,QAAA,KAAK;AARP,QADF,CAdF,CArDF,EAgFE,6BAAC,+BAAD,QACE,6BAAC,aAAD;AAAM,QAAA,aAAa,EAAC;AAApB,SACE,6BAAC,cAAD;AACE,QAAA,EAAE,EAAC,kBADL;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,cAAc,EAAC,OAJjB;AAKE,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,KAAX,CAAiBN,IAL1B;AAME,QAAA,QAAQ,EAAE,KAAKoB,kBAAL,CAAwB,MAAxB,CANZ;AAOE,QAAA,KAAK,EAAE,KAAKC,QAAL,CAAc,MAAd,CAPT;AAQE,QAAA,KAAK;AARP,QADF,CADF,EAcE,6BAAC,aAAD;AAAM,QAAA,aAAa,EAAC;AAApB,SACE,6BAAC,cAAD;AACE,QAAA,EAAE,EAAC,oBADL;AAEE,QAAA,WAAW,EAAC,gCAFd;AAGE,QAAA,KAAK,EAAC,4BAHR;AAIE,QAAA,cAAc,EAAC,OAJjB;AAKE,QAAA,WAAW,EAAC,KALd;AAME,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,KAAX,CAAiBL,MAN1B;AAOE,QAAA,QAAQ,EAAE,KAAKmB,kBAAL,CAAwB,QAAxB,CAPZ;AAQE,QAAA,KAAK,EAAE,KAAKC,QAAL,CAAc,QAAd,CART;AASE,QAAA,KAAK;AATP,QADF,CAdF,CAhFF,EA4GG,CAAC,CAAC,KAAKhB,KAAL,CAAWW,OAAZ,IAAuB,KAAKX,KAAL,CAAWY,oBAAnC,KACC,4DACE,6BAAC,aAAD;AAAM,QAAA,aAAa,EAAC;AAApB,SACE,6BAAC,cAAD;AACE,QAAA,EAAE,EAAC,yBADL;AAEE,QAAA,KAAK,EAAC,cAFR;AAGE,QAAA,IAAI,EAAC,KAHP;AAIE,QAAA,WAAW,EAAE,KAAKO,2BAAL,EAJf;AAKE,QAAA,WAAW,EAAC,WALd;AAME,QAAA,OAAO,EAAC,SANV;AAOE,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,KAAX,CAAiBJ,WAP1B;AAQE,QAAA,QAAQ,EAAE,KAAKkB,kBAAL,CAAwB,aAAxB,CARZ;AASE,QAAA,KAAK,EAAE,KAAKC,QAAL,CAAc,aAAd,CATT;AAUE,QAAA,KAAK;AAVP,QADF,CADF,EAeE,6BAAC,eAAD;AAAQ,QAAA,EAAE,EAAE;AAAZ,QAfF,CA7GJ,CADF;AAkID;;;;EAjL8BI,eAAMC,S","sourcesContent":["import { Flex, Join, Sans, Serif, Spacer } from \"@artsy/palette\"\nimport Input from \"Components/Input\"\nimport { CountrySelect } from \"Components/v2\"\nimport React from \"react\"\nimport { TwoColumnSplit } from \"./TwoColumnLayout\"\n\nexport interface Address {\n  name: string\n  country: string\n  postalCode: string\n  addressLine1: string\n  addressLine2: string\n  city: string\n  region: string\n  phoneNumber: string\n}\n\nexport type AddressErrors = Partial<Address>\nexport type AddressTouched = Partial<{ [T in keyof Address]: boolean }>\nexport type AddressChangeHandler = (\n  address: Address,\n  key: keyof Address\n) => void\n\nexport const emptyAddress: Address = Object.freeze({\n  name: \"\",\n  country: \"\",\n  postalCode: \"\",\n  addressLine1: \"\",\n  addressLine2: \"\",\n  city: \"\",\n  region: \"\",\n  phoneNumber: \"\",\n})\nexport interface AddressFormProps {\n  onChange: AddressChangeHandler\n  value?: Partial<Address>\n  billing?: boolean\n  domesticOnly?: boolean\n  showPhoneNumberInput?: boolean\n  shippingCountry?: string\n  errors: AddressErrors\n  touched: AddressTouched\n}\n\ninterface AddressFormState {\n  address: Address\n}\n\nexport class AddressForm extends React.Component<\n  AddressFormProps,\n  AddressFormState\n> {\n  state = {\n    address: {\n      ...emptyAddress,\n      ...this.props.value,\n    },\n  }\n\n  changeEventHandler = (key: keyof Address) => (\n    ev: React.FormEvent<HTMLInputElement>\n  ) => {\n    this.onChangeValue(key, ev.currentTarget.value)\n  }\n\n  changeValueHandler = (key: keyof Address) => (value: string) => {\n    this.onChangeValue(key, value)\n  }\n\n  onChangeValue = (key: keyof Address, value: string) => {\n    this.setState({ address: { ...this.state.address, [key]: value } }, () => {\n      this.props.onChange(this.state.address, key)\n    })\n  }\n\n  getError = (key: keyof Address): string => {\n    return (\n      (this.props.touched &&\n        this.props.touched[key] &&\n        this.props.errors &&\n        this.props.errors[key]) ||\n      \"\"\n    )\n  }\n\n  phoneNumberInputDescription = (): string | null => {\n    if (this.props.billing && this.props.showPhoneNumberInput) {\n      return null\n    } else {\n      return \"Required for shipping logistics\"\n    }\n  }\n\n  render() {\n    const lockCountryToOrigin = !this.props.billing && this.props.domesticOnly\n    return (\n      <Join separator={<Spacer mb={2} />}>\n        <Flex flexDirection=\"column\">\n          <Input\n            id=\"AddressForm_name\"\n            placeholder=\"Add full name\"\n            title={this.props.billing ? \"Name on card\" : \"Full name\"}\n            autoCapitalize=\"words\"\n            autoCorrect=\"off\"\n            value={this.props.value.name}\n            onChange={this.changeEventHandler(\"name\")}\n            error={this.getError(\"name\")}\n            block\n          />\n        </Flex>\n\n        <TwoColumnSplit>\n          <Flex flexDirection=\"column\" pb={1}>\n            <Serif mb={1} size=\"3t\" color=\"black100\" lineHeight=\"1.1em\">\n              Country\n            </Serif>\n            <CountrySelect\n              selected={\n                lockCountryToOrigin\n                  ? this.props.shippingCountry\n                  : this.state.address.country\n              }\n              onSelect={this.changeValueHandler(\"country\")}\n              disabled={lockCountryToOrigin}\n            />\n            {lockCountryToOrigin && (\n              <>\n                <Spacer m={0.5} />\n                <Sans size=\"2\" color=\"black60\">\n                  Domestic shipping only.\n                </Sans>\n              </>\n            )}\n          </Flex>\n\n          <Flex flexDirection=\"column\">\n            <Input\n              id=\"AddressForm_postalCode\"\n              placeholder=\"Add postal code\"\n              title=\"Postal code\"\n              autoCapitalize=\"characters\"\n              autoCorrect=\"off\"\n              value={this.props.value.postalCode}\n              onChange={this.changeEventHandler(\"postalCode\")}\n              error={this.getError(\"postalCode\")}\n              block\n            />\n          </Flex>\n        </TwoColumnSplit>\n        <TwoColumnSplit>\n          <Flex flexDirection=\"column\">\n            <Input\n              id=\"AddressForm_addressLine1\"\n              placeholder=\"Add street address\"\n              title=\"Address line 1\"\n              autoCapitalize=\"words\"\n              value={this.props.value.addressLine1}\n              onChange={this.changeEventHandler(\"addressLine1\")}\n              error={this.getError(\"addressLine1\")}\n              block\n            />\n          </Flex>\n\n          <Flex flexDirection=\"column\">\n            <Input\n              id=\"AddressForm_addressLine2\"\n              placeholder=\"Add apt, floor, suite, etc.\"\n              title=\"Address line 2 (optional)\"\n              autoCapitalize=\"words\"\n              value={this.props.value.addressLine2}\n              onChange={this.changeEventHandler(\"addressLine2\")}\n              error={this.getError(\"addressLine2\")}\n              block\n            />\n          </Flex>\n        </TwoColumnSplit>\n        <TwoColumnSplit>\n          <Flex flexDirection=\"column\">\n            <Input\n              id=\"AddressForm_city\"\n              placeholder=\"Add city\"\n              title=\"City\"\n              autoCapitalize=\"words\"\n              value={this.props.value.city}\n              onChange={this.changeEventHandler(\"city\")}\n              error={this.getError(\"city\")}\n              block\n            />\n          </Flex>\n\n          <Flex flexDirection=\"column\">\n            <Input\n              id=\"AddressForm_region\"\n              placeholder=\"Add State, province, or region\"\n              title=\"State, province, or region\"\n              autoCapitalize=\"words\"\n              autoCorrect=\"off\"\n              value={this.props.value.region}\n              onChange={this.changeEventHandler(\"region\")}\n              error={this.getError(\"region\")}\n              block\n            />\n          </Flex>\n        </TwoColumnSplit>\n        {(!this.props.billing || this.props.showPhoneNumberInput) && (\n          <>\n            <Flex flexDirection=\"column\">\n              <Input\n                id=\"AddressForm_phoneNumber\"\n                title=\"Phone number\"\n                type=\"tel\"\n                description={this.phoneNumberInputDescription()}\n                placeholder=\"Add phone\"\n                pattern=\"[^a-z]+\"\n                value={this.props.value.phoneNumber}\n                onChange={this.changeEventHandler(\"phoneNumber\")}\n                error={this.getError(\"phoneNumber\")}\n                block\n              />\n            </Flex>\n            <Spacer mb={2} />\n          </>\n        )}\n      </Join>\n    )\n  }\n}\n"],"file":"AddressForm.js"}