{"version":3,"sources":["../../../../src/Apps/Order/Components/ArtworkSummaryItem.tsx"],"names":["ArtworkSummaryItem","order","lineItems","name","sellerDetails","others","artwork","props","edges","node","artist_names","title","date","shippingOrigin","imageURL","image","resized_ArtworkSummaryItem","url","truncateTextStyle","whiteSpace","overflow","textOverflow","lineHeight","ArtworkSummaryItemFragmentContainer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;AAcA,IAAMA,kBAAsD,GAAG,SAAzDA,kBAAyD,OAMzD;AAAA,wBALJC,KAKI;AAAA,MAJFC,SAIE,cAJFA,SAIE;AAAA,MAHeC,IAGf,cAHFC,aAGE,CAHeD,IAGf;AAAA,MADDE,MACC;;AACJ,MAAMC,OAAO,GAAG,cAAI,EAAJ,EAAQ,UAAAC,KAAK;AAAA,WAAIL,SAAS,CAACM,KAAV,CAAgB,CAAhB,EAAmBC,IAAnB,CAAwBH,OAA5B;AAAA,GAAb,CAAhB;AADI,MAIFI,YAJE,GAWAJ,OAXA,CAIFI,YAJE;AAAA,MAKFC,KALE,GAWAL,OAXA,CAKFK,KALE;AAAA,MAMFC,IANE,GAWAN,OAXA,CAMFM,IANE;AAAA,MAOFC,cAPE,GAWAP,OAXA,CAOFO,cAPE;AAAA,MASmCC,QATnC,GAWAR,OAXA,CAQFS,KARE,CASAC,0BATA,CAS8BC,GAT9B;AAaJ,MAAMC,iBAAiB,GAAG;AACxBC,IAAAA,UAAU,EAAE,QADY;AAExBC,IAAAA,QAAQ,EAAE,QAFc;AAGxBC,IAAAA,YAAY,EAAE;AAHU,GAA1B;AAMA,SACE,6BAAC,2BAAD;AAAoB,IAAA,aAAa,EAAC;AAAlC,KAA4ChB,MAA5C,GACE,6BAAC,YAAD;AAAK,IAAA,MAAM,EAAC;AAAZ,KACE,6BAAC,cAAD;AAAO,IAAA,GAAG,EAAES,QAAZ;AAAsB,IAAA,KAAK,EAAC,MAA5B;AAAmC,IAAA,EAAE,EAAE;AAAvC,IADF,CADF,EAIE,6BAAC,aAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAA6B,IAAA,KAAK,EAAE;AAAEM,MAAAA,QAAQ,EAAE;AAAZ;AAApC,KACE,6BAAC,cAAD;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,MAAM,EAAC,UAFT;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,KAAK,EAAEF;AAJT,KAMGR,YANH,CADF,EASE;AAAK,IAAA,KAAK;AAAIY,MAAAA,UAAU,EAAE;AAAhB,OAAwBJ,iBAAxB;AAAV,KACE,6BAAC,cAAD;AAAO,IAAA,MAAM,MAAb;AAAc,IAAA,IAAI,EAAC,GAAnB;AAAuB,IAAA,KAAK,EAAC,SAA7B;AAAuC,IAAA,OAAO,EAAC;AAA/C,KACGP,KADH,CADF,EAIE,6BAAC,cAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,EAAC,SAAtB;AAAgC,IAAA,OAAO,EAAC;AAAxC,KACGC,IAAI,gBAASA,IAAT,CADP,CAJF,CATF,EAiBE,6BAAC,cAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,EAAC,SAAtB;AAAgC,IAAA,KAAK,EAAEM;AAAvC,KACGf,IADH,CAjBF,EAoBE,6BAAC,cAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,EAAC;AAAtB,KACGU,cADH,CApBF,CAJF,CADF;AA+BD,CAxDD;;AA0DO,IAAMU,mCAAmC,GAAG,yCACjDvB,kBADiD,EAEjD;AACEC,EAAAA,KAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADP,CAFiD,CAA5C","sourcesContent":["import { ArtworkSummaryItem_order } from \"__generated__/ArtworkSummaryItem_order.graphql\"\nimport { Omit } from \"lodash\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { get } from \"Utils/get\"\n\nimport {\n  Box,\n  Flex,\n  FlexProps,\n  Image,\n  Serif,\n  StackableBorderBox,\n} from \"@artsy/palette\"\n\nexport interface ArtworkSummaryItemProps extends Omit<FlexProps, \"order\"> {\n  order: ArtworkSummaryItem_order\n  className?: string\n}\n\nconst ArtworkSummaryItem: React.SFC<ArtworkSummaryItemProps> = ({\n  order: {\n    lineItems,\n    sellerDetails: { name },\n  },\n  ...others\n}) => {\n  const artwork = get({}, props => lineItems.edges[0].node.artwork)\n\n  const {\n    artist_names,\n    title,\n    date,\n    shippingOrigin,\n    image: {\n      resized_ArtworkSummaryItem: { url: imageURL },\n    },\n  } = artwork\n\n  const truncateTextStyle = {\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n  } as any\n\n  return (\n    <StackableBorderBox flexDirection=\"row\" {...others}>\n      <Box height=\"auto\">\n        <Image src={imageURL} width=\"55px\" mr={1} />\n      </Box>\n      <Flex flexDirection=\"column\" style={{ overflow: \"hidden\" }}>\n        <Serif\n          size=\"2\"\n          weight=\"semibold\"\n          color=\"black60\"\n          style={truncateTextStyle}\n        >\n          {artist_names}\n        </Serif>\n        <div style={{ lineHeight: \"1\", ...truncateTextStyle }}>\n          <Serif italic size=\"2\" color=\"black60\" display=\"inline\">\n            {title}\n          </Serif>\n          <Serif size=\"2\" color=\"black60\" display=\"inline\">\n            {date && `, ${date}`}\n          </Serif>\n        </div>\n        <Serif size=\"2\" color=\"black60\" style={truncateTextStyle}>\n          {name}\n        </Serif>\n        <Serif size=\"2\" color=\"black60\">\n          {shippingOrigin}\n        </Serif>\n      </Flex>\n    </StackableBorderBox>\n  )\n}\n\nexport const ArtworkSummaryItemFragmentContainer = createFragmentContainer(\n  ArtworkSummaryItem,\n  {\n    order: graphql`\n      fragment ArtworkSummaryItem_order on CommerceOrder {\n        sellerDetails {\n          ... on Partner {\n            name\n          }\n        }\n        lineItems {\n          edges {\n            node {\n              artwork {\n                artist_names\n                title\n                date\n                shippingOrigin\n                image {\n                  resized_ArtworkSummaryItem: resized(width: 55) {\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `,\n  }\n)\n"],"file":"ArtworkSummaryItem.js"}