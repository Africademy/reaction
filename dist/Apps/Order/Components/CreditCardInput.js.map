{"version":3,"sources":["../../../../src/Apps/Order/Components/CreditCardInput.tsx"],"names":["StyledCardElement","CardElement","StyledBorderBox","BorderBox","attrs","inputBorder","CreditCardInput","focused","response","props","onChange","error","message","state","bind","setState","el","cardInputElement","base","color","fontFamily","serif","regular","fontSize","themeProps","typeSizes","fontSmoothing","lineHeight","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAIA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,iBAAiB,GAAG,+BAAOC,gCAAP,CAAH;AAAA;AAAA;AAAA,oCAAvB,C,CAKP;;;AACA,IAAMC,eAAe,GAAG,+BAAOC,kBAAP,EAAkBC,KAAlB,CAA0C,EAA1C,CAAH;AAAA;AAAA;AAAA,oCACjBC,cADiB,CAArB;;IAeaC,e;;;;;;;;;;;;;;;;;;4DAIH;AACNC,MAAAA,OAAO,EAAE;AADH,K;;;;;;;;;6BAKCC,Q,EAAiD;AACxD,UAAI,KAAKC,KAAL,CAAWC,QAAf,EAAyB;AACvB,aAAKD,KAAL,CAAWC,QAAX,CAAoBF,QAApB;AACD;AACF;;;6BAEQ;AAAA;;AAAA,iBACa,KAAKC,KAAL,CAAWE,KAAX,GAAmB,KAAKF,KAAL,CAAWE,KAA9B,GAAsC;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADnD;AAAA,UACCA,OADD,QACCA,OADD;;AAGP,aACE,4DACE,6BAAC,eAAD;AACE,QAAA,SAAS,YAAK,KAAKC,KAAL,CAAWN,OAAX,GAAqB,SAArB,GAAiC,EAAtC,CADX;AAEE,QAAA,QAAQ,EAAE,CAAC,CAACK,OAFd;AAGE,QAAA,CAAC,EAAE;AAHL,SAKE,6BAAC,iBAAD;AACE,QAAA,cAAc,MADhB;AAEE,QAAA,QAAQ,EAAE,KAAKF,QAAL,CAAcI,IAAd,CAAmB,IAAnB,CAFZ;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,QAAL,CAAc;AAAER,YAAAA,OAAO,EAAE;AAAX,WAAd,CAAN;AAAA,SAHX;AAIE,QAAA,MAAM,EAAE;AAAA,iBACN,MAAI,CAACQ,QAAL,CAAc;AACZR,YAAAA,OAAO,EAAE;AADG,WAAd,CADM;AAAA,SAJV;AASE,QAAA,OAAO,EAAG,iBAAAS,EAAE;AAAA,iBAAK,MAAI,CAACC,gBAAL,GAAwBD,EAA7B;AAAA,SATd;AAUE,QAAA,KAAK,EAAE;AACLE,UAAAA,IAAI,EAAE;AACJ,6BAAiB;AAAEC,cAAAA,KAAK,EAAE,oBAAM,SAAN;AAAT,aADb;AAEJC,YAAAA,UAAU,EAAEA,kBAAWC,KAAX,CAAiBC,OAFzB;AAGJC,YAAAA,QAAQ,YAAKC,oBAAWC,SAAX,CAAqBJ,KAArB,CAA2B,IAA3B,EAAiCE,QAAtC,OAHJ;AAIJG,YAAAA,aAAa,EAAE,aAJX;AAKJC,YAAAA,UAAU,EAAE;AALR;AADD;AAVT,QALF,CADF,EA2BGf,OAAO,IACN,6BAAC,aAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,KAAK,EAAC;AAA5B,SACGA,OADH,CA5BJ,CADF;AAmCD;;;;EArDkCgB,eAAMC,S","sourcesContent":["import { BorderBox, color, Sans, themeProps } from \"@artsy/palette\"\nimport { fontFamily } from \"@artsy/palette/dist/platform/fonts\"\nimport {\n  border as inputBorder,\n  BorderProps as InputBorderProps,\n} from \"Components/Mixins\"\nimport React from \"react\"\nimport { CardElement } from \"react-stripe-elements\"\nimport styled from \"styled-components\"\n\nexport const StyledCardElement = styled(CardElement)`\n  width: 100%;\n  padding: 9px 10px;\n`\n\n// Re-uses old input border behavior\nconst StyledBorderBox = styled(BorderBox).attrs<InputBorderProps>({})`\n  ${inputBorder};\n  padding: 0;\n  height: 40px;\n`\n\ninterface CreditCardInputProps {\n  error?: stripe.Error\n  onChange?: (response: stripe.elements.ElementChangeResponse) => void\n}\n\ninterface CreditCardInputState {\n  focused: boolean\n}\n\nexport class CreditCardInput extends React.Component<\n  CreditCardInputProps,\n  CreditCardInputState\n> {\n  state = {\n    focused: false,\n  }\n  cardInputElement: any\n\n  onChange(response: stripe.elements.ElementChangeResponse) {\n    if (this.props.onChange) {\n      this.props.onChange(response)\n    }\n  }\n\n  render() {\n    const { message } = this.props.error ? this.props.error : { message: null }\n\n    return (\n      <>\n        <StyledBorderBox\n          className={`${this.state.focused ? \"focused\" : \"\"}`}\n          hasError={!!message}\n          p={1}\n        >\n          <StyledCardElement\n            hidePostalCode\n            onChange={this.onChange.bind(this)}\n            onFocus={() => this.setState({ focused: true })}\n            onBlur={() =>\n              this.setState({\n                focused: false,\n              })\n            }\n            onReady={(el => (this.cardInputElement = el)) as any}\n            style={{\n              base: {\n                \"::placeholder\": { color: color(\"black30\") },\n                fontFamily: fontFamily.serif.regular as string,\n                fontSize: `${themeProps.typeSizes.serif[\"3t\"].fontSize}px`,\n                fontSmoothing: \"antialiased\",\n                lineHeight: \"20px\",\n              },\n            }}\n          />\n        </StyledBorderBox>\n        {message && (\n          <Sans pt={1} size=\"2\" color=\"red100\">\n            {message}\n          </Sans>\n        )}\n      </>\n    )\n  }\n}\n"],"file":"CreditCardInput.js"}