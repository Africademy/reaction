{"version":3,"sources":["../../../../src/Apps/Order/Components/ItemReview.tsx"],"names":["ImageBox","styled","div","dimensionsDisplay","dimensions","in","cm","ItemReview","lineItem","artwork","artist_names","title","date","medium","artworkDimensions","attribution_class","url","image","resized","edition_sets","editionSetId","find","e","id","shortDescription","ItemReviewFragmentContainer"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;;;AAMA,IAAMA,QAAQ,GAAGC,0BAAOC,GAAV;AAAA;AAAA;AAAA,mFAAd;;AAWA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,UAAU;AAAA,SAClC,6BAAC,cAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,EAAC;AAAtB,KACGA,UAAU,CAACC,EADd,QACoBD,UAAU,CAACE,EAD/B,MADkC;AAAA,CAApC;;AAMO,IAAMC,UAAsC,GAAG,SAAzCA,UAAyC;AAAA,2BACpDC,QADoD;AAAA,4CAElDC,OAFkD;AAAA,MAGhDC,YAHgD,yBAGhDA,YAHgD;AAAA,MAIhDC,KAJgD,yBAIhDA,KAJgD;AAAA,MAKhDC,IALgD,yBAKhDA,IALgD;AAAA,MAMhDC,MANgD,yBAMhDA,MANgD;AAAA,MAOpCC,iBAPoC,yBAOhDV,UAPgD;AAAA,MAQhDW,iBARgD,yBAQhDA,iBARgD;AAAA,MAUnCC,GAVmC,yBAShDC,KATgD,CAU9CC,OAV8C,CAUnCF,GAVmC;AAAA,MAYhDG,YAZgD,yBAYhDA,YAZgD;AAAA,MAclDC,YAdkD,iBAclDA,YAdkD;AAAA,SAiBpD,6BAAC,kBAAD;AAAW,IAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAd,KACE,6BAAC,aAAD;AAAM,IAAA,QAAQ,EAAE,CAAhB;AAAmB,IAAA,aAAa,EAAC;AAAjC,KACE,6BAAC,cAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,MAAM,EAAC,UAAvB;AAAkC,IAAA,KAAK,EAAC;AAAxC,KACGV,YADH,CADF,EAIE,6BAAC,cAAD;AAAO,IAAA,MAAM,MAAb;AAAc,IAAA,IAAI,EAAC,GAAnB;AAAuB,IAAA,KAAK,EAAC;AAA7B,KACGC,KADH,EAEGC,IAAI,iBAAUA,IAAV,MAFP,CAJF,EAQGC,MAAM,IACL,6BAAC,cAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,EAAC;AAAtB,KACGA,MADH,CATJ,EAaGO,YAAY,IACXD,YADD,IAEChB,iBAAiB,CACfgB,YAAY,CAACE,IAAb,CAAkB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,EAAF,KAASH,YAAb;AAAA,GAAnB,EAA8ChB,UAD/B,CAfrB,EAkBG,CAACgB,YAAD,IACCN,iBADD,IAECX,iBAAiB,CAACW,iBAAD,CApBrB,EAqBGC,iBAAiB,IAChB,6BAAC,cAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,EAAC;AAAtB,KACGA,iBAAiB,CAACS,gBADrB,CAtBJ,CADF,EA4BE,6BAAC,QAAD,QACE;AAAK,IAAA,GAAG,YAAKb,KAAL,iBAAiBD,YAAjB,CAAR;AAAyC,IAAA,GAAG,EAAEM;AAA9C,IADF,CA5BF,CAjBoD;AAAA,CAA/C;;;AAmDA,IAAMS,2BAA2B,GAAG,yCAAwBlB,UAAxB,EAAoC;AAC7EC,EAAAA,QAAQ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADqE,CAApC,CAApC","sourcesContent":["import React from \"react\"\n\nimport { BorderBox, Flex, Serif } from \"@artsy/palette\"\nimport { ItemReview_lineItem } from \"__generated__/ItemReview_lineItem.graphql\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport styled from \"styled-components\"\n\ninterface ItemReviewProps {\n  lineItem: ItemReview_lineItem\n}\n\nconst ImageBox = styled.div`\n  flex: 0 1 auto;\n\n  img {\n    max-width: 185px;\n    max-height: 375px;\n    display: block;\n    margin: 0;\n  }\n`\n\nconst dimensionsDisplay = dimensions => (\n  <Serif size=\"2\" color=\"black60\">\n    {dimensions.in} ({dimensions.cm})\n  </Serif>\n)\n\nexport const ItemReview: React.SFC<ItemReviewProps> = ({\n  lineItem: {\n    artwork: {\n      artist_names,\n      title,\n      date,\n      medium,\n      dimensions: artworkDimensions,\n      attribution_class,\n      image: {\n        resized: { url },\n      },\n      edition_sets,\n    },\n    editionSetId,\n  },\n}) => (\n  <BorderBox p={[2, 3]}>\n    <Flex flexGrow={1} flexDirection=\"column\">\n      <Serif size=\"2\" weight=\"semibold\" color=\"black60\">\n        {artist_names}\n      </Serif>\n      <Serif italic size=\"2\" color=\"black60\">\n        {title}\n        {date && `, (${date})`}\n      </Serif>\n      {medium && (\n        <Serif size=\"2\" color=\"black60\">\n          {medium}\n        </Serif>\n      )}\n      {editionSetId &&\n        edition_sets &&\n        dimensionsDisplay(\n          edition_sets.find(e => e.id === editionSetId).dimensions\n        )}\n      {!editionSetId &&\n        artworkDimensions &&\n        dimensionsDisplay(artworkDimensions)}\n      {attribution_class && (\n        <Serif size=\"2\" color=\"black60\">\n          {attribution_class.shortDescription}\n        </Serif>\n      )}\n    </Flex>\n    <ImageBox>\n      <img alt={`${title} by ${artist_names}`} src={url} />\n    </ImageBox>\n  </BorderBox>\n)\n\nexport const ItemReviewFragmentContainer = createFragmentContainer(ItemReview, {\n  lineItem: graphql`\n    fragment ItemReview_lineItem on CommerceLineItem {\n      artwork {\n        artist_names\n        title\n        date\n        medium\n        dimensions {\n          in\n          cm\n        }\n        attribution_class {\n          shortDescription\n        }\n        image {\n          resized(width: 185) {\n            url\n          }\n        }\n        edition_sets {\n          id\n          dimensions {\n            in\n            cm\n          }\n        }\n      }\n      editionSetId\n    }\n  `,\n})\n"],"file":"ItemReview.js"}