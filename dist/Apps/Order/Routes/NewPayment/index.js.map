{"version":3,"sources":["../../../../../src/Apps/Order/Routes/NewPayment/index.tsx"],"names":["ContinueButton","props","logger","NewPaymentRoute","React","createRef","isGettingCreditCardId","stripe","setState","paymentPicker","current","getCreditCardId","result","type","dialog","showErrorDialog","title","error","message","fixFailedPayment","input","creditCardId","offerId","order","lastOffer","id","orderOrError","commerceFixFailedPayment","handleFixFailedPaymentError","code","actionData","clientSecret","state","handleCardAction","scaResult","onContinue","router","push","window","Stripe","sd","STRIPE_PUBLISHABLE_KEY","document","querySelector","addEventListener","isCommittingMutation","isLoading","pointerEvents","mode","createdAt","stateExpiresAt","me","commitMutation","variables","mutation","routeToArtistPage","o","lineItems","edges","node","artwork","artists","artistId","route","onTransition","location","assign","Component","NewPaymentFragmentContainer"],"mappings":"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","sourcesContent":["import { NewPayment_me } from \"__generated__/NewPayment_me.graphql\"\nimport { NewPayment_order } from \"__generated__/NewPayment_order.graphql\"\nimport { NewPaymentRouteSetOrderPaymentMutation } from \"__generated__/NewPaymentRouteSetOrderPaymentMutation.graphql\"\nimport { HorizontalPadding } from \"Apps/Components/HorizontalPadding\"\nimport { ArtworkSummaryItemFragmentContainer as ArtworkSummaryItem } from \"Apps/Order/Components/ArtworkSummaryItem\"\nimport { OrderStepper } from \"Apps/Order/Components/OrderStepper\"\nimport { TransactionDetailsSummaryItemFragmentContainer as TransactionDetailsSummaryItem } from \"Apps/Order/Components/TransactionDetailsSummaryItem\"\nimport { TwoColumnLayout } from \"Apps/Order/Components/TwoColumnLayout\"\nimport { trackPageViewWrapper } from \"Apps/Order/Utils/trackPageViewWrapper\"\nimport { track } from \"Artsy/Analytics\"\nimport { CountdownTimer } from \"Components/v2/CountdownTimer\"\nimport { RouteConfig, Router } from \"found\"\nimport React, { Component } from \"react\"\nimport { createFragmentContainer, graphql, RelayRefetchProp } from \"react-relay\"\nimport { ReactStripeElements } from \"react-stripe-elements\"\nimport { data as sd } from \"sharify\"\nimport createLogger from \"Utils/logger\"\nimport { Media } from \"Utils/Responsive\"\n\nimport { Button, Col, Flex, Join, Row, Spacer } from \"@artsy/palette\"\nimport {\n  PaymentPicker,\n  PaymentPickerFragmentContainer,\n} from \"Apps/Order/Components/PaymentPicker\"\nimport { Dialog, injectDialog } from \"Apps/Order/Dialogs\"\nimport {\n  CommitMutation,\n  injectCommitMutation,\n} from \"Apps/Order/Utils/commitMutation\"\nimport { get } from \"Utils/get\"\n\nexport const ContinueButton = props => (\n  <Button size=\"large\" width=\"100%\" {...props}>\n    Continue\n  </Button>\n)\n\nexport interface NewPaymentProps\n  extends ReactStripeElements.InjectedStripeProps {\n  order: NewPayment_order\n  me: NewPayment_me\n  relay?: RelayRefetchProp\n  router: Router\n  route: RouteConfig\n  dialog: Dialog\n  commitMutation: CommitMutation\n  isCommittingMutation: boolean\n}\n\ninterface NewPaymentState {\n  isGettingCreditCardId: boolean\n  stripe: stripe.Stripe\n}\n\nconst logger = createLogger(\"Order/Routes/NewPayment/index.tsx\")\n\n@track()\nexport class NewPaymentRoute extends Component<\n  NewPaymentProps,\n  NewPaymentState\n> {\n  paymentPicker = React.createRef<PaymentPicker>()\n  state = {\n    isGettingCreditCardId: false,\n    stripe: null,\n  }\n  componentDidMount() {\n    if (window.Stripe) {\n      this.setState({\n        stripe: window.Stripe(sd.STRIPE_PUBLISHABLE_KEY),\n      })\n    } else {\n      document.querySelector(\"#stripe-js\").addEventListener(\"load\", () => {\n        // Create Stripe instance once Stripe.js loads\n        this.setState({\n          stripe: window.Stripe(sd.STRIPE_PUBLISHABLE_KEY),\n        })\n      })\n    }\n  }\n\n  onContinue = async () => {\n    try {\n      this.setState({ isGettingCreditCardId: true })\n      const result = await this.paymentPicker.current.getCreditCardId()\n      this.setState({ isGettingCreditCardId: false })\n\n      if (result.type === \"invalid_form\") {\n        return\n      }\n\n      if (result.type === \"error\") {\n        this.props.dialog.showErrorDialog({\n          title: result.error,\n          message:\n            \"Please enter another payment method or contact your bank for more information.\",\n        })\n        return\n      }\n\n      if (result.type === \"internal_error\") {\n        this.props.dialog.showErrorDialog({\n          title: \"An internal error occurred\",\n        })\n        logger.error(result.error)\n        return\n      }\n\n      const orderOrError = (await this.fixFailedPayment({\n        input: {\n          creditCardId: result.creditCardId,\n          offerId: this.props.order.lastOffer.id,\n        },\n      })).commerceFixFailedPayment.orderOrError\n\n      if (orderOrError.error) {\n        this.handleFixFailedPaymentError(orderOrError.error.code)\n        return\n      } else if (\n        orderOrError.actionData &&\n        orderOrError.actionData.clientSecret\n      ) {\n        const scaResult = await this.state.stripe.handleCardAction(\n          orderOrError.actionData.clientSecret\n        )\n        if (scaResult.error) {\n          this.props.dialog.showErrorDialog({\n            title: \"An error occurred\",\n            message: scaResult.error.message,\n          })\n          return\n        } else {\n          this.onContinue()\n        }\n      } else {\n        this.props.router.push(`/orders/${this.props.order.id}/status`)\n      }\n\n      this.props.router.push(`/orders/${this.props.order.id}/status`)\n    } catch (error) {\n      logger.error(error)\n      this.props.dialog.showErrorDialog()\n    }\n  }\n\n  render() {\n    const { order, isCommittingMutation } = this.props\n    const { isGettingCreditCardId } = this.state\n\n    const isLoading = isCommittingMutation || isGettingCreditCardId\n\n    return (\n      <>\n        <HorizontalPadding px={[0, 4]}>\n          <Row>\n            <Col>\n              <OrderStepper currentStep=\"Payment\" steps={[\"Payment\"]} />\n            </Col>\n          </Row>\n        </HorizontalPadding>\n        <HorizontalPadding>\n          <TwoColumnLayout\n            Content={\n              <Flex\n                flexDirection=\"column\"\n                style={isLoading ? { pointerEvents: \"none\" } : {}}\n              >\n                {order.mode === \"OFFER\" && (\n                  <>\n                    <Flex>\n                      <CountdownTimer\n                        action=\"Submit new payment\"\n                        note=\"Expiration will end negotiations on this offer. Keep in mind the work can be sold to another buyer in the meantime.\"\n                        countdownStart={order.lastOffer.createdAt}\n                        countdownEnd={order.stateExpiresAt}\n                      />\n                    </Flex>\n                    <Spacer mb={[2, 3]} />\n                  </>\n                )}\n                <Join separator={<Spacer mb={3} />}>\n                  <PaymentPickerFragmentContainer\n                    order={order}\n                    me={this.props.me}\n                    commitMutation={this.props.commitMutation}\n                    innerRef={this.paymentPicker}\n                  />\n                  <Media greaterThan=\"xs\">\n                    <ContinueButton\n                      onClick={this.onContinue}\n                      loading={isLoading}\n                    />\n                  </Media>\n                </Join>\n              </Flex>\n            }\n            Sidebar={\n              <Flex flexDirection=\"column\">\n                <Flex flexDirection=\"column\">\n                  <ArtworkSummaryItem order={order} />\n                  <TransactionDetailsSummaryItem order={order} />\n                </Flex>\n                <Spacer mb={[2, 3]} />\n                <Media at=\"xs\">\n                  <>\n                    <Spacer mb={3} />\n                    <ContinueButton\n                      onClick={this.onContinue}\n                      loading={isLoading}\n                    />\n                  </>\n                </Media>\n              </Flex>\n            }\n          />\n        </HorizontalPadding>\n      </>\n    )\n  }\n\n  fixFailedPayment(\n    variables: NewPaymentRouteSetOrderPaymentMutation[\"variables\"]\n  ) {\n    return this.props.commitMutation<NewPaymentRouteSetOrderPaymentMutation>({\n      variables,\n      mutation: graphql`\n        mutation NewPaymentRouteSetOrderPaymentMutation(\n          $input: CommerceFixFailedPaymentInput!\n        ) {\n          commerceFixFailedPayment(input: $input) {\n            orderOrError {\n              ... on CommerceOrderWithMutationSuccess {\n                order {\n                  state\n                  creditCard {\n                    id\n                    name\n                    street1\n                    street2\n                    city\n                    state\n                    country\n                    postal_code\n                  }\n                  ... on CommerceOfferOrder {\n                    awaitingResponseFrom\n                  }\n                }\n              }\n              ... on CommerceOrderRequiresAction {\n                actionData {\n                  clientSecret\n                }\n              }\n              ... on CommerceOrderWithMutationFailure {\n                error {\n                  type\n                  code\n                  data\n                }\n              }\n            }\n          }\n        }\n      `,\n    })\n  }\n\n  async handleFixFailedPaymentError(code: string) {\n    switch (code) {\n      case \"capture_failed\": {\n        this.props.dialog.showErrorDialog({\n          title: \"Charge failed\",\n          message:\n            \"Payment authorization has been declined. Please contact your card provider and try again.\",\n        })\n        break\n      }\n      case \"insufficient_inventory\": {\n        await this.props.dialog.showErrorDialog({\n          title: \"Not available\",\n          message: \"Sorry, the work is no longer available.\",\n        })\n        this.routeToArtistPage()\n        break\n      }\n      default: {\n        this.props.dialog.showErrorDialog()\n        break\n      }\n    }\n  }\n\n  artistId() {\n    return get(\n      this.props.order,\n      o => o.lineItems.edges[0].node.artwork.artists[0].id\n    )\n  }\n\n  routeToArtistPage() {\n    const artistId = this.artistId()\n\n    // Don't confirm whether or not you want to leave the page\n    this.props.route.onTransition = () => null\n    window.location.assign(`/artist/${artistId}`)\n  }\n}\n\nexport const NewPaymentFragmentContainer = createFragmentContainer(\n  injectCommitMutation(trackPageViewWrapper(injectDialog(NewPaymentRoute))),\n  {\n    me: graphql`\n      fragment NewPayment_me on Me {\n        ...PaymentPicker_me\n      }\n    `,\n    order: graphql`\n      fragment NewPayment_order on CommerceOrder {\n        id\n        mode\n        stateExpiresAt\n        lineItems {\n          edges {\n            node {\n              artwork {\n                id\n                artists {\n                  id\n                }\n              }\n            }\n          }\n        }\n        ... on CommerceOfferOrder {\n          lastOffer {\n            createdAt\n            id\n            note\n          }\n        }\n        ...PaymentPicker_order\n        ...ArtworkSummaryItem_order\n        ...TransactionDetailsSummaryItem_order\n      }\n    `,\n  }\n)\n"],"file":"index.js"}