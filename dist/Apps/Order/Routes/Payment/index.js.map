{"version":3,"sources":["../../../../../src/Apps/Order/Routes/Payment/index.tsx"],"names":["ContinueButton","props","logger","PaymentRoute","flow","order","mode","AnalyticsSchema","Flow","BuyNow","MakeOffer","isGettingCreditCardId","React","createRef","setState","paymentPicker","current","getCreditCardId","result","type","dialog","showErrorDialog","title","error","message","setOrderPayment","input","creditCardId","id","orderOrError","commerceSetPayment","router","push","isCommittingMutation","state","isLoading","offerFlowSteps","buyNowFlowSteps","pointerEvents","commitMutation","me","onContinue","variables","mutation","Component","PaymentFragmentContainer"],"mappings":"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","sourcesContent":["import { Payment_me } from \"__generated__/Payment_me.graphql\"\nimport { Payment_order } from \"__generated__/Payment_order.graphql\"\nimport { PaymentRouteSetOrderPaymentMutation } from \"__generated__/PaymentRouteSetOrderPaymentMutation.graphql\"\n\nimport { HorizontalPadding } from \"Apps/Components/HorizontalPadding\"\nimport { ArtworkSummaryItemFragmentContainer as ArtworkSummaryItem } from \"Apps/Order/Components/ArtworkSummaryItem\"\nimport {\n  buyNowFlowSteps,\n  offerFlowSteps,\n  OrderStepper,\n} from \"Apps/Order/Components/OrderStepper\"\nimport { TransactionDetailsSummaryItemFragmentContainer as TransactionDetailsSummaryItem } from \"Apps/Order/Components/TransactionDetailsSummaryItem\"\nimport { TwoColumnLayout } from \"Apps/Order/Components/TwoColumnLayout\"\nimport { trackPageViewWrapper } from \"Apps/Order/Utils/trackPageViewWrapper\"\nimport { Router } from \"found\"\nimport React, { Component } from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { ReactStripeElements } from \"react-stripe-elements\"\nimport createLogger from \"Utils/logger\"\nimport { Media } from \"Utils/Responsive\"\n\nimport { Button, Col, Flex, Row, Spacer } from \"@artsy/palette\"\nimport { BankTransferExperiment } from \"Apps/Order/Components/BankTransferExperiment\"\nimport {\n  PaymentPicker,\n  PaymentPickerFragmentContainer,\n} from \"Apps/Order/Components/PaymentPicker\"\nimport { Dialog, injectDialog } from \"Apps/Order/Dialogs\"\nimport {\n  CommitMutation,\n  injectCommitMutation,\n} from \"Apps/Order/Utils/commitMutation\"\nimport { AnalyticsSchema, track } from \"Artsy\"\n\nexport const ContinueButton = props => (\n  <Button size=\"large\" width=\"100%\" {...props}>\n    Continue\n  </Button>\n)\n\nexport interface PaymentProps extends ReactStripeElements.InjectedStripeProps {\n  order: Payment_order\n  me: Payment_me\n  router: Router\n  dialog: Dialog\n  commitMutation: CommitMutation\n  isCommittingMutation: boolean\n}\n\ninterface PaymentState {\n  isGettingCreditCardId: boolean\n}\n\nconst logger = createLogger(\"Order/Routes/Payment/index.tsx\")\n\n@track((props: PaymentProps) => ({\n  flow:\n    props.order.mode === \"BUY\"\n      ? AnalyticsSchema.Flow.BuyNow\n      : AnalyticsSchema.Flow.MakeOffer,\n}))\nexport class PaymentRoute extends Component<PaymentProps, PaymentState> {\n  state: PaymentState = { isGettingCreditCardId: false }\n  paymentPicker = React.createRef<PaymentPicker>()\n  onContinue = async () => {\n    try {\n      this.setState({ isGettingCreditCardId: true })\n      const result = await this.paymentPicker.current.getCreditCardId()\n      this.setState({ isGettingCreditCardId: false })\n\n      if (result.type === \"invalid_form\") {\n        return\n      }\n\n      if (result.type === \"error\") {\n        this.props.dialog.showErrorDialog({\n          title: result.error,\n          message:\n            \"Please enter another payment method or contact your bank for more information.\",\n        })\n        return\n      }\n\n      if (result.type === \"internal_error\") {\n        this.props.dialog.showErrorDialog({\n          title: \"An internal error occurred\",\n        })\n        logger.error(result.error)\n        return\n      }\n\n      const orderOrError = (await this.setOrderPayment({\n        input: {\n          creditCardId: result.creditCardId,\n          id: this.props.order.id,\n        },\n      })).commerceSetPayment.orderOrError\n\n      if (orderOrError.error) {\n        throw orderOrError.error\n      }\n\n      this.props.router.push(`/orders/${this.props.order.id}/review`)\n    } catch (error) {\n      logger.error(error)\n      this.props.dialog.showErrorDialog()\n    }\n  }\n\n  render() {\n    const { order, isCommittingMutation } = this.props\n    const { isGettingCreditCardId } = this.state\n\n    const isLoading = isGettingCreditCardId || isCommittingMutation\n\n    return (\n      <>\n        <HorizontalPadding px={[0, 4]}>\n          <Row>\n            <Col>\n              <OrderStepper\n                currentStep=\"Payment\"\n                steps={\n                  order.mode === \"OFFER\" ? offerFlowSteps : buyNowFlowSteps\n                }\n              />\n            </Col>\n          </Row>\n        </HorizontalPadding>\n\n        <HorizontalPadding>\n          <TwoColumnLayout\n            Content={\n              <Flex\n                flexDirection=\"column\"\n                style={isLoading ? { pointerEvents: \"none\" } : {}}\n              >\n                <PaymentPickerFragmentContainer\n                  commitMutation={this.props.commitMutation}\n                  me={this.props.me}\n                  order={this.props.order}\n                  innerRef={this.paymentPicker}\n                />\n                <Spacer mb={3} />\n                <BankTransferExperiment />\n                <Spacer mb={3} />\n                <Media greaterThan=\"xs\">\n                  <ContinueButton\n                    onClick={this.onContinue}\n                    loading={isLoading}\n                  />\n                </Media>\n              </Flex>\n            }\n            Sidebar={\n              <Flex flexDirection=\"column\">\n                <Flex flexDirection=\"column\">\n                  <ArtworkSummaryItem order={order} />\n                  <TransactionDetailsSummaryItem order={order} />\n                </Flex>\n                <Spacer mb={[2, 3]} />\n                <Media at=\"xs\">\n                  <>\n                    <Spacer mb={3} />\n                    <ContinueButton\n                      onClick={this.onContinue}\n                      loading={isLoading}\n                    />\n                  </>\n                </Media>\n              </Flex>\n            }\n          />\n        </HorizontalPadding>\n      </>\n    )\n  }\n  setOrderPayment(variables: PaymentRouteSetOrderPaymentMutation[\"variables\"]) {\n    return this.props.commitMutation<PaymentRouteSetOrderPaymentMutation>({\n      variables,\n      mutation: graphql`\n        mutation PaymentRouteSetOrderPaymentMutation(\n          $input: CommerceSetPaymentInput!\n        ) {\n          commerceSetPayment(input: $input) {\n            orderOrError {\n              ... on CommerceOrderWithMutationSuccess {\n                order {\n                  creditCard {\n                    id\n                    name\n                    street1\n                    street2\n                    city\n                    state\n                    country\n                    postal_code\n                  }\n                }\n              }\n              ... on CommerceOrderWithMutationFailure {\n                error {\n                  type\n                  code\n                  data\n                }\n              }\n            }\n          }\n        }\n      `,\n    })\n  }\n}\n\nexport const PaymentFragmentContainer = createFragmentContainer(\n  injectCommitMutation(trackPageViewWrapper(injectDialog(PaymentRoute))),\n  {\n    me: graphql`\n      fragment Payment_me on Me {\n        ...PaymentPicker_me\n      }\n    `,\n    order: graphql`\n      fragment Payment_order on CommerceOrder {\n        id\n        mode\n        lineItems {\n          edges {\n            node {\n              artwork {\n                id\n              }\n            }\n          }\n        }\n        ...PaymentPicker_order\n        ...ArtworkSummaryItem_order\n        ...TransactionDetailsSummaryItem_order\n      }\n    `,\n  }\n)\n"],"file":"index.js"}