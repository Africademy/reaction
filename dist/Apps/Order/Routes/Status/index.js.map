{"version":3,"sources":["../../../../../src/Apps/Order/Routes/Status/index.tsx"],"names":["logger","StatusRoute","props","order","state","requestedFulfillment","mode","stateReason","stateExpiresAt","isOfferFlow","isShip","__typename","title","description","getFulfilmentDescription","getCanceledOfferOrderCopy","error","showTransactionSummary","fulfillment","o","lineItems","edges","node","fulfillments","courier","trackingId","estimatedDelivery","flowName","getStatusCopy","showOfferNote","code","window","location","href","Component","StyledShippingSummaryItem","ShippingSummaryItem","media","xs","StyledTransactionDetailsSummaryItem","TransactionDetailsSummaryItem","StatusFragmentContainer"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Flex,\n  Join,\n  media,\n  Message,\n  Sans,\n  Serif,\n  Spacer,\n} from \"@artsy/palette\"\nimport { Status_order } from \"__generated__/Status_order.graphql\"\nimport { HorizontalPadding } from \"Apps/Components/HorizontalPadding\"\nimport { TransactionDetailsSummaryItemFragmentContainer as TransactionDetailsSummaryItem } from \"Apps/Order/Components/TransactionDetailsSummaryItem\"\nimport { TwoColumnLayout } from \"Apps/Order/Components/TwoColumnLayout\"\nimport { trackPageViewWrapper } from \"Apps/Order/Utils/trackPageViewWrapper\"\nimport { Router } from \"found\"\nimport React, { Component } from \"react\"\nimport { Title } from \"react-head\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport styled from \"styled-components\"\nimport { get } from \"Utils/get\"\nimport createLogger from \"Utils/logger\"\nimport { ArtworkSummaryItemFragmentContainer as ArtworkSummaryItem } from \"../../Components/ArtworkSummaryItem\"\nimport { CreditCardSummaryItemFragmentContainer as CreditCardSummaryItem } from \"../../Components/CreditCardSummaryItem\"\nimport { ShippingSummaryItemFragmentContainer as ShippingSummaryItem } from \"../../Components/ShippingSummaryItem\"\n\nconst logger = createLogger(\"Order/Routes/Status/index.tsx\")\n\ninterface StatusPageConfig {\n  title: React.ReactNode\n  description: React.ReactNode\n  // default showTransactionSummary is true\n  showTransactionSummary?: boolean\n}\n\nexport interface StatusProps {\n  order: Status_order\n  router: Router\n}\n\nexport class StatusRoute extends Component<StatusProps> {\n  getStatusCopy(): StatusPageConfig {\n    const {\n      state,\n      requestedFulfillment,\n      mode,\n      stateReason,\n      stateExpiresAt,\n    } = this.props.order\n    const isOfferFlow = mode === \"OFFER\"\n    const isShip = requestedFulfillment.__typename === \"CommerceShip\"\n\n    switch (state) {\n      case \"SUBMITTED\":\n        return isOfferFlow\n          ? {\n              title: \"Your offer has been submitted\",\n              description: (\n                <>\n                  The seller will respond to your offer by {stateExpiresAt}.\n                  Keep in mind making an offer doesn’t guarantee you the work.\n                </>\n              ),\n            }\n          : {\n              title: \"Your order has been submitted\",\n              description: (\n                <>\n                  Thank you for your purchase. You will receive a confirmation\n                  email by {stateExpiresAt}.\n                </>\n              ),\n            }\n      case \"APPROVED\":\n        return {\n          title: isOfferFlow ? \"Offer accepted\" : \"Your order is confirmed\",\n          description: isShip ? (\n            <>\n              Thank you for your purchase. You will be notified when the work\n              has shipped, typically within 5–7 business days.\n            </>\n          ) : (\n            <>\n              Thank you for your purchase. A specialist will contact you within\n              2 business days to coordinate pickup.\n            </>\n          ),\n        }\n      case \"FULFILLED\": {\n        return isShip\n          ? {\n              title: \"Your order has shipped\",\n              description: this.getFulfilmentDescription(),\n            }\n          : {\n              title: \"Your order has been picked up\",\n              description: null,\n            }\n      }\n      case \"CANCELED\":\n      case \"REFUNDED\":\n        if (!isOfferFlow || state === \"REFUNDED\" || stateReason === null) {\n          // stateReason === null for offer orders only if the order was rejected\n          // after the offer was accepted.\n          return {\n            title: \"Your order was canceled and refunded\",\n            description: (\n              <>\n                Please allow 5–7 business days for the refund to appear on your\n                bank statement. Contact{\" \"}\n                <a href=\"mailto:orders@artsy.net\">orders@artsy.net</a> with any\n                questions.\n              </>\n            ),\n          }\n        }\n        // otherwise this was an offer order that was rejected before being\n        // accepted\n        return this.getCanceledOfferOrderCopy()\n      default:\n        // This should not happen. Check the order states are all accounted for:\n        // https://github.com/artsy/exchange/blob/master/app/models/order.rb\n        // (Aside from PENDING and ABANDONED)\n        logger.error(`Unhandled order state: ${state}`)\n        return {\n          title: \"Your order\",\n          description: null,\n        }\n    }\n  }\n\n  getCanceledOfferOrderCopy(): StatusPageConfig {\n    const { stateReason } = this.props.order\n    switch (stateReason) {\n      case \"buyer_rejected\":\n        return {\n          title: \"Offer declined\",\n          description: (\n            <>\n              Thank you for your response. The seller will be informed of your\n              decision to end the negotiation process.\n              <br />\n              <br />\n              We’d love to get your feedback. Contact{\" \"}\n              <a href=\"mailto:orders@artsy.net\">orders@artsy.net</a> with any\n              comments you have.\n            </>\n          ),\n          showTransactionSummary: false,\n        }\n      case \"seller_rejected_offer_too_low\":\n      case \"seller_rejected_shipping_unavailable\":\n      case \"seller_rejected\":\n      case \"seller_rejected_artwork_unavailable\":\n      case \"seller_rejected_other\":\n        return {\n          title: \"Offer declined\",\n          description: (\n            <>\n              Sorry, the seller declined your offer and has ended the\n              negotiation process.\n            </>\n          ),\n          showTransactionSummary: false,\n        }\n      case \"buyer_lapsed\":\n        return {\n          title: \"Offer expired\",\n          description: (\n            <>The seller’s offer expired because you didn’t respond in time.</>\n          ),\n          showTransactionSummary: false,\n        }\n      case \"seller_lapsed\":\n        return {\n          title: \"Offer expired\",\n          description: (\n            <>\n              Your offer expired because the seller didn’t respond to your offer\n              in time.\n            </>\n          ),\n          showTransactionSummary: false,\n        }\n      default:\n        // This should not happen. Check the cancel reasons are all accounted for:\n        // https://github.com/artsy/exchange/blob/master/app/models/order.rb\n        logger.error(`Unhandled cancellation reason: ${stateReason}`)\n        return {\n          title: \"Offer declined\",\n          description: null,\n          showTransactionSummary: false,\n        }\n    }\n  }\n\n  getFulfilmentDescription(): React.ReactNode {\n    const fulfillment = get(\n      this.props.order,\n      o => o.lineItems.edges[0].node.fulfillments.edges[0].node\n    )\n\n    if (!fulfillment) {\n      return null\n    }\n\n    return (\n      <>\n        Your work is on its way.\n        <br />\n        <br />\n        {fulfillment.courier && (\n          <>\n            Shipper: {fulfillment.courier}\n            <br />\n          </>\n        )}\n        {fulfillment.trackingId && (\n          <>\n            <>Tracking info: {fulfillment.trackingId}</>\n            <br />\n          </>\n        )}\n        {fulfillment.estimatedDelivery && (\n          <>Estimated delivery: {fulfillment.estimatedDelivery}</>\n        )}\n      </>\n    )\n  }\n\n  render() {\n    const { order } = this.props\n\n    const flowName = order.mode === \"OFFER\" ? \"Offer\" : \"Order\"\n    const {\n      title,\n      description,\n      showTransactionSummary = true,\n    } = this.getStatusCopy()\n    const showOfferNote = order.mode === \"OFFER\" && order.state === \"SUBMITTED\"\n\n    return (\n      <>\n        <HorizontalPadding>\n          <Serif size=\"6\" weight=\"regular\" color=\"black100\">\n            {title}\n          </Serif>\n          <Sans size=\"2\" weight=\"regular\" color=\"black60\" mb={[2, 3]}>\n            {flowName} #{order.code}\n          </Sans>\n          <TwoColumnLayout\n            Content={\n              <>\n                <Title>{flowName} status | Artsy</Title>\n                <Join separator={<Spacer mb={[2, 3]} />}>\n                  {description && <Message p={[2, 3]}>{description}</Message>}\n                  {showTransactionSummary ? (\n                    <Flex flexDirection=\"column\">\n                      <ArtworkSummaryItem order={order} />\n                      <StyledTransactionDetailsSummaryItem\n                        order={order}\n                        useLastSubmittedOffer\n                        showOfferNote={showOfferNote}\n                      />\n                    </Flex>\n                  ) : (\n                    <Button\n                      onClick={() => {\n                        window.location.href = \"/\"\n                      }}\n                      size=\"large\"\n                      width=\"100%\"\n                    >\n                      Back to Artsy\n                    </Button>\n                  )}\n                </Join>\n              </>\n            }\n            Sidebar={\n              showTransactionSummary && (\n                <Flex flexDirection=\"column\">\n                  <Flex flexDirection=\"column\">\n                    <StyledShippingSummaryItem order={order} />\n                    <CreditCardSummaryItem order={order} />\n                  </Flex>\n                </Flex>\n              )\n            }\n          />\n        </HorizontalPadding>\n      </>\n    )\n  }\n}\n\nconst StyledShippingSummaryItem = styled(ShippingSummaryItem)`\n  ${media.xs`\n    &&& {\n      border-top-left-radius: 0;\n      border-top-right-radius: 0;\n    }\n  `};\n`\nconst StyledTransactionDetailsSummaryItem = styled(\n  TransactionDetailsSummaryItem\n)`\n  ${media.xs`\n    &&& {\n      border-bottom: none;\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  `};\n`\n\nexport const StatusFragmentContainer = createFragmentContainer(\n  trackPageViewWrapper(StatusRoute),\n  {\n    order: graphql`\n      fragment Status_order on CommerceOrder {\n        __typename\n        id\n        code\n        state\n        mode\n        stateReason\n        stateExpiresAt(format: \"MMM D\")\n        requestedFulfillment {\n          ... on CommerceShip {\n            __typename\n          }\n          ... on CommercePickup {\n            __typename\n          }\n        }\n        ...ArtworkSummaryItem_order\n        ...TransactionDetailsSummaryItem_order\n        ...ShippingSummaryItem_order\n        ...CreditCardSummaryItem_order\n        lineItems {\n          edges {\n            node {\n              fulfillments {\n                edges {\n                  node {\n                    courier\n                    trackingId\n                    estimatedDelivery(format: \"MMM Do, YYYY\")\n                  }\n                }\n              }\n            }\n          }\n        }\n        ... on CommerceOfferOrder {\n          myLastOffer {\n            id\n            amount(precision: 2)\n            amountCents\n            shippingTotal(precision: 2)\n            shippingTotalCents\n            taxTotal(precision: 2)\n            taxTotalCents\n          }\n        }\n      }\n    `,\n  }\n)\n"],"file":"index.js"}