{"version":3,"sources":["../../../../src/Apps/Search/Components/NavigationTabs.tsx"],"names":["MORE_TABS","TAB_NAME_MAP","artist","marketing_collection","PartnerGallery","partner_show","fair","PartnerInstitution","PartnerInstitutionalSeller","gene","article","sale","NavigationTabs","context_module","Schema","ContextModule","_props","_state","tab","destination_path","action_type","ActionType","Click","subject","text","to","options","exact","count","tabName","replace","trim","trackClick","props","term","artworkCount","route","restAggregationCount","forEach","key","aggregationFor","agg","tabs","push","renderTab","Object","entries","tabCountMap","map","value","toLowerCase","React","Component","NavigationTabsFragmentContainer","searchableConnection","reduce","acc","val","type","aggregations","typeAggregation","find","slice","counts","name"],"mappings":"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","sourcesContent":["import { Flex, Sans } from \"@artsy/palette\"\nimport { NavigationTabs_searchableConnection } from \"__generated__/NavigationTabs_searchableConnection.graphql\"\nimport { track } from \"Artsy/Analytics\"\nimport * as Schema from \"Artsy/Analytics/Schema\"\nimport { RouteTab, TabCarousel } from \"Components/v2\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { get } from \"Utils/get\"\n\nexport interface Props {\n  searchableConnection: NavigationTabs_searchableConnection\n  term: string\n  artworkCount: number\n}\n\nconst MORE_TABS = [\"tag\", \"city\", \"feature\"]\n\nconst TAB_NAME_MAP = {\n  artist: \"Artists\",\n  marketing_collection: \"Collections\",\n  PartnerGallery: \"Galleries\",\n  partner_show: \"Shows\",\n  fair: \"Fairs\",\n  PartnerInstitution: \"Institutions\",\n  PartnerInstitutionalSeller: \"Institutions\",\n  gene: \"Categories\",\n  article: \"Articles\",\n  sale: \"Auctions\",\n}\n\n@track({\n  context_module: Schema.ContextModule.NavigationTabs,\n})\nexport class NavigationTabs extends React.Component<Props> {\n  @track((_props, _state, [tab, destination_path]: string[]) => ({\n    action_type: Schema.ActionType.Click,\n    subject: tab,\n    destination_path,\n  }))\n  trackClick(tab: string, destination_path: string) {\n    // no-op\n  }\n\n  renderTab = (\n    text: string,\n    to: string,\n    options: {\n      exact?: boolean\n      count?: number\n    } = {}\n  ) => {\n    const { exact, count } = options\n    const tabName = text.replace(/[0-9]/g, \"\").trim()\n    return (\n      <RouteTab\n        to={to}\n        exact={exact}\n        onClick={() => {\n          this.trackClick(tabName, to)\n        }}\n        key={to}\n      >\n        <Flex>\n          {text}\n          {count != null && (\n            <Sans ml={0.5} size=\"3t\" weight=\"regular\">\n              ({count})\n            </Sans>\n          )}\n        </Flex>\n      </RouteTab>\n    )\n  }\n\n  tabs() {\n    const { term, artworkCount } = this.props\n\n    const route = tab => `/search${tab}?term=${term}`\n\n    let restAggregationCount: number = 0\n    MORE_TABS.forEach(\n      key =>\n        (restAggregationCount += get(\n          aggregationFor(this.props, key),\n          agg => agg.count,\n          0\n        ))\n    )\n\n    const tabs = []\n\n    !!artworkCount &&\n      tabs.push(\n        this.renderTab(\"Artworks\", route(\"\"), {\n          exact: true,\n          count: artworkCount,\n        })\n      )\n\n    Object.entries(tabCountMap(this.props)).map(\n      ([key, value]: [string, number]) => {\n        tabs.push(\n          this.renderTab(key, route(`/${key.toLowerCase()}`), {\n            count: value,\n          })\n        )\n      }\n    )\n\n    !!restAggregationCount &&\n      tabs.push(\n        this.renderTab(\"More\", route(\"/more\"), {\n          count: restAggregationCount,\n        })\n      )\n\n    return tabs\n  }\n\n  render() {\n    return (\n      <Flex mx={[-2, 0]}>\n        <TabCarousel tabs={this.tabs()} />\n      </Flex>\n    )\n  }\n}\n\nexport const NavigationTabsFragmentContainer = createFragmentContainer(\n  NavigationTabs,\n  {\n    searchableConnection: graphql`\n      fragment NavigationTabs_searchableConnection on SearchableConnection {\n        aggregations {\n          slice\n          counts {\n            count\n            name\n          }\n        }\n      }\n    `,\n  }\n)\n\nexport interface TabCounts {\n  Artists?: number\n  Collections?: number\n  Galleries?: number\n  Shows?: number\n  Fairs?: number\n  Institutions?: number\n  Categories?: number\n  Articles?: number\n  Auctions?: number\n}\n\nexport const tabCountMap: (props: Props) => TabCounts = props => {\n  return Object.entries(TAB_NAME_MAP).reduce((acc, [key, val]) => {\n    let count = get(aggregationFor(props, key), agg => agg.count, 0)\n    if (!count) {\n      return acc\n    }\n    if (acc[val]) {\n      count += acc[val]\n    }\n    return {\n      ...acc,\n      [val]: count,\n    }\n  }, {})\n}\n\nconst aggregationFor = (props: Props, type: string) => {\n  const { searchableConnection } = props\n  const { aggregations } = searchableConnection\n\n  const typeAggregation = aggregations.find(agg => agg.slice === \"TYPE\").counts\n\n  return typeAggregation.find(agg => agg.name === type)\n}\n"],"file":"NavigationTabs.js"}