{"version":3,"sources":["../../../../../src/Apps/Search/Routes/Entity/SearchResultsEntity.tsx"],"names":["PAGE_SIZE","SearchResultsEntityRoute","props","isLoading","page","setState","window","scrollTo","viewer","searchConnection","search","pageInfo","hasNextPage","endCursor","loadAfter","state","cursor","toggleLoading","relay","refetch","first","after","before","last","error","console","location","tab","l","query","term","urlParams","qs","stringify","history","pushState","parseInt","items","v","edges","map","e","node","searchableItem","index","displayLabel","description","href","imageUrl","displayType","_id","length","pageCursors","loadNext","renderItems","React","Component","SearchResultsEntityRouteFragmentContainer"],"mappings":"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","sourcesContent":["import { Box, Separator } from \"@artsy/palette\"\nimport { SearchResultsEntity_viewer } from \"__generated__/SearchResultsEntity_viewer.graphql\"\nimport { GenericSearchResultItem } from \"Apps/Search/Components/GenericSearchResultItem\"\nimport { ZeroState } from \"Apps/Search/Components/ZeroState\"\nimport { PaginationFragmentContainer as Pagination } from \"Components/v2\"\nimport { LoadingArea, LoadingAreaState } from \"Components/v2/LoadingArea\"\nimport { Location } from \"found\"\nimport qs from \"qs\"\nimport React from \"react\"\nimport { createRefetchContainer, graphql, RelayRefetchProp } from \"react-relay\"\nimport { get } from \"Utils/get\"\n\nexport interface Props {\n  viewer: SearchResultsEntity_viewer\n  relay: RelayRefetchProp\n  location: Location\n  entities: string[]\n  tab: string\n}\n\ninterface State extends LoadingAreaState {\n  page: number\n}\n\nconst PAGE_SIZE = 10\n\nexport class SearchResultsEntityRoute extends React.Component<Props, State> {\n  state = {\n    isLoading: false,\n    page: null,\n  }\n\n  constructor(props) {\n    super(props)\n    const { location } = this.props\n    const { page } = get(location, l => l.query)\n\n    this.state = { isLoading: false, page: (page && parseInt(page, 10)) || 1 }\n  }\n\n  toggleLoading = isLoading => {\n    this.setState(\n      {\n        isLoading,\n      },\n      () => window.scrollTo(0, 0)\n    )\n  }\n\n  loadNext = () => {\n    const { viewer } = this.props\n    const { search: searchConnection } = viewer\n\n    const {\n      pageInfo: { hasNextPage, endCursor },\n    } = searchConnection\n\n    if (hasNextPage) {\n      this.loadAfter(endCursor, this.state.page + 1)\n    }\n  }\n\n  loadAfter = (cursor: string, page: number) => {\n    this.toggleLoading(true)\n\n    this.props.relay.refetch(\n      {\n        first: PAGE_SIZE,\n        after: cursor,\n        before: null,\n        last: null,\n        page: null,\n      },\n      null,\n      error => {\n        this.toggleLoading(false)\n        this.setState({ page })\n        if (error) {\n          console.error(error)\n        }\n\n        const { location, tab } = this.props\n        const { term } = get(location, l => l.query)\n        const urlParams = qs.stringify({\n          term,\n          page,\n        })\n        // TODO: Look into using router push w/ query params.\n        // this.props.router.replace(`/search/${tab}?${urlParams}`)\n        window.history.pushState({}, null, `/search/${tab}?${urlParams}`)\n      }\n    )\n  }\n\n  renderItems() {\n    const { viewer, location } = this.props\n    const { term } = get(location, l => l.query)\n    const { search: searchConnection } = viewer\n\n    const items = get(viewer, v => v.search.edges, []).map(e => e.node)\n\n    return (\n      <>\n        {items.map((searchableItem, index) => {\n          return (\n            <Box key={index}>\n              <GenericSearchResultItem\n                name={searchableItem.displayLabel}\n                description={searchableItem.description}\n                href={searchableItem.href}\n                imageUrl={searchableItem.imageUrl}\n                entityType={searchableItem.displayType}\n                index={index}\n                term={term}\n                id={searchableItem._id}\n              />\n              {index < items.length - 1 && <Separator />}\n            </Box>\n          )\n        })}\n        <Pagination\n          pageCursors={searchConnection.pageCursors}\n          onClick={this.loadAfter}\n          onNext={this.loadNext}\n          scrollTo=\"#jumpto--searchResultTabs\"\n          hasNextPage={searchConnection.pageInfo.hasNextPage}\n        />\n      </>\n    )\n  }\n\n  render() {\n    const { viewer, location } = this.props\n\n    const { term } = get(location, l => l.query)\n\n    const items = get(viewer, v => v.search.edges, []).map(e => e.node)\n    return (\n      <LoadingArea isLoading={this.state.isLoading}>\n        {items.length === 0 ? (\n          <Box mt={3}>\n            <ZeroState term={term} />\n          </Box>\n        ) : (\n          this.renderItems()\n        )}\n      </LoadingArea>\n    )\n  }\n}\n\nexport const SearchResultsEntityRouteFragmentContainer = createRefetchContainer(\n  SearchResultsEntityRoute,\n  {\n    viewer: graphql`\n      fragment SearchResultsEntity_viewer on Viewer\n        @argumentDefinitions(\n          term: { type: \"String!\", defaultValue: \"\" }\n          first: { type: \"Int\", defaultValue: 10 }\n          last: { type: \"Int\" }\n          after: { type: \"String\" }\n          before: { type: \"String\" }\n          page: { type: \"Int\" }\n          entities: { type: \"[SearchEntity]\" }\n        ) {\n        search(\n          query: $term\n          first: $first\n          after: $after\n          before: $before\n          last: $last\n          page: $page\n          entities: $entities\n        ) @principalField {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          pageCursors {\n            ...Pagination_pageCursors\n          }\n          edges {\n            node {\n              ... on SearchableItem {\n                description\n                displayLabel\n                href\n                _id\n                imageUrl\n                displayType\n              }\n            }\n          }\n        }\n      }\n    `,\n  },\n  graphql`\n    query SearchResultsEntityQuery(\n      $first: Int\n      $last: Int\n      $after: String\n      $before: String\n      $term: String!\n      $page: Int\n      $entities: [SearchEntity]\n    ) {\n      viewer {\n        ...SearchResultsEntity_viewer\n          @arguments(\n            first: $first\n            last: $last\n            after: $after\n            before: $before\n            term: $term\n            page: $page\n            entities: $entities\n          )\n      }\n    }\n  `\n)\n"],"file":"SearchResultsEntity.js"}