{"version":3,"sources":["../../../src/Apps/Search/SearchApp.tsx"],"names":["SearchApp","context_page","Schema","PageName","SearchPage","count","artworkCount","props","viewer","location","search","term","query","toLocaleString","children","renderFooter","filter_artworks","aggregations","f","counts","total","countWithoutArtworks","typeAggregation","find","agg","slice","forEach","name","hasResults","renderResults","React","Component","SearchAppFragmentContainer"],"mappings":"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","sourcesContent":["import { Box, Col, Row, Separator, Serif, Spacer } from \"@artsy/palette\"\nimport { SearchApp_viewer } from \"__generated__/SearchApp_viewer.graphql\"\nimport { AppContainer } from \"Apps/Components/AppContainer\"\nimport { HorizontalPadding } from \"Apps/Components/HorizontalPadding\"\nimport { NavigationTabsFragmentContainer as NavigationTabs } from \"Apps/Search/Components/NavigationTabs\"\nimport { SearchMeta } from \"Apps/Search/Components/SearchMeta\"\nimport { track } from \"Artsy/Analytics\"\nimport * as Schema from \"Artsy/Analytics/Schema\"\nimport {\n  Footer,\n  RecentlyViewedQueryRenderer as RecentlyViewed,\n} from \"Components/v2\"\nimport { Location } from \"found\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { get } from \"Utils/get\"\nimport { ZeroState } from \"./Components/ZeroState\"\n\nexport interface Props {\n  viewer: SearchApp_viewer\n  location: Location\n}\n\n@track({\n  context_page: Schema.PageName.SearchPage,\n})\nexport class SearchApp extends React.Component<Props> {\n  renderResults(count: number, artworkCount: number) {\n    const { viewer, location } = this.props\n    const { search } = viewer\n    const {\n      query: { term },\n    } = location\n\n    return (\n      <>\n        <Spacer mb={4} />\n        <Row>\n          <Col>\n            <Serif size=\"5\">\n              {count.toLocaleString()} Result{count > 1 ? \"s\" : \"\"} for \"{term}\"\n            </Serif>\n            <Spacer mb={4} />\n            <span id=\"jumpto--searchResultTabs\" />\n            <NavigationTabs\n              artworkCount={artworkCount}\n              term={term}\n              searchableConnection={search}\n            />\n            <Box minHeight=\"30vh\">{this.props.children}</Box>\n          </Col>\n        </Row>\n\n        {this.renderFooter()}\n      </>\n    )\n  }\n\n  renderFooter() {\n    return (\n      <>\n        <Row>\n          <Col>\n            <RecentlyViewed />\n          </Col>\n        </Row>\n\n        <Separator mt={6} mb={3} />\n\n        <Row>\n          <Col>\n            <Footer />\n          </Col>\n        </Row>\n      </>\n    )\n  }\n\n  render() {\n    const { viewer, location } = this.props\n    const { search, filter_artworks } = viewer\n    const { query } = location\n    const { term } = query\n\n    const { aggregations } = search\n    const artworkCount = get(filter_artworks, f => f.counts.total, 0)\n\n    let countWithoutArtworks: number = 0\n    const typeAggregation = aggregations.find(agg => agg.slice === \"TYPE\")\n      .counts\n\n    typeAggregation.forEach(({ count, name }) => {\n      if (name !== \"artwork\") {\n        countWithoutArtworks += count\n      }\n    })\n\n    const hasResults = !!(countWithoutArtworks || artworkCount)\n\n    return (\n      <AppContainer>\n        <HorizontalPadding>\n          {/* NOTE: react-head automatically moves these tags to the <head> element */}\n          <SearchMeta term={term} />\n          {hasResults ? (\n            this.renderResults(\n              countWithoutArtworks + artworkCount,\n              artworkCount\n            )\n          ) : (\n            <Box mt={3}>\n              <ZeroState term={term} />\n              {this.renderFooter()}\n            </Box>\n          )}\n          <Spacer mb={3} />\n        </HorizontalPadding>\n      </AppContainer>\n    )\n  }\n}\n\nexport const SearchAppFragmentContainer = createFragmentContainer(SearchApp, {\n  viewer: graphql`\n    fragment SearchApp_viewer on Viewer\n      @argumentDefinitions(term: { type: \"String!\", defaultValue: \"\" }) {\n      search(query: $term, first: 1, aggregations: [TYPE]) {\n        aggregations {\n          slice\n          counts {\n            count\n            name\n          }\n        }\n        ...NavigationTabs_searchableConnection\n        edges {\n          node {\n            ... on SearchableItem {\n              id\n              displayLabel\n              displayType\n            }\n          }\n        }\n      }\n\n      filter_artworks(keyword: $term, size: 0, aggregations: [TOTAL]) {\n        counts {\n          total\n        }\n      }\n    }\n  `,\n})\n"],"file":"SearchApp.js"}