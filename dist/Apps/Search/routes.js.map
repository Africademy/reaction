{"version":3,"sources":["../../../src/Apps/Search/routes.tsx"],"names":["prepareVariables","_params","location","query","keyword","term","tabsToEntitiesMap","collections","shows","fairs","institutions","galleries","categories","articles","auctions","more","entityTabs","Object","entries","map","key","entities","path","Component","SearchResultsEntityRoute","render","props","routes","SearchApp","children","SearchResultsArtworksRoute","ArtworkQueryFilter","SearchResultsArtistsRoute"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,iBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,QAA2B;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAClD,2BACKA,QAAQ,CAACC,KADd;AAEEC,IAAAA,OAAO,EAAEF,QAAQ,CAACC,KAAT,CAAeE;AAF1B;AAID,CALD;;AAOA,IAAMC,iBAAiB,GAAG;AACxBC,EAAAA,WAAW,EAAE,CAAC,YAAD,CADW;AAExBC,EAAAA,KAAK,EAAE,CAAC,MAAD,CAFiB;AAGxBC,EAAAA,KAAK,EAAE,CAAC,MAAD,CAHiB;AAIxBC,EAAAA,YAAY,EAAE,CAAC,aAAD,CAJU;AAKxBC,EAAAA,SAAS,EAAE,CAAC,SAAD,CALa;AAMxBC,EAAAA,UAAU,EAAE,CAAC,MAAD,CANY;AAOxBC,EAAAA,QAAQ,EAAE,CAAC,SAAD,CAPc;AAQxBC,EAAAA,QAAQ,EAAE,CAAC,MAAD,CARc;AASxBC,EAAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,SAAhB;AATkB,CAA1B;AAYA,IAAMC,UAAU,GAAGC,MAAM,CAACC,OAAP,CAAeZ,iBAAf,EAAkCa,GAAlC,CAAsC,iBAAqB;AAAA;AAAA,MAAnBC,GAAmB;AAAA,MAAdC,QAAc;;AAC5E,SAAO;AACLC,IAAAA,IAAI,EAAEF,GADD;AAELG,IAAAA,SAAS,EAAEC,8DAFN;AAIL;AACA;AACAC,IAAAA,MAAM,EAAE,uBAA0B;AAAA,UAAvBC,KAAuB,SAAvBA,KAAuB;AAAA,UAAhBH,SAAgB,SAAhBA,SAAgB;;AAChC,UAAI,CAACG,KAAL,EAAY;AACV,eAAO,6BAAC,oCAAD,OAAP;AACD;;AACD,aAAO,6BAAC,SAAD,eAAeA,KAAf;AAAsB,QAAA,GAAG,EAAEN,GAA3B;AAAgC,QAAA,QAAQ,EAAEC;AAA1C,SAAP;AACD,KAXI;AAYLrB,IAAAA,gBAAgB,EAAE,0BAACC,OAAD,SAA2B;AAAA,UAAfC,QAAe,SAAfA,QAAe;AAC3C,+BACKF,iBAAgB,CAACC,OAAD,EAAU;AAAEC,QAAAA,QAAQ,EAARA;AAAF,OAAV,CADrB;AAEEmB,QAAAA,QAAQ,EAARA;AAFF;AAID,KAjBI;AAkBLlB,IAAAA,KAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAlBA,GAAP;AA+BD,CAhCkB,CAAnB;AAkCO,IAAMwB,MAAqB,GAAG,CACnC;AACEL,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,SAAS,EAAEK,qCAFb;AAGEzB,EAAAA,KAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,GAHP;AAUEH,EAAAA,gBAAgB,EAAhBA,iBAVF;AAWE6B,EAAAA,QAAQ,GACN;AACEP,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,SAAS,EAAEO,oCAFb;AAGE9B,IAAAA,gBAAgB,EAAhBA,iBAHF;AAIEG,IAAAA,KAAK,EAAE4B;AAJT,GADM,EAON;AACET,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,SAAS,EAAES,gEAFb;AAGEhC,IAAAA,gBAAgB,EAAhBA,iBAHF;AAIEG,IAAAA,KAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJP,GAPM,4BAoBHa,UApBG;AAXV,CADmC,CAA9B","sourcesContent":["import { RouteConfig } from \"found\"\nimport React from \"react\"\nimport { graphql } from \"react-relay\"\n\nimport { SearchResultsArtistsRouteFragmentContainer as SearchResultsArtistsRoute } from \"Apps/Search/Routes/Artists/SearchResultsArtists\"\nimport { SearchResultsArtworksRoute } from \"Apps/Search/Routes/Artworks\"\nimport { SearchResultsEntityRouteFragmentContainer as SearchResultsEntityRoute } from \"Apps/Search/Routes/Entity/SearchResultsEntity\"\n\nimport { RouteSpinner } from \"Artsy/Relay/renderWithLoadProgress\"\nimport { ArtworkQueryFilter } from \"Components/v2/ArtworkFilter\"\nimport { SearchAppFragmentContainer as SearchApp } from \"./SearchApp\"\n\nconst prepareVariables = (_params, { location }) => {\n  return {\n    ...location.query,\n    keyword: location.query.term,\n  }\n}\n\nconst tabsToEntitiesMap = {\n  collections: [\"COLLECTION\"],\n  shows: [\"SHOW\"],\n  fairs: [\"FAIR\"],\n  institutions: [\"INSTITUTION\"],\n  galleries: [\"GALLERY\"],\n  categories: [\"GENE\"],\n  articles: [\"ARTICLE\"],\n  auctions: [\"SALE\"],\n  more: [\"TAG\", \"CITY\", \"FEATURE\"],\n}\n\nconst entityTabs = Object.entries(tabsToEntitiesMap).map(([key, entities]) => {\n  return {\n    path: key,\n    Component: SearchResultsEntityRoute,\n\n    // FIXME: We shouldn't overwrite our route functionality, as that breaks\n    // global route configuration behavior.\n    render: ({ props, Component }) => {\n      if (!props) {\n        return <RouteSpinner />\n      }\n      return <Component {...props} tab={key} entities={entities} />\n    },\n    prepareVariables: (_params, { location }) => {\n      return {\n        ...prepareVariables(_params, { location }),\n        entities,\n      }\n    },\n    query: graphql`\n      query routes_SearchResultsEntityQuery(\n        $term: String!\n        $entities: [SearchEntity]\n        $page: Int\n      ) {\n        viewer {\n          ...SearchResultsEntity_viewer\n            @arguments(term: $term, entities: $entities, page: $page)\n        }\n      }\n    `,\n  }\n})\n\nexport const routes: RouteConfig[] = [\n  {\n    path: \"/search\",\n    Component: SearchApp,\n    query: graphql`\n      query routes_SearchResultsTopLevelQuery($term: String!) {\n        viewer {\n          ...SearchApp_viewer @arguments(term: $term)\n        }\n      }\n    `,\n    prepareVariables,\n    children: [\n      {\n        path: \"/\",\n        Component: SearchResultsArtworksRoute,\n        prepareVariables,\n        query: ArtworkQueryFilter,\n      },\n      {\n        path: \"artists\",\n        Component: SearchResultsArtistsRoute,\n        prepareVariables,\n        query: graphql`\n          query routes_SearchResultsArtistsQuery($term: String!, $page: Int) {\n            viewer {\n              ...SearchResultsArtists_viewer\n                @arguments(term: $term, page: $page)\n            }\n          }\n        `,\n      },\n      ...entityTabs,\n    ],\n  },\n]\n"],"file":"routes.js"}