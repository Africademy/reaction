{"version":3,"sources":["../../../src/Apps/WorksForYou/index.tsx"],"names":["WorksForYou","dispatch","data","Events","postEvent","props","artistID","forSale","includeSelectedArtist","filter","relayEnvironment","user","viewer","Component","SpinnerContainer","styled","div"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAUaA,W,WAHZ,sBAAM,IAAN,EAAY;AACXC,EAAAA,QAAQ,EAAE,kBAAAC,IAAI;AAAA,WAAIC,gBAAOC,SAAP,CAAiBF,IAAjB,CAAJ;AAAA;AADH,CAAZ,C;;;;;;;;;;;;;6BASU;AAAA;;AAAA,wBACuB,KAAKG,KAD5B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,OADX,eACWA,OADX;AAEP,UAAMC,qBAAqB,GAAG,CAAC,CAACF,QAAhC;AACA,UAAMG,MAA+B,GAAGF,OAAO,GAAG,CAAC,aAAD,CAAH,GAAqB,IAApE;AAEA,aACE,6BAAC,cAAD,QACE,6BAAC,4BAAD,QACG,gBAAgC;AAAA,YAA7BG,gBAA6B,QAA7BA,gBAA6B;AAAA,YAAXC,IAAW,QAAXA,IAAW;AAC/B,eACE,4DACE,6BAAC,gCAAD,OADF,EAGE,6BAAC,wCAAD;AACE,UAAA,WAAW,EAAED,gBADf;AAEE,UAAA,KAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,YAFP;AAmBE,UAAA,SAAS,EAAE;AACTJ,YAAAA,QAAQ,EAARA,QADS;AAETE,YAAAA,qBAAqB,EAArBA,qBAFS;AAGTD,YAAAA,OAAO,EAAPA,OAHS;AAITE,YAAAA,MAAM,EAANA;AAJS,WAnBb;AAyBE,UAAA,MAAM,EAAE,uBAAe;AAAA,gBAAZJ,KAAY,SAAZA,KAAY;;AACrB,gBAAIA,KAAJ,EAAW;AACT,qBACE,6BAAC,YAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAY,gBAAA,EAAE,EAAE;AAAhB,iBACGG,qBAAqB,GACpB,6BAAC,+DAAD;AACE,gBAAA,QAAQ,EAAE,KAAI,CAACH,KAAL,CAAWC,QADvB;AAEE,gBAAA,MAAM,EAAED,KAAK,CAACO,MAFhB;AAGE,gBAAA,OAAO,EAAEL,OAHX;AAIE,gBAAA,IAAI,EAAEI;AAJR,gBADoB,GAQpB,6BAAC,mDAAD;AACE,gBAAA,IAAI,EAAEA,IADR;AAEE,gBAAA,MAAM,EAAEN,KAAK,CAACO;AAFhB,gBATJ,CADF;AAiBD,aAlBD,MAkBO;AACL,qBACE,6BAAC,gBAAD,QACE,6BAAC,gBAAD,OADF,CADF;AAKD;AACF;AAnDH,UAHF,CADF;AA2DD,OA7DH,CADF,CADF;AAmED;;;;EA9E8BC,gB,4CACT;AACpBN,EAAAA,OAAO,EAAE,IADW;AAEpBD,EAAAA,QAAQ,EAAE;AAFU,C;;;AAgFxB,IAAMQ,gBAAgB,GAAGC,0BAAOC,GAAV;AAAA;AAAA;AAAA,kDAAtB","sourcesContent":["import { Box, Spinner, Theme } from \"@artsy/palette\"\nimport { ArtistArtworksFilters } from \"__generated__/WorksForYouQuery.graphql\"\nimport { WorksForYouQuery } from \"__generated__/WorksForYouQuery.graphql\"\nimport { MarketingHeader } from \"Apps/WorksForYou/MarketingHeader\"\nimport { SystemContextConsumer, SystemContextProps } from \"Artsy\"\nimport { track } from \"Artsy/Analytics\"\nimport { SystemQueryRenderer as QueryRenderer } from \"Artsy/Relay/SystemQueryRenderer\"\nimport React, { Component } from \"react\"\nimport { graphql } from \"react-relay\"\nimport styled from \"styled-components\"\nimport Events from \"Utils/Events\"\nimport { WorksForYouArtistFeedPaginationContainer as WorksForYouArtistFeed } from \"./WorksForYouArtistFeed\"\nimport { WorksForYouFeedPaginationContainer as WorksForYouFeed } from \"./WorksForYouFeed\"\n\nexport interface Props extends SystemContextProps {\n  artistID?: string\n  forSale?: boolean\n}\n\n@track(null, {\n  dispatch: data => Events.postEvent(data),\n})\nexport class WorksForYou extends Component<Props> {\n  static defaultProps = {\n    forSale: true,\n    artistID: \"\",\n  }\n\n  render() {\n    const { artistID, forSale } = this.props\n    const includeSelectedArtist = !!artistID\n    const filter: ArtistArtworksFilters[] = forSale ? [\"IS_FOR_SALE\"] : null\n\n    return (\n      <Theme>\n        <SystemContextConsumer>\n          {({ relayEnvironment, user }) => {\n            return (\n              <>\n                <MarketingHeader />\n\n                <QueryRenderer<WorksForYouQuery>\n                  environment={relayEnvironment}\n                  query={graphql`\n                    query WorksForYouQuery(\n                      $includeSelectedArtist: Boolean!\n                      $artistID: String!\n                      $forSale: Boolean\n                      $filter: [ArtistArtworksFilters]\n                    ) {\n                      viewer {\n                        ...WorksForYouFeed_viewer\n                          @skip(if: $includeSelectedArtist)\n                          @arguments(for_sale: $forSale)\n                        ...WorksForYouArtistFeed_viewer\n                          @include(if: $includeSelectedArtist)\n                          @arguments(artistID: $artistID, filter: $filter)\n                      }\n                    }\n                  `}\n                  variables={{\n                    artistID,\n                    includeSelectedArtist,\n                    forSale,\n                    filter,\n                  }}\n                  render={({ props }) => {\n                    if (props) {\n                      return (\n                        <Box pt={3} pb={3}>\n                          {includeSelectedArtist ? (\n                            <WorksForYouArtistFeed\n                              artistID={this.props.artistID}\n                              viewer={props.viewer}\n                              forSale={forSale}\n                              user={user}\n                            />\n                          ) : (\n                            <WorksForYouFeed\n                              user={user}\n                              viewer={props.viewer}\n                            />\n                          )}\n                        </Box>\n                      )\n                    } else {\n                      return (\n                        <SpinnerContainer>\n                          <Spinner />\n                        </SpinnerContainer>\n                      )\n                    }\n                  }}\n                />\n              </>\n            )\n          }}\n        </SystemContextConsumer>\n      </Theme>\n    )\n  }\n}\n\nconst SpinnerContainer = styled.div`\n  width: 100%;\n  height: 100px;\n  position: relative;\n`\n"],"file":"index.js"}