{"version":3,"sources":["../../../src/Artsy/Relay/RootQueryRenderer.tsx"],"names":["Renderer","user","relayEnvironment","children","props","RendererWithContext","RootQueryRenderer"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAKA;;AAGA;;;;;;;;;;AAeA,IAAMA,QAA0B,GAAG,SAA7BA,QAA6B;AAAA,MACjCC,IADiC,QACjCA,IADiC;AAAA,MAEjCC,gBAFiC,QAEjCA,gBAFiC;AAAA,MAGjCC,QAHiC,QAGjCA,QAHiC;AAAA,MAI9BC,KAJ8B;;AAAA,SAK7B,6BAAC,wCAAD,eAAyBA,KAAzB;AAAgC,IAAA,WAAW,EAAEF;AAA7C,KAL6B;AAAA,CAAnC;;AAOA,IAAMG,mBAAmB,GAAG,yBAAkBL,QAAlB,CAA5B;AAEA;;;;;;;AAMO,IAAMM,iBAAmC,GAAG,SAAtCA,iBAAsC;AAAA,MACjDL,IADiD,SACjDA,IADiD;AAAA,MAEjDE,QAFiD,SAEjDA,QAFiD;AAAA,MAG9CC,KAH8C;;AAAA,SAKjD,6BAAC,uBAAD;AAAuB,IAAA,IAAI,EAAEH;AAA7B,KACE,6BAAC,mBAAD,EAAyBG,KAAzB,CADF,CALiD;AAAA,CAA5C","sourcesContent":["import {\n  SystemContextProps,\n  SystemContextProvider,\n  withSystemContext,\n} from \"Artsy\"\nimport React from \"react\"\nimport { GraphQLTaggedNode, ReadyState } from \"react-relay\"\nimport { CacheConfig, RerunParam, Variables } from \"relay-runtime\"\nimport { SystemQueryRenderer } from \"./SystemQueryRenderer\"\n\n/**\n * A copy of the upstream interface, minus the `environment` field.\n */\ninterface QueryRendererProps {\n  cacheConfig?: CacheConfig\n  query: GraphQLTaggedNode\n  variables: Variables\n  rerunParamExperimental?: RerunParam\n  render(readyState: ReadyState): React.ReactElement<any> | undefined | null\n}\n\ntype Props = SystemContextProps & QueryRendererProps\n\nconst Renderer: React.SFC<Props> = ({\n  user,\n  relayEnvironment,\n  children,\n  ...props\n}) => <SystemQueryRenderer {...props} environment={relayEnvironment} />\n\nconst RendererWithContext = withSystemContext(Renderer)\n\n/**\n * This component is, for now, mostly intended as an easy way to render stories, as it combines the Artsy\n * `ContextProvider` component and Relay‘s `QueryRenderer` component.\n *\n * We’ll need to see if it makes sense to use this as an entry point to render component trees from Reaction in Force.\n */\nexport const RootQueryRenderer: React.SFC<Props> = ({\n  user,\n  children,\n  ...props\n}) => (\n  <SystemContextProvider user={user}>\n    <RendererWithContext {...props} />\n  </SystemContextProvider>\n)\n"],"file":"RootQueryRenderer.js"}