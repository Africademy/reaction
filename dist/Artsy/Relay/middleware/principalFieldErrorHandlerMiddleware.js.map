{"version":3,"sources":["../../../../src/Artsy/Relay/middleware/principalFieldErrorHandlerMiddleware.ts"],"names":["principalFieldErrorHandlerMiddleware","next","req","res","statusCode","r","json","extensions","principalField","httpStatusCode","HttpError"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;;;;;AAEO,SAASA,oCAAT,GAAgD;AACrD,SAAO,UAAAC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAI,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACKD,IAAI,CAACC,GAAD,CADT;;AAAA;AACPC,kBAAAA,GADO;AAEPC,kBAAAA,UAFO,GAEM,cACjBD,GADiB,EAEjB,UAAAE,CAAC;AAAA,2BAAIA,CAAC,CAACC,IAAF,CAAOC,UAAP,CAAkBC,cAAlB,CAAiCC,cAArC;AAAA,mBAFgB,CAFN;;AAAA,uBAOTL,UAPS;AAAA;AAAA;AAAA;;AAAA,wBAQL,IAAIM,gBAAJ,CAAcN,UAAd,CARK;;AAAA;AAAA,mDAUJD,GAVI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAX;AAaD","sourcesContent":["import { HttpError } from \"found\"\nimport { get } from \"Utils/get\"\n\nexport function principalFieldErrorHandlerMiddleware() {\n  return next => async req => {\n    const res = await next(req)\n    const statusCode = get(\n      res,\n      r => r.json.extensions.principalField.httpStatusCode\n    )\n\n    if (statusCode) {\n      throw new HttpError(statusCode)\n    } else {\n      return res\n    }\n  }\n}\n"],"file":"principalFieldErrorHandlerMiddleware.js"}