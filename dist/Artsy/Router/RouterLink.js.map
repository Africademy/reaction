{"version":3,"sources":["../../../src/Artsy/Router/RouterLink.tsx"],"names":["RouterLink","context","to","children","props","isRouterContext","Boolean","router","handlers","Object","keys","reduce","acc","prop","startsWith","push","allowedProps","className","style","contextTypes","PropTypes","any"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;AAWO,IAAMA,UAA+B,GAAG,SAAlCA,UAAkC,OAE7CC,OAF6C,EAG1C;AAAA,MAFDC,EAEC,QAFDA,EAEC;AAAA,MAFGC,QAEH,QAFGA,QAEH;AAAA,MAFgBC,KAEhB;;AACH,MAAMC,eAAe,GAAGC,OAAO,CAACL,OAAO,CAACM,MAAT,CAA/B,CADG,CAGH;AACA;;AACA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,MAAnB,CAA0B,UAACC,GAAD,EAAMC,IAAN,EAAe;AACxD,QAAIA,IAAI,CAACC,UAAL,CAAgB,IAAhB,CAAJ,EAA2B;AACzBF,MAAAA,GAAG,CAACG,IAAJ,CAASF,IAAT;AACD;;AACD,WAAOD,GAAP;AACD,GALgB,EAKd,EALc,CAAjB;;AAOA,MAAIP,eAAJ,EAAqB;AACnB,QAAMW,YAAY,GAAG,oBAAKZ,KAAL,GACnB,WADmB,EAEnB,iBAFmB,EAGnB,WAHmB,EAInB,OAJmB,EAKnB,SALmB,EAMnB,OANmB,4BAOhBI,QAPgB,GAArB;AAUA,WACE,6BAAC,WAAD;AAAM,MAAA,EAAE,EAAEN;AAAV,OAAkBc,YAAlB,GACGb,QADH,CADF;AAKD,GAhBD,MAgBO;AACL,WACE;AACE,MAAA,IAAI,EAAED,EADR;AAEE,MAAA,SAAS,EAAEE,KAAK,CAACa,SAFnB;AAGE,MAAA,KAAK,EAAEb,KAAK,CAACc;AAHf,OAIMd,KAJN,GAMGD,QANH,CADF;AAUD;AACF,CA3CM;AA6CP;;;;;;;AAIAH,UAAU,CAACmB,YAAX,GAA0B;AACxBZ,EAAAA,MAAM,EAAEa,mBAAUC;AADM,CAA1B","sourcesContent":["import { Link, LinkProps } from \"found\"\nimport { pick } from \"lodash\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\n/**\n * Wrapper component around found's <Link> component with a fallback to a normal\n * <a> tag if ouside of a routing context.\n *\n * NOTE: If using styled-components, <RouterLink> can be easily styled like so:\n *\n * const StyledLink = styled(RouterLink)`\n *   ...\n * `\n */\n\nexport const RouterLink: React.FC<LinkProps> = (\n  { to, children, ...props },\n  context\n) => {\n  const isRouterContext = Boolean(context.router)\n\n  // Only pass found-router specific props across, props that conform to the\n  // link API found here: https://github.com/4Catalyzer/found#links\n  const handlers = Object.keys(props).reduce((acc, prop) => {\n    if (prop.startsWith(\"on\")) {\n      acc.push(prop)\n    }\n    return acc\n  }, [])\n\n  if (isRouterContext) {\n    const allowedProps = pick(props, [\n      \"Component\",\n      \"activeClassName\",\n      \"className\",\n      \"exact\",\n      \"replace\",\n      \"style\",\n      ...handlers,\n    ])\n\n    return (\n      <Link to={to} {...allowedProps}>\n        {children}\n      </Link>\n    )\n  } else {\n    return (\n      <a\n        href={to as string}\n        className={props.className}\n        style={props.style}\n        {...props}\n      >\n        {children}\n      </a>\n    )\n  }\n}\n\n/**\n * FIXME: Upgrade to Found v.4: https://github.com/4Catalyzer/found/releases/tag/v0.4.0,\n * which supports React 14.3 context style.\n */\nRouterLink.contextTypes = {\n  router: PropTypes.any,\n}\n"],"file":"RouterLink.js"}