{"version":3,"sources":["../../../../src/Artsy/Router/Utils/RenderStatus.tsx"],"names":["logger","RenderPending","position","left","top","RenderReady","props","elements","RenderError","error","data","message","process","env","NODE_ENV","sd","String","status","Renderer","children"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,MAAM,GAAG,qBAAa,iCAAb,CAAf;;AAEO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC;;;;AAIA,SACE,4DACE,6BAAC,QAAD,QAAW,IAAX,CADF,EAEE,6BAAC,mBAAD;AACE,IAAA,SAAS,EAAC,oBADZ,CACiC;AADjC;AAEE,IAAA,cAAc,EAAE,KAFlB;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,OADL;AAELC,MAAAA,IAAI,EAAE,CAFD;AAGLC,MAAAA,GAAG,EAAE,CAAC;AAHD;AAHT,IAFF,CADF;AAcD,CAnBM;;;;AAqBA,IAAMC,WAEX,GAAG,SAFQA,WAER,CAAAC,KAAK,EAAI;AACZ,SACE,6BAAC,QAAD;AAAU,IAAA,YAAY;AAAtB,KACE,6BAAC,yBAAD;AAAkB,IAAA,QAAQ,EAAEA,KAAK,CAACC;AAAlC,IADF,CADF;AAKD,CARM;;;;AAUA,IAAMC,WAEX,GAAG,SAFQA,WAER,CAAAF,KAAK,EAAI;AACZN,EAAAA,MAAM,CAACS,KAAP,CAAaH,KAAK,CAACG,KAAN,CAAYC,IAAzB;AAEA,MAAMC,OAAO,GACX,CAACC,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwBC,cAAGD,QAA5B,MAA0C,aAA1C,GACIE,MAAM,CAACV,KAAK,CAACG,KAAN,CAAYC,IAAb,CADV,GAEI,gBAHN,CAHY,CAQZ;AACA;AACA;;AACA,SAAO,6BAAC,oBAAD;AAAW,IAAA,IAAI,EAAEJ,KAAK,CAACG,KAAN,CAAYQ,MAAZ,IAAsB,GAAvC;AAA4C,IAAA,OAAO,EAAEN;AAArD,IAAP;AACD,CAdM;AAgBP;;;;;;;;;;AAMA,IAAMO,QAAQ,GAAG,SAAXA,QAAW,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZb,KAAY;;AAC3C,SACE,6BAAC,YAAD,QACE,6BAAC,6BAAD,EAAqBA,KAArB,EAA6Ba,QAA7B,CADF,CADF;AAKD,CAND","sourcesContent":["import React from \"react\"\nimport StaticContainer from \"react-static-container\"\n\nimport { Box, PageLoader } from \"@artsy/palette\"\nimport { ErrorPage } from \"Components/ErrorPage\"\nimport ElementsRenderer from \"found/lib/ElementsRenderer\"\nimport { data as sd } from \"sharify\"\nimport createLogger from \"Utils/logger\"\n\nconst logger = createLogger(\"Artsy/Router/Utils/RenderStatus\")\n\nexport const RenderPending = () => {\n  /**\n   * TODO: Add timeout here for when a request takes too long. Show generic error\n   * and notify Sentry.\n   */\n  return (\n    <>\n      <Renderer>{null}</Renderer>\n      <PageLoader\n        className=\"reactionPageLoader\" // positional styling comes from Force body.styl\n        showBackground={false}\n        style={{\n          position: \"fixed\",\n          left: 0,\n          top: -6,\n        }}\n      />\n    </>\n  )\n}\n\nexport const RenderReady: React.FC<{\n  elements: React.ReactNode\n}> = props => {\n  return (\n    <Renderer shouldUpdate>\n      <ElementsRenderer elements={props.elements} />\n    </Renderer>\n  )\n}\n\nexport const RenderError: React.FC<{\n  error: { status?: number; data?: any }\n}> = props => {\n  logger.error(props.error.data)\n\n  const message =\n    (process.env.NODE_ENV || sd.NODE_ENV) === \"development\"\n      ? String(props.error.data)\n      : \"Internal error\"\n\n  // TODO: Make error code more granular. See:\n  // https://artsyproduct.atlassian.net/browse/PLATFORM-1343\n  // https://github.com/artsy/reaction/pull/1855\n  return <ErrorPage code={props.error.status || 500} message={message} />\n}\n\n/**\n * Define a container component so that we don't run into reconciliation issues\n * due to an element existing in RenderPending that doesn't exist in RenderReady,\n * between the top most container and StaticContainer.\n *\n */\nconst Renderer = ({ children, ...props }) => {\n  return (\n    <Box>\n      <StaticContainer {...props}>{children}</StaticContainer>\n    </Box>\n  )\n}\n"],"file":"RenderStatus.js"}