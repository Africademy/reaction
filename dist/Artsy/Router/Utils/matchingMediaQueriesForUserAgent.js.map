{"version":3,"sources":["../../../../src/Artsy/Router/Utils/matchingMediaQueriesForUserAgent.ts"],"names":["matchingMediaQueriesForUserAgent","userAgent","device","undefined","supportsHover","touch","onlyMatch","resizable","minWidth","maxWidth"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;AAMA;;;AAGO,SAASA,gCAAT,CACLC,SADK,EAEiB;AACtB,MAAMC,MAAM,GAAG,wCAAWD,SAAX,CAAf;;AACA,MAAI,CAACC,MAAL,EAAa;AACX,WAAOC,SAAP;AACD,GAFD,MAEO;AACL,QAAMC,aAAa,GAAGF,MAAM,CAACG,KAAP,GAAe,UAAf,GAA4B,OAAlD;AACA,QAAMC,SAA+B,GAAGJ,MAAM,CAACK,SAAP,IAElCH,aAFkC,4BAG/B,0CAAyBF,MAAM,CAACM,QAAhC,EAA0CN,MAAM,CAACO,QAAjD,CAH+B,KAKpC,CACEL,aADF,EAEE,uCAAsBF,MAAM,CAACM,QAA7B,CAFF,EAGE,uCAAsBN,MAAM,CAACO,QAA7B,CAHF,CALJ;AAUA,WAAOH,SAAP;AACD;AACF","sourcesContent":["import { findDevice } from \"@artsy/detect-responsive-traits\"\nimport {\n  findBreakpointAtWidth,\n  findBreakpointsForWidths,\n  MatchingMediaQueries,\n} from \"Utils/Responsive\"\n\n/**\n * Find the breakpoints and interactions that the server should render\n */\nexport function matchingMediaQueriesForUserAgent(\n  userAgent: string\n): MatchingMediaQueries {\n  const device = findDevice(userAgent)\n  if (!device) {\n    return undefined\n  } else {\n    const supportsHover = device.touch ? \"notHover\" : \"hover\"\n    const onlyMatch: MatchingMediaQueries = device.resizable\n      ? [\n          supportsHover,\n          ...findBreakpointsForWidths(device.minWidth, device.maxWidth),\n        ]\n      : [\n          supportsHover,\n          findBreakpointAtWidth(device.minWidth),\n          findBreakpointAtWidth(device.maxWidth),\n        ]\n    return onlyMatch\n  }\n}\n"],"file":"matchingMediaQueriesForUserAgent.js"}