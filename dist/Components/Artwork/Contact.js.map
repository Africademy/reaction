{"version":3,"sources":["../../../src/Components/Artwork/Contact.tsx"],"names":["Contact","artwork","props","sale","is_auction","auctionLine","is_inquireable","contactPartnerLine","isLiveOpen","p","is_live_open","isOpen","is_open","isClosed","is_closed","href","sa","sale_artwork","bidderPositions","counts","bidder_positions","highestBidDisplay","highest_bid","display","openingBidDisplay","opening_bid","s","partner","type","toLocaleLowerCase","contactLine","React","Component"],"mappings":"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","sourcesContent":["import { Contact_artwork } from \"__generated__/Contact_artwork.graphql\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { get } from \"Utils/get\"\nimport TextLink from \"../TextLink\"\n\nexport interface ContactProps extends React.HTMLProps<Contact> {\n  artwork: Contact_artwork\n}\n\nexport class Contact extends React.Component<ContactProps, null> {\n  contactLine() {\n    const { artwork } = this.props\n    if (artwork.sale && artwork.sale.is_auction) {\n      return this.auctionLine()\n    } else if (artwork.is_inquireable) {\n      return this.contactPartnerLine()\n    }\n  }\n\n  auctionLine() {\n    const { artwork } = this.props\n    const isLiveOpen = get(artwork, p => p.sale.is_live_open)\n    const isOpen = get(artwork, p => p.sale.is_open)\n    const isClosed = get(artwork, p => p.sale.is_closed)\n\n    if (isLiveOpen) {\n      return (\n        <TextLink href={artwork.href} underline>\n          Enter Live Auction\n        </TextLink>\n      )\n    } else if (isOpen) {\n      const sa = get(artwork, p => p.sale_artwork)\n      const bidderPositions = get(sa, p => p.counts.bidder_positions)\n      const highestBidDisplay = get(sa, p => p.highest_bid.display)\n      const openingBidDisplay = get(sa, p => p.opening_bid.display)\n\n      if (bidderPositions && bidderPositions > 0) {\n        const s = bidderPositions > 1 ? \"s\" : \"\"\n        return (\n          <span>\n            {highestBidDisplay} ({bidderPositions} bid\n            {s})\n          </span>\n        )\n      } else {\n        return <span>{openingBidDisplay}</span>\n      }\n    } else if (isClosed) {\n      return <span>Auction closed</span>\n    } else {\n      return <span />\n    }\n  }\n\n  contactPartnerLine() {\n    const partner = get(this.props, p =>\n      p.artwork.partner.type.toLocaleLowerCase()\n    )\n\n    if (partner) {\n      return (\n        <TextLink href={this.props.artwork.href} underline>\n          Contact {partner}\n        </TextLink>\n      )\n    } else {\n      return null\n    }\n  }\n\n  render() {\n    return <div>{this.contactLine()}</div>\n  }\n}\n\nexport default createFragmentContainer(Contact, {\n  artwork: graphql`\n    fragment Contact_artwork on Artwork {\n      href\n      is_inquireable\n      sale {\n        is_auction\n        is_live_open\n        is_open\n        is_closed\n      }\n      partner(shallow: true) {\n        type\n      }\n      sale_artwork {\n        highest_bid {\n          display\n        }\n        opening_bid {\n          display\n        }\n        counts {\n          bidder_positions\n        }\n      }\n    }\n  `,\n})\n"],"file":"Contact.js"}