{"version":3,"sources":["../../../../src/Components/Authentication/Desktop/ForgotPasswordForm.tsx"],"names":["ForgotPasswordForm","error","props","values","formikBag","handleSubmit","onSubmit","ForgotPasswordValidator","errors","touched","formikHandleChange","handleChange","handleBlur","isSubmitting","status","setStatus","e","setState","email","success","handleTypeChange","ModalType","login","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAMA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAMaA,kB;;;;;;;;;;;;;;;;;;4DAIH;AACNC,MAAAA,KAAK,EAAE,MAAKC,KAAL,CAAWD;AADZ,K;;+DAIG,UAACE,MAAD,EAAsBC,SAAtB,EAA8D;AACvE,kCAAW,eAAX;;AACA,YAAKF,KAAL,CAAWG,YAAX,CAAwBF,MAAxB,EAAgCC,SAAhC;AACD,K;;;;;;;6BAEQ;AAAA;;AACP,aACE,6BAAC,cAAD;AACE,QAAA,aAAa,EAAE,KAAKF,KAAL,CAAWC,MAD5B;AAEE,QAAA,QAAQ,EAAE,KAAKG,QAFjB;AAGE,QAAA,gBAAgB,EAAEC;AAHpB,SAKG,gBAU+B;AAAA,YAT9BJ,MAS8B,QAT9BA,MAS8B;AAAA,YAR9BK,MAQ8B,QAR9BA,MAQ8B;AAAA,YAP9BC,OAO8B,QAP9BA,OAO8B;AAAA,YANhBC,kBAMgB,QAN9BC,YAM8B;AAAA,YAL9BC,UAK8B,QAL9BA,UAK8B;AAAA,YAJ9BP,YAI8B,QAJ9BA,YAI8B;AAAA,YAH9BQ,YAG8B,QAH9BA,YAG8B;AAAA,YAF9BC,MAE8B,QAF9BA,MAE8B;AAAA,YAD9BC,SAC8B,QAD9BA,SAC8B;;AAC9B,YAAMJ,YAAY,GAAG,SAAfA,YAAe,CAAAK,CAAC,EAAI;AACxBD,UAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,UAAA,MAAI,CAACE,QAAL,CAAc;AAAEhB,YAAAA,KAAK,EAAE;AAAT,WAAd;;AACAS,UAAAA,kBAAkB,CAACM,CAAD,CAAlB;AACD,SAJD;;AAMA,eACE,6BAAC,6BAAD;AAAM,UAAA,QAAQ,EAAEX,YAAhB;AAA8B,UAAA,MAAM,EAAE;AAAtC,WACE,6BAAC,mBAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,KAAK,EAAEI,OAAO,CAACS,KAAR,IAAiBV,MAAM,CAACU,KAFjC;AAGE,UAAA,WAAW,EAAC,0BAHd;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,KAAK,EAAC,OALR;AAME,UAAA,IAAI,EAAC,OANP;AAOE,UAAA,KAAK,EAAEf,MAAM,CAACe,KAPhB;AAQE,UAAA,QAAQ,EAAEP,YARZ;AASE,UAAA,MAAM,EAAEC,UATV;AAUE,UAAA,SAAS;AAVX,UADF,EAaGE,MAAM,IAAI,CAACA,MAAM,CAACK,OAAlB,IAA6B,6BAAC,qBAAD;AAAO,UAAA,IAAI;AAAX,WAAaL,MAAM,CAACb,KAApB,CAbhC,EAcE,6BAAC,4BAAD;AAAc,UAAA,QAAQ,EAAEY;AAAxB,qCAdF,EAiBE,6BAAC,sBAAD;AACE,UAAA,gBAAgB,EAAE;AAAA,mBAChB,MAAI,CAACX,KAAL,CAAWkB,gBAAX,CAA4BC,iBAAUC,KAAtC,CADgB;AAAA,WADpB;AAIE,UAAA,IAAI,EAAE;AAJR,UAjBF,CADF;AA0BD,OAhDH,CADF;AAoDD;;;;EAlEqCC,gB","sourcesContent":["import { Formik, FormikProps } from \"formik\"\nimport React, { Component } from \"react\"\n\nimport {\n  Error,\n  Footer,\n  FormContainer as Form,\n  SubmitButton,\n} from \"Components/Authentication/commonElements\"\nimport QuickInput from \"Components/QuickInput\"\nimport { repcaptcha } from \"Utils/repcaptcha\"\nimport { FormProps, InputValues, ModalType } from \"../Types\"\nimport { ForgotPasswordValidator } from \"../Validators\"\n\nexport interface ForgotPasswordFormState {\n  error?: string\n}\n\nexport class ForgotPasswordForm extends Component<\n  FormProps,\n  ForgotPasswordFormState\n> {\n  state = {\n    error: this.props.error,\n  }\n\n  onSubmit = (values: InputValues, formikBag: FormikProps<InputValues>) => {\n    repcaptcha(\"forgot_submit\")\n    this.props.handleSubmit(values, formikBag)\n  }\n\n  render() {\n    return (\n      <Formik\n        initialValues={this.props.values}\n        onSubmit={this.onSubmit}\n        validationSchema={ForgotPasswordValidator}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange: formikHandleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          status,\n          setStatus,\n        }: FormikProps<InputValues>) => {\n          const handleChange = e => {\n            setStatus(null)\n            this.setState({ error: null })\n            formikHandleChange(e)\n          }\n\n          return (\n            <Form onSubmit={handleSubmit} height={180}>\n              <QuickInput\n                block\n                error={touched.email && errors.email}\n                placeholder=\"Enter your email address\"\n                name=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                autoFocus\n              />\n              {status && !status.success && <Error show>{status.error}</Error>}\n              <SubmitButton disabled={isSubmitting}>\n                Send Reset Instructions\n              </SubmitButton>\n              <Footer\n                handleTypeChange={() =>\n                  this.props.handleTypeChange(ModalType.login)\n                }\n                mode={\"forgot\" as ModalType}\n              />\n            </Form>\n          )\n        }}\n      </Formik>\n    )\n  }\n}\n"],"file":"ForgotPasswordForm.js"}