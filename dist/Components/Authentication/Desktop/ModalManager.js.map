{"version":3,"sources":["../../../../src/Components/Authentication/Desktop/ModalManager.tsx"],"names":["ModalManager","currentType","options","copy","redirectTo","switchedForms","mode","setState","document","body","style","overflowY","props","onModalOpen","onModalClose","type","newOptions","state","err","error","ModalType","login","signup","forgot","blurContainerSelector","csrf","submitUrls","handleSubmit","bind","openModal","closeModal","getSubtitle","image","handleTypeChange","onSocialAuthEvent","showRecaptchaDisclaimer","Component"],"mappings":"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","sourcesContent":["import { FormikProps } from \"formik\"\nimport React, { Component } from \"react\"\nimport { TrackingProp } from \"react-tracking\"\n\nimport { DesktopModal } from \"Components/Authentication/Desktop/Components/DesktopModal\"\nimport { FormSwitcher } from \"Components/Authentication/FormSwitcher\"\nimport { handleSubmit as defaultHandleSubmit } from \"Components/Authentication/helpers\"\nimport {\n  InputValues,\n  ModalOptions,\n  ModalType,\n  SubmitHandler,\n} from \"Components/Authentication/Types\"\n\nexport interface ModalManagerProps {\n  submitUrls?: { [P in ModalType]: string } & {\n    facebook?: string\n    twitter?: string\n  }\n  csrf?: string\n  redirectTo?: string\n  tracking?: TrackingProp\n  type?: ModalType\n  handleSubmit?: (\n    type: ModalType,\n    options: ModalOptions,\n    values: InputValues,\n    formikBag: FormikProps<InputValues>\n  ) => void\n  blurContainerSelector?: string\n  onSocialAuthEvent?: (options) => void\n  onModalOpen?: () => void\n  onModalClose?: () => void\n  showRecaptchaDisclaimer?: boolean\n  image?: string\n}\n\nexport interface ModalManagerState {\n  currentType?: ModalType\n  options?: ModalOptions\n  error?: string\n  switchedForms: boolean\n}\n\nexport class ModalManager extends Component<\n  ModalManagerProps,\n  ModalManagerState\n> {\n  state: ModalManagerState = {\n    currentType: null,\n    options: {\n      copy: null,\n      redirectTo: \"/\",\n    },\n    switchedForms: false,\n  }\n\n  openModal = (options: ModalOptions) => {\n    const { mode } = options\n\n    this.setState({\n      currentType: mode,\n      options,\n    })\n\n    document.body.style.overflowY = \"hidden\"\n    this.props.onModalOpen && this.props.onModalOpen()\n  }\n\n  closeModal = () => {\n    this.setState({\n      currentType: null,\n      options: {},\n    })\n    document.body.style.overflowY = \"auto\"\n    this.props.onModalClose && this.props.onModalClose()\n  }\n\n  handleTypeChange = type => {\n    const newOptions = {\n      ...this.state.options,\n      mode: type,\n    }\n\n    this.setState({\n      currentType: type,\n      options: newOptions,\n      switchedForms: true,\n    })\n  }\n\n  setError = err => this.setState({ error: err })\n\n  getSubtitle = () => {\n    const { options, switchedForms, currentType } = this.state\n\n    if (switchedForms) {\n      switch (currentType) {\n        case ModalType.login:\n          return \"Log in\"\n        case ModalType.signup:\n          return \"Sign up\"\n        case ModalType.forgot:\n          return \"Forgot Password\"\n        default:\n          return \"The art world online\"\n      }\n    } else {\n      return options.copy || \"The art world online\"\n    }\n  }\n\n  render() {\n    const { blurContainerSelector, csrf, submitUrls, redirectTo } = this.props\n    const { currentType, error, options } = this.state\n\n    const handleSubmit: SubmitHandler = !!this.props.handleSubmit\n      ? this.props.handleSubmit.bind(this, currentType, options)\n      : defaultHandleSubmit(submitUrls[currentType], csrf, redirectTo)\n\n    return (\n      <DesktopModal\n        blurContainerSelector={blurContainerSelector}\n        show={!!currentType}\n        onTypeChange={this.openModal}\n        onClose={this.closeModal}\n        subtitle={this.getSubtitle()}\n        type={currentType}\n        image={options.image}\n      >\n        <FormSwitcher\n          type={currentType}\n          error={error}\n          handleSubmit={handleSubmit}\n          submitUrls={submitUrls}\n          options={options}\n          handleTypeChange={this.handleTypeChange}\n          onSocialAuthEvent={this.props.onSocialAuthEvent}\n          showRecaptchaDisclaimer={this.props.showRecaptchaDisclaimer}\n        />\n      </DesktopModal>\n    )\n  }\n}\n"],"file":"ModalManager.js"}