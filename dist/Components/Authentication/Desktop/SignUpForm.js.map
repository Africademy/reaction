{"version":3,"sources":["../../../../src/Components/Authentication/Desktop/SignUpForm.tsx"],"names":["SignUpForm","error","props","values","formikBag","recaptcha_token","valuesWithToken","handleSubmit","onSubmit","SignUpValidator","errors","touched","formikHandleChange","handleChange","handleBlur","isSubmitting","status","setStatus","setTouched","e","setState","email","password","name","accepted_terms_of_service","success","handleTypeChange","ModalType","login","onFacebookLogin","showRecaptchaDisclaimer","Component"],"mappings":"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","sourcesContent":["import {\n  Error,\n  Footer,\n  FormContainer as Form,\n  SubmitButton,\n  TermsOfServiceCheckbox,\n} from \"Components/Authentication/commonElements\"\nimport {\n  FormProps,\n  InputValues,\n  ModalType,\n} from \"Components/Authentication/Types\"\nimport { SignUpValidator } from \"Components/Authentication/Validators\"\nimport PasswordInput from \"Components/PasswordInput\"\nimport QuickInput from \"Components/QuickInput\"\nimport { Formik, FormikProps } from \"formik\"\nimport React, { Component } from \"react\"\nimport { repcaptcha } from \"Utils/repcaptcha\"\n\nexport interface SignUpFormState {\n  error?: string\n}\n\nexport class SignUpForm extends Component<FormProps, SignUpFormState> {\n  state = {\n    error: this.props.error,\n  }\n\n  onSubmit = (values: InputValues, formikBag: FormikProps<InputValues>) => {\n    repcaptcha(\"signup_submit\", recaptcha_token => {\n      const valuesWithToken = {\n        ...values,\n        recaptcha_token,\n      }\n      this.props.handleSubmit(valuesWithToken, formikBag)\n    })\n  }\n\n  render() {\n    return (\n      <Formik\n        initialValues={this.props.values}\n        onSubmit={this.onSubmit}\n        validationSchema={SignUpValidator}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange: formikHandleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          status,\n          setStatus,\n          setTouched,\n        }: FormikProps<InputValues>) => {\n          const handleChange = e => {\n            setStatus(null)\n            this.setState({ error: null })\n            formikHandleChange(e)\n          }\n\n          return (\n            <Form onSubmit={handleSubmit}>\n              <QuickInput\n                block\n                error={touched.email && errors.email}\n                placeholder=\"Enter your email address\"\n                name=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                autoFocus\n              />\n              <PasswordInput\n                block\n                error={touched.password && errors.password}\n                placeholder=\"Enter a password\"\n                name=\"password\"\n                label=\"Password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                showPasswordMessage\n              />\n              <QuickInput\n                block\n                error={touched.name && errors.name}\n                placeholder=\"Enter your full name\"\n                name=\"name\"\n                label=\"Name\"\n                type=\"text\"\n                value={values.name}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <TermsOfServiceCheckbox\n                error={\n                  touched.accepted_terms_of_service &&\n                  errors.accepted_terms_of_service\n                }\n                checked={values.accepted_terms_of_service}\n                value={values.accepted_terms_of_service}\n                type=\"checkbox\"\n                name=\"accepted_terms_of_service\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {status && !status.success && <Error show>{status.error}</Error>}\n              <SubmitButton loading={isSubmitting}>Sign up</SubmitButton>\n              <Footer\n                handleTypeChange={() =>\n                  this.props.handleTypeChange(ModalType.login)\n                }\n                onFacebookLogin={e => {\n                  if (!values.accepted_terms_of_service) {\n                    setTouched({\n                      accepted_terms_of_service: true,\n                    })\n                  } else {\n                    this.props.onFacebookLogin(e)\n                  }\n                }}\n                inline\n                showRecaptchaDisclaimer={this.props.showRecaptchaDisclaimer}\n              />\n            </Form>\n          )\n        }}\n      </Formik>\n    )\n  }\n}\n"],"file":"SignUpForm.js"}