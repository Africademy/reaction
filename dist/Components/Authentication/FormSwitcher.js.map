{"version":3,"sources":["../../../src/Components/Authentication/FormSwitcher.tsx"],"names":["FormSwitcher","dispatch","data","Events","postEvent","props","newType","isMobile","isStatic","handleTypeChange","options","window","location","assign","qs","stringify","setState","type","state","contextModule","copy","destination","redirectTo","intent","trigger","triggerSeconds","tracking","event","Object","action","context_module","modal_copy","trigger_seconds","auth_redirect","onboarding","trackEvent","nextProps","error","title","showRecaptchaDisclaimer","queryData","accepted_terms_of_service","agreed_to_receive_emails","signupReferer","authQueryData","Form","ModalType","login","MobileLoginForm","LoginForm","signup","MobileSignUpForm","SignUpForm","forgot","MobileForgotPasswordForm","ForgotPasswordForm","handleSubmit","onBackButtonClicked","values","defaultValues","email","password","name","onSocialAuthEvent","service","href","submitUrls","facebook","React","Component"],"mappings":"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","sourcesContent":["import { Theme } from \"@artsy/palette\"\nimport qs from \"querystring\"\nimport React from \"react\"\nimport track, { TrackingProp } from \"react-tracking\"\nimport Events from \"Utils/Events\"\n\nimport { SystemContextProvider } from \"Artsy\"\nimport { ForgotPasswordForm } from \"Components/Authentication/Desktop/ForgotPasswordForm\"\nimport { LoginForm } from \"Components/Authentication/Desktop/LoginForm\"\nimport { SignUpForm } from \"Components/Authentication/Desktop/SignUpForm\"\nimport { MobileForgotPasswordForm } from \"Components/Authentication/Mobile/ForgotPasswordForm\"\nimport { MobileLoginForm } from \"Components/Authentication/Mobile/LoginForm\"\nimport { MobileSignUpForm } from \"Components/Authentication/Mobile/SignUpForm\"\nimport {\n  FormComponentType,\n  InputValues,\n  ModalOptions,\n  ModalType,\n  SubmitHandler,\n} from \"./Types\"\n\nexport interface FormSwitcherProps {\n  error?: string\n  handleSubmit: SubmitHandler\n  handleTypeChange?: (e: string) => void\n  isMobile?: boolean\n  isStatic?: boolean\n  onFacebookLogin?: (e: Event) => void\n  onTwitterLogin?: (e: Event) => void\n  options: ModalOptions\n  title?: string\n  showRecaptchaDisclaimer?: boolean\n  submitUrls?: { [P in ModalType]: string } & {\n    facebook?: string\n    twitter?: string\n  }\n  tracking?: TrackingProp\n  type: ModalType\n  values?: InputValues\n  onSocialAuthEvent?: (options) => void\n  onBackButtonClicked?: (e: Event) => void\n}\n\nexport interface State {\n  type?: ModalType\n}\n\n@track({}, { dispatch: data => Events.postEvent(data) })\nexport class FormSwitcher extends React.Component<FormSwitcherProps, State> {\n  static defaultProps: Partial<FormSwitcherProps> = {\n    values: {},\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      type: this.props.type,\n    }\n  }\n\n  componentDidMount() {\n    const {\n      options: {\n        contextModule,\n        copy,\n        destination,\n        redirectTo,\n        intent,\n        trigger,\n        triggerSeconds,\n      },\n      type,\n      tracking,\n    } = this.props\n\n    // Analytics\n    const event = Object.assign(\n      {\n        action: \"Auth impression\",\n        type,\n        context_module: contextModule,\n        modal_copy: copy,\n        trigger: trigger || \"click\",\n        trigger_seconds: triggerSeconds,\n        intent,\n        auth_redirect: redirectTo || destination,\n      },\n      type === \"signup\"\n        ? {\n            onboarding: !redirectTo,\n          }\n        : null\n    )\n    if (tracking) {\n      tracking.trackEvent(event)\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.type !== nextProps.type && nextProps.type) {\n      this.setState({\n        type: nextProps.type,\n      })\n    }\n  }\n\n  handleTypeChange = (newType: ModalType) => {\n    const { isMobile, isStatic, handleTypeChange, options } = this.props\n\n    if (isMobile || isStatic) {\n      if (typeof window !== \"undefined\") {\n        window.location.assign(`/${newType}?${qs.stringify(options)}`)\n      }\n    } else {\n      this.setState({ type: newType })\n      if (handleTypeChange) {\n        handleTypeChange(newType)\n      }\n    }\n  }\n\n  render() {\n    const {\n      error,\n      isMobile,\n      title,\n      options,\n      showRecaptchaDisclaimer,\n    } = this.props\n\n    const queryData = Object.assign(\n      {},\n      options,\n      {\n        accepted_terms_of_service: true,\n        agreed_to_receive_emails: true,\n        \"signup-referer\": options.signupReferer,\n      },\n      options.redirectTo\n        ? {\n            \"redirect-to\": options.redirectTo,\n          }\n        : null,\n      options.intent\n        ? {\n            \"signup-intent\": options.intent,\n          }\n        : null\n    )\n\n    const authQueryData = qs.stringify(queryData)\n\n    let Form: FormComponentType\n    switch (this.state.type) {\n      case ModalType.login:\n        Form = isMobile ? MobileLoginForm : LoginForm\n        break\n      case ModalType.signup:\n        Form = isMobile ? MobileSignUpForm : SignUpForm\n        break\n      case ModalType.forgot:\n        Form = isMobile ? MobileForgotPasswordForm : ForgotPasswordForm\n        break\n      default:\n        return null\n    }\n\n    const { handleSubmit, onBackButtonClicked, values } = this.props\n    const defaultValues = {\n      email: values.email || \"\",\n      password: values.password || \"\",\n      name: values.name || \"\",\n      accepted_terms_of_service: values.accepted_terms_of_service || false,\n    }\n\n    return (\n      <SystemContextProvider>\n        <Theme>\n          <Form\n            title={title}\n            contextModule={options.contextModule}\n            error={error}\n            values={defaultValues}\n            handleTypeChange={this.handleTypeChange}\n            handleSubmit={handleSubmit}\n            intent={options.intent}\n            onBackButtonClicked={onBackButtonClicked}\n            onFacebookLogin={() => {\n              if (this.props.onSocialAuthEvent) {\n                this.props.onSocialAuthEvent({\n                  ...options,\n                  service: \"facebook\",\n                })\n              }\n\n              if (typeof window !== \"undefined\") {\n                window.location.href =\n                  this.props.submitUrls.facebook +\n                  `?${authQueryData}` +\n                  \"&service=facebook\"\n              }\n            }}\n            showRecaptchaDisclaimer={showRecaptchaDisclaimer}\n          />\n        </Theme>\n      </SystemContextProvider>\n    )\n  }\n}\n"],"file":"FormSwitcher.js"}