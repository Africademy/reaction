{"version":3,"sources":["../../../../src/Components/Authentication/Mobile/LoginForm.tsx"],"names":["MobileLoginFormWithSystemContext","status","error","props","success","values","formikBag","handleSubmit","steps","MobileLoginValidator","email","actions","relayEnvironment","shouldExist","wizard","form","errors","touched","handleChange","handleBlur","setTouched","password","location","href","onSubmit","context","isSubmitting","currentStep","isLastStep","progressPercentage","e","onBackButtonClicked","currentStepIndex","previous","showError","handleTypeChange","onFacebookLogin","Component","MobileLoginForm"],"mappings":"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","sourcesContent":["import { Flex } from \"@artsy/palette\"\nimport { withSystemContext } from \"Artsy\"\nimport { checkEmail } from \"Components/Authentication/helpers\"\nimport Icon from \"Components/Icon\"\nimport PasswordInput from \"Components/PasswordInput\"\nimport { ProgressIndicator } from \"Components/ProgressIndicator\"\nimport QuickInput from \"Components/QuickInput\"\nimport { Step, Wizard } from \"Components/Wizard\"\nimport { FormikProps } from \"formik\"\nimport React, { Component, Fragment } from \"react\"\nimport { Environment } from \"relay-runtime\"\nimport { repcaptcha } from \"Utils/repcaptcha\"\nimport {\n  BackButton,\n  Error,\n  Footer,\n  ForgotPassword,\n  MobileContainer,\n  MobileHeader,\n  MobileInnerWrapper,\n  SubmitButton,\n} from \"../commonElements\"\nimport { FormProps, InputValues, ModalType } from \"../Types\"\nimport { MobileLoginValidator } from \"../Validators\"\n\nclass MobileLoginFormWithSystemContext extends Component<\n  FormProps & {\n    relayEnvironment: Environment\n  }\n> {\n  showError = status => {\n    const { error } = this.props\n    if (error) {\n      return <Error show>{error}</Error>\n    }\n\n    if (status && !status.success) {\n      return <Error show>{status.error}</Error>\n    }\n\n    return null\n  }\n\n  onSubmit = (values: InputValues, formikBag: FormikProps<InputValues>) => {\n    repcaptcha(\"login_submit\")\n    this.props.handleSubmit(values, formikBag)\n  }\n\n  render() {\n    const steps = [\n      <Step\n        validationSchema={MobileLoginValidator.email}\n        onSubmit={(values, actions) =>\n          checkEmail({\n            relayEnvironment: this.props.relayEnvironment,\n            values,\n            actions,\n            shouldExist: true,\n          })\n        }\n      >\n        {({\n          wizard,\n          form: {\n            errors,\n            touched,\n            values,\n            handleChange,\n            handleBlur,\n            setTouched,\n          },\n        }) => (\n          <QuickInput\n            block\n            error={errors.email}\n            placeholder=\"Enter your email address\"\n            name=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            setTouched={setTouched}\n            touchedOnChange={false}\n            autoFocus\n          />\n        )}\n      </Step>,\n      <Step validationSchema={MobileLoginValidator.password}>\n        {({\n          wizard,\n          form: {\n            errors,\n            touched,\n            values,\n            handleChange,\n            handleBlur,\n            setTouched,\n          },\n        }) => (\n          <Fragment>\n            <PasswordInput\n              block\n              error={errors.password}\n              name=\"password\"\n              label=\"Password\"\n              placeholder=\"Password\"\n              value={values.password}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              setTouched={setTouched}\n              touchedOnChange={false}\n            />\n            <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n              <ForgotPassword onClick={() => (location.href = \"/forgot\")} />\n            </Flex>\n          </Fragment>\n        )}\n      </Step>,\n    ]\n    return (\n      <Wizard steps={steps} onComplete={this.onSubmit}>\n        {context => {\n          const {\n            wizard,\n            form: { handleSubmit, values, status, isSubmitting },\n          } = context\n          const { currentStep, isLastStep } = wizard\n\n          return (\n            <MobileContainer>\n              <ProgressIndicator percentComplete={wizard.progressPercentage} />\n              <MobileInnerWrapper>\n                <BackButton\n                  onClick={e =>\n                    this.props.onBackButtonClicked &&\n                    wizard.currentStepIndex === 0\n                      ? this.props.onBackButtonClicked(e as any)\n                      : wizard.previous(e, values)\n                  }\n                >\n                  <Icon name=\"chevron-left\" color=\"black60\" fontSize=\"16px\" />\n                </BackButton>\n                <MobileHeader>Log in to Artsy</MobileHeader>\n                {currentStep}\n                {this.showError(status)}\n                <SubmitButton\n                  onClick={handleSubmit}\n                  loading={isLastStep && isSubmitting}\n                >\n                  {isLastStep ? \"Log in\" : \"Next\"}\n                </SubmitButton>\n                <Footer\n                  mode={\"login\" as ModalType}\n                  handleTypeChange={this.props.handleTypeChange}\n                  onFacebookLogin={this.props.onFacebookLogin}\n                />\n              </MobileInnerWrapper>\n            </MobileContainer>\n          )\n        }}\n      </Wizard>\n    )\n  }\n}\n\nexport const MobileLoginForm = withSystemContext(\n  MobileLoginFormWithSystemContext\n)\n"],"file":"LoginForm.js"}