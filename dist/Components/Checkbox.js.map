{"version":3,"sources":["../../src/Components/Checkbox.tsx"],"names":["Checkbox","props","event","onChange","setState","checked","currentTarget","state","children","className","disabled","error","ref","remainderProps","fill","Component","CheckmarkContainer","styled","div","PositionedCheckmark","CheckIcon","CheckboxInput","input","colors","white","redMedium","grayRegular","black","gray","Label","label","attrs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;;;;IAIaA,Q;;;;;AACX,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,+DAQR,UAAAC,KAAK,EAAI;AAClB,UAAI,MAAKD,KAAL,CAAWE,QAAf,EAAyB;AACvB,cAAKF,KAAL,CAAWE,QAAX,CAAoBD,KAApB;AACD;;AAED,YAAKE,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAEH,KAAK,CAACI,aAAN,CAAoBD;AADjB,OAAd;AAGD,KAhBkB;;AAGjB,UAAKE,KAAL,GAAa;AACXF,MAAAA,OAAO,EAAEJ,KAAK,CAACI,OAAN,IAAiB;AADf,KAAb;AAHiB;AAMlB;;;;6BAYQ;AAAA,wBAQH,KAAKJ,KARF;AAAA,UAELO,QAFK,eAELA,QAFK;AAAA,UAGLC,SAHK,eAGLA,SAHK;AAAA,UAILC,QAJK,eAILA,QAJK;AAAA,UAKLC,KALK,eAKLA,KALK;AAAA,UAMLC,GANK,eAMLA,GANK;AAAA,UAOFC,cAPE;;AAAA,UASCR,OATD,GASa,KAAKE,KATlB,CASCF,OATD;AAWP,UAAMS,IAAI,GAAGJ,QAAQ,IAAIL,OAAZ,GAAsB,SAAtB,GAAkC,UAA/C;AAEA,aACE,6BAAC,KAAD;AAAO,QAAA,SAAS,EAAEI,SAAlB;AAA6B,QAAA,KAAK,EAAEE;AAApC,SACE,6BAAC,kBAAD,QACE,6BAAC,aAAD,eACME,cADN;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,QAAQ,EAAE,KAAKV,QAHjB;AAIE,QAAA,OAAO,EAAEE,OAJX;AAKE,QAAA,QAAQ,EAAEK,QALZ;AAME,QAAA,KAAK,EAAEC;AANT,SADF,EAUG,CAAC,CAACD,QAAD,IAAaL,OAAd,KAA0B,6BAAC,mBAAD;AAAqB,QAAA,IAAI,EAAES;AAA3B,QAV7B,CADF,EAcGN,QAdH,CADF;AAkBD;;;;EAlD2BO,gB;;;;AAqD9B,IAAMC,kBAAkB,GAAGC,0BAAOC,GAAV;AAAA;AAAA;AAAA,qIAAxB;;AAWA,IAAMC,mBAAmB,GAAG,+BAAOC,kBAAP,CAAH;AAAA;AAAA;AAAA,kBAAzB;;AAIA,IAAMC,aAAa,GAAGJ,0BAAOK,KAAV;AAAA;AAAA;AAAA,uWAkBKC,gBAAOC,KAlBZ,EAoBX;AAAA,MAAGb,KAAH,QAAGA,KAAH;AAAA,SACAA,KAAK,GAAGY,gBAAOE,SAAV,GAAsBF,gBAAOG,WADlC;AAAA,CApBW,EAyBKH,gBAAOI,KAzBZ,EA0BCJ,gBAAOI,KA1BR,EA8BKJ,gBAAOK,IA9BZ,EA+BCL,gBAAOG,WA/BR,CAAnB;;AAmCA,IAAMG,KAAK,GAAGZ,0BAAOa,KAAP,CAAaC,KAAb,CAAkC,EAAlC,CAAH;AAAA;AAAA;AAAA,gOACP,qBAAS,KAAT,CADO,EAOP;AAAA,MAAGpB,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,qBAAcY,gBAAOE,SAArB,CAApB;AAAA,CAPO,EAULJ,aAVK,EAYiBE,gBAAOG,WAZxB,EAaaH,gBAAOG,WAbpB,EAiBiBH,gBAAOI,KAjBxB,EAkBaJ,gBAAOI,KAlBpB,CAAX;;eAwBe3B,Q","sourcesContent":["import { CheckIcon } from \"@artsy/palette\"\nimport { garamond } from \"Assets/Fonts\"\nimport React, { Component } from \"react\"\nimport styled from \"styled-components\"\nimport { ExtractProps } from \"Utils/ExtractProps\"\nimport colors from \"../Assets/Colors\"\n\nexport interface CheckboxState {\n  checked: boolean\n}\n\nexport type CheckboxProps = ExtractProps<typeof CheckboxInput>\n\n/**\n * @deprecated in favor of our Design System Checkbox component in @artsy/palette\n * https://palette.artsy.net/elements/inputs/checkbox\n */\nexport class Checkbox extends Component<CheckboxProps, CheckboxState> {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      checked: props.checked || false,\n    }\n  }\n\n  onChange = event => {\n    if (this.props.onChange) {\n      this.props.onChange(event)\n    }\n\n    this.setState({\n      checked: event.currentTarget.checked,\n    })\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      disabled,\n      error,\n      ref,\n      ...remainderProps\n    } = this.props\n    const { checked } = this.state\n\n    const fill = disabled && checked ? \"black30\" : \"white100\"\n\n    return (\n      <Label className={className} error={error}>\n        <CheckmarkContainer>\n          <CheckboxInput\n            {...remainderProps}\n            type=\"checkbox\"\n            onChange={this.onChange}\n            checked={checked}\n            disabled={disabled}\n            error={error}\n          />\n\n          {(!disabled || checked) && <PositionedCheckmark fill={fill} />}\n        </CheckmarkContainer>\n\n        {children}\n      </Label>\n    )\n  }\n}\n\nconst CheckmarkContainer = styled.div`\n  width: 20px;\n  height: 20px;\n  top: -1px;\n  margin-right: 0.5rem;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PositionedCheckmark = styled(CheckIcon)`\n  z-index: 1;\n`\n\nconst CheckboxInput = styled.input`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  margin: 0;\n  left: 0;\n  border: none;\n\n  /* The after represents the square box */\n  &::after {\n    transition: all 0.25s;\n    content: \"\";\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    left: 0;\n    top: 0;\n    box-sizing: border-box;\n    background-color: ${colors.white};\n    border: 2px solid\n      ${({ error }: { error?: boolean }) =>\n        error ? colors.redMedium : colors.grayRegular};\n  }\n\n  &:checked::after {\n    background-color: ${colors.black};\n    border-color: ${colors.black};\n  }\n\n  &:disabled::after {\n    background-color: ${colors.gray};\n    border-color: ${colors.grayRegular};\n  }\n`\n\nconst Label = styled.label.attrs<CheckboxProps>({})`\n  ${garamond(\"s16\")};\n  position: relative;\n  line-height: 135%;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  ${({ error }) => error && `color: ${colors.redMedium}`};\n\n  &:hover {\n    ${CheckboxInput} {\n      &::after {\n        background-color: ${colors.grayRegular};\n        border-color: ${colors.grayRegular};\n      }\n\n      &:checked::after {\n        background-color: ${colors.black};\n        border-color: ${colors.black};\n      }\n    }\n  }\n`\n\nexport default Checkbox\n"],"file":"Checkbox.js"}