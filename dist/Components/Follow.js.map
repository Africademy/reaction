{"version":3,"sources":["../../src/Components/Follow.tsx"],"names":["SIZE","StyledFollowButton","styled","div","colors","purpleRegular","redBold","FollowButton","props","artist","user","relay","id","environment","mutation","variables","input","artist_id","unfollow","is_followed","optimisticResponse","followArtist","__id","window","location","href","style","iconName","className","handleFollow","verticalAlign","color","margin","React","Component","Artsy","withSystemContext"],"mappings":";;;;;;;;;;;;;;;;;AAUA;;AACA;;AACA;;AAMA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,EAAb;;AAUO,IAAMC,kBAAkB,GAAGC,0BAAOC,GAAV;AAAA;AAAA;AAAA,kQAalBC,gBAAOC,aAbW,EAsBhBD,gBAAOE,OAtBS,CAAxB;;;;IA+BMC,Y;;;;;;;;;;;;;mCACI;AAAA,wBACmB,KAAKC,KADxB;AAAA,UACLC,MADK,eACLA,MADK;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,KADT,eACSA,KADT;;AAEb,UAAID,IAAI,IAAIA,IAAI,CAACE,EAAjB,EAAqB;AACnB,wCAAqCD,KAAK,CAACE,WAA3C,EAAwD;AACtDC,UAAAA,QAAQ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,YAD8C;AAWtDC,UAAAA,SAAS,EAAE;AACTC,YAAAA,KAAK,EAAE;AACLC,cAAAA,SAAS,EAAER,MAAM,CAACG,EADb;AAELM,cAAAA,QAAQ,EAAET,MAAM,CAACU;AAFZ;AADE,WAX2C;AAiBtD;AACAC,UAAAA,kBAAkB,EAAE;AAClBC,YAAAA,YAAY,EAAE;AACZZ,cAAAA,MAAM,EAAE;AACNa,gBAAAA,IAAI,EAAEb,MAAM,CAACa,IADP;AAENH,gBAAAA,WAAW,EAAE,CAACV,MAAM,CAACU;AAFf;AADI;AADI;AAlBkC,SAAxD;AA2BD,OA5BD,MA4BO;AACLI,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACD;AACF;;;6BAEQ;AAAA;;AAAA,yBACmB,KAAKjB,KADxB;AAAA,UACCkB,KADD,gBACCA,KADD;AAAA,UACQjB,MADR,gBACQA,MADR;AAEP,UAAMkB,QAAQ,GAAGlB,MAAM,CAACU,WAAP,GACb,4BADa,GAEb,eAFJ;AAIA,aACE,6BAAC,kBAAD;AACE,QAAA,SAAS,EAAE,KAAKX,KAAL,CAAWoB,SADxB;AAEE,QAAA,KAAK,EAAEF,KAFT;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACG,YAAL,EAAN;AAAA,SAHX;AAIE,yBAAepB,MAAM,CAACU;AAJxB,SAME,6BAAC,aAAD;AACE,QAAA,IAAI,EAAEQ,QADR;AAEE,QAAA,MAAM,EAAE3B,IAFV;AAGE,QAAA,KAAK,EAAE;AAAE8B,UAAAA,aAAa,EAAE,QAAjB;AAA2BC,UAAAA,KAAK,EAAE,SAAlC;AAA6CC,UAAAA,MAAM,EAAE;AAArD;AAHT,QANF,CADF;AAcD;;;;EAxD+BC,eAAMC,S;;;;eA2DzB,yCAAwBC,KAAK,CAACC,iBAAN,CAAwB7B,YAAxB,CAAxB,EAA+D;AAC5EE,EAAAA,MAAM;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADsE,CAA/D,C","sourcesContent":["/**\n * FIXME: This file also used to handle ‘profile’ follows, as implemented in https://github.com/artsy/reaction/pull/175,\n * but this was reverted because the metaphysics PR never landed https://github.com/artsy/metaphysics/pull/662.\n *\n * When this is revisited, rather than having this file do both, it’s probably better to have an abstract implementation\n * and two specialised components that use composition to achieve the desired functionality.\n */\n\nimport { Follow_artist } from \"__generated__/Follow_artist.graphql\"\nimport { FollowArtistMutation } from \"__generated__/FollowArtistMutation.graphql\"\nimport * as Artsy from \"Artsy\"\nimport React from \"react\"\nimport {\n  commitMutation,\n  createFragmentContainer,\n  graphql,\n  RelayProp,\n} from \"react-relay\"\nimport styled from \"styled-components\"\nimport colors from \"../Assets/Colors\"\nimport Icon from \"./Icon\"\n\nconst SIZE = 32\n\ninterface Props\n  extends React.HTMLProps<FollowButton>,\n    Artsy.SystemContextProps {\n  style?: any\n  relay: RelayProp\n  artist: Follow_artist\n}\n\nexport const StyledFollowButton = styled.div`\n  display: flex;\n  cursor: pointer;\n  color: black;\n  font-size: 16px;\n  align-items: center;\n  margin-left: 5px;\n\n  &::after {\n    content: \"Follow\";\n  }\n\n  &:hover {\n    color: ${colors.purpleRegular};\n  }\n\n  &[data-followed=\"true\"] {\n    &::after {\n      content: \"Following\";\n    }\n\n    &:hover {\n      color: ${colors.redBold};\n\n      &::after {\n        content: \"Unfollow\";\n      }\n    }\n  }\n`\n\nexport class FollowButton extends React.Component<Props, null> {\n  handleFollow() {\n    const { artist, user, relay } = this.props\n    if (user && user.id) {\n      commitMutation<FollowArtistMutation>(relay.environment, {\n        mutation: graphql`\n          mutation FollowArtistMutation($input: FollowArtistInput!) {\n            followArtist(input: $input) {\n              artist {\n                __id\n                is_followed\n              }\n            }\n          }\n        `,\n        variables: {\n          input: {\n            artist_id: artist.id,\n            unfollow: artist.is_followed,\n          },\n        },\n        // TODO: Relay Modern: This is not working yet\n        optimisticResponse: {\n          followArtist: {\n            artist: {\n              __id: artist.__id,\n              is_followed: !artist.is_followed,\n            },\n          },\n        },\n      })\n    } else {\n      window.location.href = \"/login\"\n    }\n  }\n\n  render() {\n    const { style, artist } = this.props\n    const iconName = artist.is_followed\n      ? \"follow-circle.is-following\"\n      : \"follow-circle\"\n\n    return (\n      <StyledFollowButton\n        className={this.props.className}\n        style={style}\n        onClick={() => this.handleFollow()}\n        data-followed={artist.is_followed}\n      >\n        <Icon\n          name={iconName}\n          height={SIZE}\n          style={{ verticalAlign: \"middle\", color: \"inherit\", margin: 0 }}\n        />\n      </StyledFollowButton>\n    )\n  }\n}\n\nexport default createFragmentContainer(Artsy.withSystemContext(FollowButton), {\n  artist: graphql`\n    fragment Follow_artist on Artist {\n      __id\n      id\n      is_followed\n    }\n  `,\n})\n"],"file":"Follow.js"}