{"version":3,"sources":["../../../src/Components/FollowButton/FollowArtistButton.tsx"],"names":["SuggestionsPopoverContainer","Box","FollowArtistButton","openSuggestions","props","tracking","is_followed","artist","trackingData","action","trackEvent","e","preventDefault","user","onOpenAuthModal","id","followArtistForUser","config","contextModule","intent","copy","relay","triggerSuggestions","newFollowCount","counts","follows","environment","mutation","variables","input","artist_id","unfollow","optimisticResponse","followArtist","__id","updater","store","data","artistProxy","get","getLinkedRecord","setValue","trackFollow","setState","useDeprecatedButtonStyle","buttonProps","render","state","Button","FollowButtonDeprecated","FollowButton","content","handleFollow","closePopover","React","Component","FollowArtistButtonFragmentContainer","Artsy","withSystemContext"],"mappings":"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","sourcesContent":["import { Box, ButtonProps } from \"@artsy/palette\"\nimport { FollowArtistButtonMutation } from \"__generated__/FollowArtistButtonMutation.graphql\"\nimport * as Artsy from \"Artsy\"\nimport { FollowArtistPopoverFragmentContainer as SuggestionsPopover } from \"Components/v2/FollowArtistPopover\"\nimport { extend } from \"lodash\"\nimport React from \"react\"\nimport track, { TrackingProp } from \"react-tracking\"\nimport { RecordSourceSelectorProxy, SelectorData } from \"relay-runtime\"\nimport styled from \"styled-components\"\nimport { FollowArtistButton_artist } from \"../../__generated__/FollowArtistButton_artist.graphql\"\nimport { FollowButton } from \"./Button\"\nimport { FollowButtonDeprecated } from \"./ButtonDeprecated\"\nimport { FollowTrackingData } from \"./Typings\"\n\nimport {\n  commitMutation,\n  createFragmentContainer,\n  graphql,\n  RelayProp,\n} from \"react-relay\"\n\ninterface Props\n  extends React.HTMLProps<FollowArtistButton>,\n    Artsy.SystemContextProps {\n  relay?: RelayProp\n  artist?: FollowArtistButton_artist\n  tracking?: TrackingProp\n  trackingData?: FollowTrackingData\n  onOpenAuthModal?: (type: \"register\" | \"login\", config?: object) => void\n\n  /**\n   * FIXME: Default is true due to legacy code. If false, use new @artsy/palette\n   * design system <Button /> style.\n   */\n  useDeprecatedButtonStyle?: boolean\n  /**\n   * FIXME: If useDeprecatedButtonStyle is false pass <Button> style props along\n   * to new design-system buttons.\n   */\n  buttonProps?: Partial<ButtonProps>\n  /**\n   * Custom renderer for alternative button displays\n   */\n  render?: (artist: FollowArtistButton_artist) => JSX.Element\n  triggerSuggestions?: boolean\n}\n\ninterface State {\n  openSuggestions: boolean\n}\n\nconst SuggestionsPopoverContainer = styled(Box)`\n  position: absolute;\n  z-index: 1;\n`\n\n@track()\nexport class FollowArtistButton extends React.Component<Props, State> {\n  static defaultProps = {\n    useDeprecatedButtonStyle: true,\n    buttonProps: {},\n    triggerSuggestions: false,\n  }\n\n  state = { openSuggestions: false }\n\n  trackFollow = () => {\n    const {\n      tracking,\n      artist: { is_followed },\n    } = this.props\n    const trackingData: FollowTrackingData = this.props.trackingData || {}\n    const action = is_followed ? \"Unfollowed Artist\" : \"Followed Artist\"\n\n    tracking.trackEvent(extend({ action }, trackingData))\n  }\n\n  handleFollow = e => {\n    e.preventDefault() // If this button is part of a link, we _probably_ dont want to actually follow the link.\n    const { user, onOpenAuthModal } = this.props\n\n    if (user && user.id) {\n      this.followArtistForUser(user)\n    } else if (onOpenAuthModal) {\n      const config = {\n        contextModule: \"intext tooltip\",\n        intent: \"follow artist\",\n        copy: \"Sign up to follow artists\",\n      }\n      onOpenAuthModal(\"register\", config)\n    }\n  }\n\n  followArtistForUser = user => {\n    const { artist, relay, triggerSuggestions } = this.props\n\n    const newFollowCount = artist.is_followed\n      ? artist.counts.follows - 1\n      : artist.counts.follows + 1\n\n    commitMutation<FollowArtistButtonMutation>(relay.environment, {\n      mutation: graphql`\n        mutation FollowArtistButtonMutation($input: FollowArtistInput!) {\n          followArtist(input: $input) {\n            artist {\n              __id\n              is_followed\n              counts {\n                follows\n              }\n            }\n          }\n        }\n      `,\n      variables: {\n        input: {\n          artist_id: artist.id,\n          unfollow: artist.is_followed,\n        },\n      },\n      optimisticResponse: {\n        followArtist: {\n          artist: {\n            __id: artist.__id,\n            is_followed: !artist.is_followed,\n            counts: { follows: newFollowCount },\n          },\n        },\n      },\n      updater: (store: RecordSourceSelectorProxy, data: SelectorData) => {\n        const artistProxy = store.get(data.followArtist.artist.__id)\n\n        artistProxy\n          .getLinkedRecord(\"counts\")\n          .setValue(newFollowCount, \"follows\")\n      },\n    })\n    this.trackFollow()\n    if (triggerSuggestions && !artist.is_followed) {\n      this.setState({ openSuggestions: true })\n    }\n  }\n\n  closePopover() {\n    this.setState({ openSuggestions: false })\n  }\n\n  render() {\n    const {\n      artist,\n      useDeprecatedButtonStyle,\n      buttonProps,\n      render,\n      user,\n    } = this.props\n    const { openSuggestions } = this.state\n    // FIXME: Unify design language\n    const Button = useDeprecatedButtonStyle\n      ? FollowButtonDeprecated\n      : FollowButton\n\n    // Custom button renderer\n    const content = render ? (\n      <span onClick={this.handleFollow}> {render(artist)}</span>\n    ) : (\n      <Button\n        isFollowed={artist && artist.is_followed}\n        handleFollow={this.handleFollow}\n        buttonProps={buttonProps}\n      />\n    )\n\n    return (\n      <>\n        {content}\n        {openSuggestions && (\n          <SuggestionsPopoverContainer>\n            <SuggestionsPopover\n              user={user}\n              artist={artist}\n              onClose={() => this.closePopover()}\n            />\n          </SuggestionsPopoverContainer>\n        )}\n      </>\n    )\n  }\n}\n\nexport const FollowArtistButtonFragmentContainer = createFragmentContainer(\n  Artsy.withSystemContext(FollowArtistButton),\n  {\n    artist: graphql`\n      fragment FollowArtistButton_artist on Artist\n        @argumentDefinitions(\n          showFollowSuggestions: { type: \"Boolean\", defaultValue: false }\n        ) {\n        __id\n        name\n        id\n        is_followed\n        counts {\n          follows\n        }\n        ...FollowArtistPopover_artist @include(if: $showFollowSuggestions)\n      }\n    `,\n  }\n)\n"],"file":"FollowArtistButton.js"}