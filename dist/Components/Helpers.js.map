{"version":3,"sources":["../../src/Components/Helpers.tsx"],"names":["block","margin","props","css","sizes","theme","flexboxgrid","breakpoints","media","Object","keys","reduce","accumulator","label","pxSize","strings","args","psizes","publishing","pMedia"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;;;AAEA;;;;AAIO,IAAMA,KAAK,GAAG,SAARA,KAAQ,GAAwB;AAAA,MAAvBC,MAAuB,uEAAN,CAAM;AAC3C,SAAO,YAAqB;AAAA,QAApBC,KAAoB,uEAAP,EAAO;;AAC1B,QAAIA,KAAK,CAACF,KAAV,EAAiB;AACf,iBAAOG,qBAAP;AAID;AACF,GAPD;AAQD,CATM;;;AAWP,IAAMC,KAAK,GAAGC,eAAMC,WAAN,CAAkBC,WAAhC;;AAIA;;;AAGO,IAAMC,KAAY,GAAGC,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,MAAnB,CAA0B,UAACC,WAAD,EAAcC,KAAd,EAAwB;AAC5E;AACA;AACA,MAAMC,MAAM,GAAGV,KAAK,CAACS,KAAD,CAApB;;AACAD,EAAAA,WAAW,CAACC,KAAD,CAAX,GAAqB,UAACE,OAAD;AAAA,sCAAaC,IAAb;AAAaA,MAAAA,IAAb;AAAA;;AAAA,eAAsBb,qBAAtB,wCACEW,MADF,EAEfX,qCAAIY,OAAJ,SAAgBC,IAAhB,EAFe;AAAA,GAArB;;AAKA,SAAOJ,WAAP;AACD,CAV2B,EAUzB,EAVyB,CAArB;;AAYP,IAAMK,MAAM,GAAGZ,eAAMa,UAAN,CAAiBX,WAAhC;AAIO,IAAMY,MAAuB,GAAGV,MAAM,CAACC,IAAP,CAAYO,MAAZ,EAAoBN,MAApB,CACrC,UAACC,WAAD,EAAcC,KAAd,EAAwB;AACtB,MAAMC,MAAM,GAAGG,MAAM,CAACJ,KAAD,CAArB;;AACAD,EAAAA,WAAW,CAACC,KAAD,CAAX,GAAqB,UAACE,OAAD;AAAA,uCAAaC,IAAb;AAAaA,MAAAA,IAAb;AAAA;;AAAA,eAAsBb,qBAAtB,wCACEW,MADF,EAEfX,qCAAIY,OAAJ,SAAgBC,IAAhB,EAFe;AAAA,GAArB;;AAKA,SAAOJ,WAAP;AACD,CAToC,EAUrC,EAVqC,CAAhC","sourcesContent":["import { css } from \"styled-components\"\nimport theme from \"../Assets/Theme\"\n\n/**\n * Helper function to display an element as a block that inherits its parents width\n * @param margin value in pixels to remove from width 100%\n */\nexport const block = (margin: number = 0) => {\n  return (props: any = {}) => {\n    if (props.block) {\n      return css`\n        width: 100%;\n        margin: 10px auto;\n      `\n    }\n  }\n}\n\nconst sizes = theme.flexboxgrid.breakpoints\n\ntype Media = { [S in keyof typeof sizes]: typeof css }\n\n/**\n * @deprecated import { media } from `Styleguide/Elements/Grid` instead\n */\nexport const media: Media = Object.keys(sizes).reduce((accumulator, label) => {\n  // using px in breakpoints to maintain uniform units with flexbox-grid\n  // https://zellwk.com/blog/media-query-units/\n  const pxSize = sizes[label]\n  accumulator[label] = (strings, ...args) => css`\n    @media (max-width: ${pxSize}px) {\n      ${css(strings, ...args)};\n    }\n  `\n  return accumulator\n}, {}) as Media\n\nconst psizes = theme.publishing.breakpoints\n\ntype PublishingMedia = { [S in keyof typeof psizes]: typeof css }\n\nexport const pMedia: PublishingMedia = Object.keys(psizes).reduce(\n  (accumulator, label) => {\n    const pxSize = psizes[label]\n    accumulator[label] = (strings, ...args) => css`\n      @media (max-width: ${pxSize}px) {\n        ${css(strings, ...args)};\n      }\n    `\n    return accumulator\n  },\n  {}\n) as PublishingMedia\n"],"file":"Helpers.js"}