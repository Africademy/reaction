{"version":3,"sources":["../../src/Components/MinimalCtaBanner.tsx"],"names":["MinimalCtaBanner","context_module","Schema","ContextModule","action_type","ActionType","AuthImpression","intent","ActionName","ViewEditorial","trigger","Click","action_name","Dismiss","subject","flow","dismissed","setState","ctaBanner","props","show","enter","exit","height","position","backgroundColor","textColor","href","copy","dismissCta","bind","state","React","Component","BannerContainer","styled","div","attrs","Banner","IconContainer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiBaA,gB,WADZ,sBAAM;AAAEC,EAAAA,cAAc,EAAEC,MAAM,CAACC,aAAP,CAAqBH;AAAvC,CAAN,C,UASE,sBAAM;AACLI,EAAAA,WAAW,EAAEF,MAAM,CAACG,UAAP,CAAkBC,cAD1B;AAELC,EAAAA,MAAM,EAAEL,MAAM,CAACM,UAAP,CAAkBC,aAFrB;AAGLC,EAAAA,OAAO,EAAE;AAHJ,CAAN,C,UASA,sBAAM;AACLN,EAAAA,WAAW,EAAEF,MAAM,CAACG,UAAP,CAAkBM,KAD1B;AAELC,EAAAA,WAAW,EAAEV,MAAM,CAACM,UAAP,CAAkBK,OAF1B;AAGLC,EAAAA,OAAO,EAAE,iDAHJ;AAILP,EAAAA,MAAM,EAAEL,MAAM,CAACM,UAAP,CAAkBC,aAJrB;AAKLM,EAAAA,IAAI,EAAE;AALD,CAAN,C;;;;;;;;;;;;;;;;;;4DAbO;AACNC,MAAAA,SAAS,EAAE;AADL,K;;;;;;;wCASY,CAClB;AACD;;;iCASY;AACX,WAAKC,QAAL,CAAc;AAAED,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD;;;6BAEQ;AACP,UAAME,SAAS,GACb,6BAAC,wBAAD;AACE,QAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC,IADjB;AAEE,QAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,IAAI,EAAE;AAAnB,SAFX;AAGE,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI;AAHrB,SAKE,6BAAC,eAAD;AACE,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QADvB;AAEE,QAAA,eAAe,EAAE,KAAKL,KAAL,CAAWM;AAF9B,SAIE,6BAAC,MAAD;AAAQ,QAAA,SAAS,EAAE,KAAKN,KAAL,CAAWO;AAA9B,SACE;AAAG,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWQ;AAApB,SACE,6BAAC,aAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAe,QAAA,MAAM,EAAC,QAAtB;AAA+B,QAAA,EAAE,EAAE;AAAnC,SACE,wCAAI,KAAKR,KAAL,CAAWS,IAAf,CADF,CADF,CADF,EAME,6BAAC,aAAD;AAAe,QAAA,OAAO,EAAE,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,IAArB;AAAxB,SACE,6BAAC,aAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWO,SAArC;AAAgD,QAAA,QAAQ,EAAC;AAAzD,QADF,CANF,CAJF,CALF,CADF;;AAwBA,aAAO,CAAC,KAAKK,KAAL,CAAWf,SAAZ,GAAwBE,SAAxB,GAAoC,yCAA3C;AACD;;;;EAtDmCc,eAAMC,S;;;AAyD5C,IAAMC,eAAe,GAAGC,0BAAOC,GAAP,CAAWC,KAAX,CAAwC,EAAxC,CAAH;AAAA;AAAA;AAAA,qGAGC,UAAAlB,KAAK;AAAA,SAAIA,KAAK,CAACM,eAAN,IAAyB,OAA7B;AAAA,CAHN,EAOjB,UAAAN,KAAK,EAAI;AACT,MAAIA,KAAK,CAACK,QAAN,KAAmB,QAAvB,EAAiC,OAAO,cAAP;AACjC,MAAIL,KAAK,CAACK,QAAN,KAAmB,KAAvB,EAA8B,OAAO,WAAP;AAC/B,CAVkB,CAArB;;AAaA,IAAMc,MAAM,GAAGH,0BAAOC,GAAP,CAAWC,KAAX,CAAwC,EAAxC,CAAH;AAAA;AAAA;AAAA,oJAQC,UAAAlB,KAAK;AAAA,SAAIA,KAAK,CAACO,SAAN,IAAmB,OAAvB;AAAA,CARN,CAAZ;;AAcA,IAAMa,aAAa,GAAGJ,0BAAOC,GAAV;AAAA;AAAA;AAAA,yBAAnB","sourcesContent":["import { Sans } from \"@artsy/palette\"\nimport { track } from \"Artsy/Analytics\"\nimport * as Schema from \"Artsy/Analytics/Schema\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport SlideTransition from \"./Animation/SlideTransition\"\nimport Icon from \"./Icon\"\n\nexport interface MinimalCtaBannerProps extends React.Props<HTMLDivElement> {\n  backgroundColor?: string\n  copy?: string\n  height?: string\n  href?: string\n  position: \"top\" | \"bottom\"\n  textColor?: string\n  show?: boolean\n}\n\nexport interface State {\n  dismissed: boolean\n}\n\n@track({ context_module: Schema.ContextModule.MinimalCtaBanner })\nexport class MinimalCtaBanner extends React.Component<\n  MinimalCtaBannerProps,\n  State\n> {\n  state = {\n    dismissed: false,\n  }\n\n  @track({\n    action_type: Schema.ActionType.AuthImpression,\n    intent: Schema.ActionName.ViewEditorial,\n    trigger: \"click\",\n  })\n  componentDidMount() {\n    // no op\n  }\n\n  @track({\n    action_type: Schema.ActionType.Click,\n    action_name: Schema.ActionName.Dismiss,\n    subject: \"dismiss auth banner for editorial cta on mobile\",\n    intent: Schema.ActionName.ViewEditorial,\n    flow: \"authentication\",\n  })\n  dismissCta() {\n    this.setState({ dismissed: true })\n  }\n\n  render() {\n    const ctaBanner = (\n      <SlideTransition\n        in={this.props.show}\n        timeout={{ enter: 10, exit: 250 }}\n        height={this.props.height}\n      >\n        <BannerContainer\n          position={this.props.position}\n          backgroundColor={this.props.backgroundColor}\n        >\n          <Banner textColor={this.props.textColor}>\n            <a href={this.props.href}>\n              <Sans size=\"3\" weight=\"medium\" my={0.5}>\n                <p>{this.props.copy}</p>\n              </Sans>\n            </a>\n            <IconContainer onClick={this.dismissCta.bind(this) as any}>\n              <Icon name=\"close\" color={this.props.textColor} fontSize=\"16px\" />\n            </IconContainer>\n          </Banner>\n        </BannerContainer>\n      </SlideTransition>\n    )\n\n    return !this.state.dismissed ? ctaBanner : <div />\n  }\n}\n\nconst BannerContainer = styled.div.attrs<MinimalCtaBannerProps>({})`\n  width: 100%;\n  height: inherit;\n  background-color: ${props => props.backgroundColor || \"white\"};\n  display: flex;\n  position: fixed;\n  z-index: 99;\n  ${props => {\n    if (props.position === \"bottom\") return \"bottom: 0px;\"\n    if (props.position === \"top\") return \"top: 0px;\"\n  }};\n`\n\nconst Banner = styled.div.attrs<{ textColor: string }>({})`\n  display: inline-flex;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  padding: 10px 10px;\n\n  a {\n    color: ${props => props.textColor || \"black\"};\n    text-decoration: none;\n    margin: auto auto auto 0;\n  }\n`\n\nconst IconContainer = styled.div`\n  margin-left: auto;\n`\n"],"file":"MinimalCtaBanner.js"}