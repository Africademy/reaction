{"version":3,"sources":["../../../src/Components/Modal/Modal.tsx"],"names":["Modal","isAnimating","props","show","isShown","blurContainers","blurContainerSelector","Array","from","document","querySelectorAll","onClose","nextProps","setState","children","cta","hasLogo","image","isWide","title","ModalWidth","Wide","Normal","close","React","Component","ModalContent","styled","div","attrs","isFixed","hasImage","media","sm","ModalOverlay","CloseButton","Icon","color","fontSize","Image"],"mappings":"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","sourcesContent":["import { color } from \"@artsy/palette\"\nimport Icon from \"Components/Icon\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nimport { ModalWidth, ModalWrapper } from \"Components/Modal/ModalWrapper\"\nimport { media } from \"../Helpers\"\nimport { CtaProps, ModalCta } from \"./ModalCta\"\nimport { ModalHeader } from \"./ModalHeader\"\n\nexport interface ModalProps extends React.HTMLProps<Modal> {\n  blurContainerSelector?: string\n  cta?: CtaProps\n  onClose?: () => void\n  hasLogo?: boolean\n  isWide?: boolean\n  image?: string\n  show?: boolean\n  title?: string\n}\n\n/**\n * @deprecated in favor of our Design System Modal component in @artsy/palette\n * https://palette.artsy.net/elements/dialogs/modal\n */\nexport class Modal extends React.Component<ModalProps> {\n  static defaultProps = {\n    show: false,\n    blurContainerSelector: \"\",\n  }\n\n  state = {\n    isAnimating: this.props.show || false,\n    isShown: this.props.show || false,\n    blurContainers: this.props.blurContainerSelector\n      ? Array.from(document.querySelectorAll(this.props.blurContainerSelector))\n      : [],\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.show !== nextProps.show) {\n      this.setState({\n        isAnimating: true,\n        isShown: nextProps.show,\n      })\n    }\n  }\n\n  close = () => {\n    this.props.onClose()\n  }\n\n  render(): JSX.Element {\n    const {\n      children,\n      cta,\n      hasLogo,\n      image,\n      isWide,\n      onClose,\n      show,\n      title,\n    } = this.props\n\n    return (\n      <ModalWrapper\n        cta={cta}\n        onClose={onClose}\n        show={show}\n        width={isWide ? ModalWidth.Wide : ModalWidth.Normal}\n        image={image}\n        fullscreenResponsiveModal\n      >\n        <CloseButton name=\"close\" onClick={this.close} />\n\n        {image && <Image image={image} />}\n\n        <ModalContent cta={cta} hasImage={image && true}>\n          {(hasLogo || title) && (\n            <ModalHeader title={title} hasLogo={hasLogo} />\n          )}\n\n          <div>{children}</div>\n\n          {cta && (\n            <ModalCta cta={cta} hasImage={image && true} onClose={this.close} />\n          )}\n        </ModalContent>\n      </ModalWrapper>\n    )\n  }\n}\n\nexport const ModalContent = styled.div.attrs<{\n  cta: CtaProps\n  hasImage: boolean\n}>({})`\n  padding: ${props =>\n    props.cta\n      ? props.cta.isFixed\n        ? \"20px 40px 100px\"\n        : \"20px 40px 0\"\n      : \"20px 40px 40px\"};\n\n  width: ${props => (props.hasImage ? \"50%\" : \"100%\")};\n  ${props => props.hasImage && \"margin-left: 50%\"};\n  ${media.sm`\n    width: 100%;\n    margin: 0px;\n    padding: ${props =>\n      props.cta && props.cta.isFixed ? \"20px 20px 110px\" : \"20px\"};\n  `};\n`\n\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background: rgba(200, 200, 200, 0.5);\n`\n\nexport const CloseButton = styled(Icon).attrs({\n  color: color(\"black60\"),\n  fontSize: \"16px\",\n})`\n  position: absolute;\n  top: 15px;\n  right: 12px;\n  cursor: pointer;\n`\n\nexport const Image = styled.div.attrs<{ image: string }>({})`\n  background-image: url(${props => props.image});\n  background-size: cover;\n  background-position: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 50%;\n  ${media.sm`\n    display: none;\n  `};\n`\n\nexport default Modal\n"],"file":"Modal.js"}