{"version":3,"sources":["../../../src/Components/Modal/ModalDialog.tsx"],"names":["ModalDialog","props","show","heading","detail","onClose","primaryCta","secondaryCta","undefined","ModalWidth","Narrow","action","text","React","Component","StyledSans","Sans","ModalButton"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAgBaA,W;;;;;;;;;;;;;6BACF;AAAA,wBAQH,KAAKC,KARF;AAAA,UAELC,IAFK,eAELA,IAFK;AAAA,UAGLC,OAHK,eAGLA,OAHK;AAAA,UAILC,MAJK,eAILA,MAJK;AAAA,UAKLC,OALK,eAKLA,OALK;AAAA,UAMLC,UANK,eAMLA,UANK;AAAA,UAOLC,YAPK,eAOLA,YAPK;AAUP,aACE,6BAAC,0BAAD;AACE,QAAA,IAAI,EAAEL,IADR;AAEE,QAAA,OAAO,EAAEG,OAAO,IAAK;AAAA,iBAAMG,SAAN;AAAA,SAFvB;AAGE,QAAA,KAAK,EAAEC,yBAAWC;AAHpB,SAKE,6BAAC,aAAD;AAAM,QAAA,aAAa,EAAC,QAApB;AAA6B,QAAA,EAAE,EAAE,CAAjC;AAAoC,QAAA,EAAE,EAAE;AAAxC,SACE,6BAAC,aAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAe,QAAA,MAAM,EAAC,QAAtB;AAA+B,QAAA,EAAE,EAAE;AAAnC,SACGP,OADH,CADF,EAIGC,MAAM,IACL,6BAAC,aAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAe,QAAA,KAAK,EAAC;AAArB,SACGA,MADH,CALJ,CALF,EAgBE,6BAAC,aAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAa,QAAA,cAAc,EAAC;AAA5B,SACGG,YAAY,IACX,6BAAC,WAAD;AAAa,QAAA,SAAS,MAAtB;AAAuB,QAAA,OAAO,EAAEA,YAAY,CAACI;AAA7C,SACGJ,YAAY,CAACK,IADhB,CAFJ,EAME,6BAAC,WAAD;AAAa,QAAA,OAAO,EAAEN,UAAU,CAACK;AAAjC,SACGL,UAAU,CAACM,IADd,CANF,CAhBF,CADF;AA6BD;;;;EAxC8BC,eAAMC,S;;;AA2CvC,IAAMC,UAAU,GAAG,+BAAOC,aAAP,CAAH;AAAA;AAAA;AAAA,+DAGL,oBAAM,WAAN,CAHK,CAAhB,C,CAMA;;AACO,IAAMC,WAGX,GAAG,SAHQA,WAGR,CAAAhB,KAAK;AAAA,SAAI,6BAAC,UAAD;AAAY,IAAA,CAAC,EAAE,CAAf;AAAkB,IAAA,IAAI,EAAC,GAAvB;AAA2B,IAAA,MAAM,EAAC;AAAlC,KAA+CA,KAA/C,EAAJ;AAAA,CAHH","sourcesContent":["import { color, Flex, Sans } from \"@artsy/palette\"\nimport { ModalWidth, ModalWrapper } from \"Components/Modal/ModalWrapper\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nexport interface CtaProps {\n  action(): void\n  text: React.ReactNode\n}\n\nexport interface ModalDialogProps {\n  show?: boolean\n  heading: React.ReactNode\n  detail?: React.ReactNode\n  primaryCta: CtaProps\n  secondaryCta?: CtaProps\n  onClose?: () => void\n}\n\nexport class ModalDialog extends React.Component<ModalDialogProps> {\n  render() {\n    const {\n      show,\n      heading,\n      detail,\n      onClose,\n      primaryCta,\n      secondaryCta,\n    } = this.props\n\n    return (\n      <ModalWrapper\n        show={show}\n        onClose={onClose || (() => undefined)}\n        width={ModalWidth.Narrow}\n      >\n        <Flex flexDirection=\"column\" pt={2} px={2}>\n          <Sans size=\"4\" weight=\"medium\" mb={10}>\n            {heading}\n          </Sans>\n          {detail && (\n            <Sans size=\"3\" color=\"black60\">\n              {detail}\n            </Sans>\n          )}\n        </Flex>\n\n        <Flex mt={1} justifyContent=\"flex-end\">\n          {secondaryCta && (\n            <ModalButton secondary onClick={secondaryCta.action}>\n              {secondaryCta.text}\n            </ModalButton>\n          )}\n          <ModalButton onClick={primaryCta.action}>\n            {primaryCta.text}\n          </ModalButton>\n        </Flex>\n      </ModalWrapper>\n    )\n  }\n}\n\nconst StyledSans = styled(Sans)`\n  transition: color 0.14s ease;\n  cursor: pointer;\n  color: ${color(\"purple100\")};\n`\n\n// TODO: Generalize this button and move it to @artsy/palette\nexport const ModalButton: React.SFC<{\n  secondary?: boolean\n  onClick: () => void\n}> = props => <StyledSans p={2} size=\"3\" weight=\"medium\" {...props} />\n"],"file":"ModalDialog.js"}