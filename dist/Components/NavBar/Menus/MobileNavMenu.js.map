{"version":3,"sources":["../../../../src/Components/NavBar/Menus/MobileNavMenu.tsx"],"names":["MobileNavMenu","trackEvent","SystemContext","user","isLoggedIn","Boolean","trackClick","event","link","target","text","innerText","href","parentNode","getAttribute","action_type","AnalyticsSchema","ActionType","Click","subject","destination_path","MobileLink","children","props","isPressed","setPressed","bg","cursor","MobileNavContainer","Flex","MobileLinkContainer","Box","p","disableHover","MobileToggleIcon","open","style","transform","top"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\"\nimport styled from \"styled-components\"\n\nimport {\n  Box,\n  CloseIcon,\n  color,\n  Flex,\n  Link,\n  MenuIcon,\n  Separator,\n  Serif,\n  space,\n} from \"@artsy/palette\"\n\nimport { AnalyticsSchema, SystemContext } from \"Artsy\"\nimport { useTracking } from \"Artsy/Analytics/useTracking\"\n\nexport const MobileNavMenu: React.FC = () => {\n  const { trackEvent } = useTracking()\n  const { user } = useContext(SystemContext)\n  const isLoggedIn = Boolean(user)\n\n  const trackClick = event => {\n    const link = event.target\n    const text = link.innerText\n    const href = link.parentNode.getAttribute(\"href\")\n\n    trackEvent({\n      action_type: AnalyticsSchema.ActionType.Click,\n      subject: text,\n      destination_path: href,\n    })\n  }\n\n  return (\n    <MobileNavContainer py={[1, 4]} flexDirection=\"column\" onClick={trackClick}>\n      <MobileLink href=\"/\">Home</MobileLink>\n      <MobileLink href=\"/artists\">Artists</MobileLink>\n      <MobileLink href=\"/shows\">Shows</MobileLink>\n      <MobileLink href=\"/galleries\">Galleries</MobileLink>\n      <MobileLink href=\"/institutions\">Museums</MobileLink>\n      <MobileLink href=\"/fairs\">Fairs</MobileLink>\n      <MobileLink href=\"/auctions\">Auctions</MobileLink>\n      <MobileLink href=\"/articles\">Editorial</MobileLink>\n\n      <Box px={2}>\n        <Separator my={[1, 4]} />\n      </Box>\n\n      {isLoggedIn ? (\n        <>\n          <MobileLink href=\"/works-for-you\">Works for you</MobileLink>\n          <MobileLink href=\"/user/edit\">Account</MobileLink>\n        </>\n      ) : (\n        <>\n          <MobileLink\n            href={`/log_in?intent=signup&signupIntent=signup&trigger=click&contextModule=Header`}\n          >\n            Login\n          </MobileLink>\n          <MobileLink\n            href={`/sign_up?intent=signup&signupIntent=signup&trigger=click&contextModule=Header`}\n          >\n            Sign up\n          </MobileLink>\n        </>\n      )}\n    </MobileNavContainer>\n  )\n}\n\ninterface MobileLinkProps {\n  children: React.ReactNode\n  href?: string\n  onClick?: (event?: React.MouseEvent<HTMLElement>) => void\n}\n\nconst MobileLink: React.FC<MobileLinkProps> = ({\n  href,\n  children,\n  ...props\n}) => {\n  const [isPressed, setPressed] = useState(false)\n  const bg = isPressed ? \"black5\" : \"white100\"\n\n  return (\n    <MobileLinkContainer\n      py={0.5}\n      style={{ cursor: \"pointer\" }}\n      bg={bg}\n      onTouchStart={() => setPressed(true)}\n      onTouchEnd={() => setPressed(false)}\n      {...props}\n    >\n      <Box px={2} py={[0, 0.5]}>\n        {href ? (\n          <Link href={href} underlineBehavior=\"none\">\n            <Serif size={[\"4\", \"8\"]}>{children}</Serif>\n          </Link>\n        ) : (\n          <Serif size={[\"4\", \"8\"]}>{children}</Serif>\n        )}\n      </Box>\n    </MobileLinkContainer>\n  )\n}\n\nconst MobileNavContainer = styled(Flex)`\n  background-color: white;\n  border-bottom: 1px solid ${color(\"black10\")};\n  position: relative;\n  user-select: none;\n  overflow-y: scroll;\n  z-index: 2;\n  width: 100%;\n  height: calc(100vh - ${space(6)}px);\n  -webkit-overflow-scrolling: touch;\n`\n\nconst MobileLinkContainer = styled(Box)<{ disableHover?: boolean }>`\n  background-color: white;\n  transition: 0.3s linear;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${p =>\n      p.disableHover ? \"transparent\" : color(\"black5\")};\n  }\n`\n\nexport const MobileToggleIcon: React.FC<{ open: boolean }> = ({ open }) => {\n  const style = { transform: \"scale(1.5)\", top: 2 }\n  return open ? <CloseIcon style={style} /> : <MenuIcon style={style} />\n}\n"],"file":"MobileNavMenu.js"}