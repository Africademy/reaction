{"version":3,"sources":["../../../src/Components/NavBar/NavItem.tsx"],"names":["NavItem","Menu","Overlay","active","children","className","display","href","onClick","navItemLabel","trackEvent","hover","toggleHover","showMenu","Boolean","showOverlay","hoverColor","getAnimation","h","opacity","transform","animatedStyle","from","config","name","stiff","friction","mass","trackClick","action_type","AnalyticsSchema","ActionType","Click","subject","destination_path","trackHover","Hover","cursor","MenuContainer","Box","NavBarHeight"],"mappings":"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","sourcesContent":["import { Box, BoxProps, Link, Sans, space } from \"@artsy/palette\"\nimport { AnalyticsSchema } from \"Artsy\"\nimport { useTracking } from \"Artsy/Analytics/useTracking\"\nimport { isFunction, isString } from \"lodash\"\nimport React, { useEffect, useState } from \"react\"\nimport { animated, config, useSpring } from \"react-spring\"\nimport styled from \"styled-components\"\nimport { NavBarHeight } from \"./NavBar\"\n\ninterface NavItemProps extends BoxProps {\n  Menu?: React.FC\n  Overlay?: React.FC<{\n    hover: boolean\n  }>\n  active?: boolean\n  className?: string\n  href?: string\n  onClick?: () => void\n}\n\nexport const NavItem: React.FC<NavItemProps> = ({\n  Menu,\n  Overlay,\n  active = false,\n  children,\n  className,\n  display = \"block\",\n  href,\n  onClick,\n}) => {\n  const navItemLabel = children\n  const { trackEvent } = useTracking()\n  const [hover, toggleHover] = useState(active)\n  const showMenu = Boolean(Menu && hover)\n  const showOverlay = Boolean(Overlay)\n  const hoverColor = hover ? \"purple100\" : \"black80\"\n  const getAnimation = h => ({\n    opacity: h ? 0 : 1,\n    transform: `translate3d(0, ${h ? -90 : -65}px, 0)`,\n  })\n  const animatedStyle = useSpring({\n    from: getAnimation(hover),\n    ...getAnimation(!hover),\n    config: name =>\n      name === \"opacity\"\n        ? config.stiff\n        : {\n            friction: 10,\n            mass: 0.1,\n          },\n  })\n\n  const trackClick = () => {\n    if (href && isString(navItemLabel)) {\n      trackEvent({\n        action_type: AnalyticsSchema.ActionType.Click,\n        subject: navItemLabel, // Text passed into the NavItem\n        destination_path: href,\n      })\n    }\n  }\n\n  const trackHover = () => {\n    if (isString(navItemLabel))\n      trackEvent({\n        action_type: AnalyticsSchema.ActionType.Hover,\n        subject: navItemLabel,\n      })\n  }\n\n  useEffect(() => {\n    if (hover) {\n      trackHover()\n    }\n  }, [hover])\n\n  return (\n    <Box\n      position=\"relative\"\n      onMouseEnter={() => toggleHover(true)}\n      onMouseLeave={() => toggleHover(false)}\n    >\n      <Link\n        href={href}\n        color={hoverColor}\n        underlineBehavior=\"none\"\n        px={1}\n        py={2}\n        className={className}\n        display={display}\n        position=\"relative\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          trackClick()\n          onClick && onClick()\n        }}\n      >\n        <Sans size=\"3\" weight=\"medium\" color={hoverColor}>\n          <Box height={25}>\n            {isFunction(navItemLabel)\n              ? // NavItem children can be called as renderProps so that contents\n                // can operate on UI behaviors (such as changing the color of an\n                // icon on hover).\n                navItemLabel({\n                  hover,\n                })\n              : navItemLabel}\n          </Box>\n        </Sans>\n      </Link>\n\n      {showMenu && (\n        <animated.div style={animatedStyle}>\n          <MenuContainer top={space(6)}>\n            <Menu />\n          </MenuContainer>\n        </animated.div>\n      )}\n\n      {showOverlay && <Overlay hover={hover} />}\n    </Box>\n  )\n}\n\nconst MenuContainer = styled(Box)`\n  position: absolute;\n  top: ${NavBarHeight}px;\n  margin-top: -1px; /* Offset border */\n  transform: translateX(-78%);\n`\n"],"file":"NavItem.js"}