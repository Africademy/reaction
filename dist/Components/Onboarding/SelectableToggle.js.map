{"version":3,"sources":["../../../src/Components/Onboarding/SelectableToggle.tsx"],"names":["Link","styled","a","Colors","gray","grayRegular","media","sm","FullWidthCol","div","Col","EmptyCircle","SelectableToggle","props","onSelect","bind","selected","href","text","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAMA,IAAI,GAAGC,0BAAOC,CAAV;AAAA;AAAA;AAAA,2KAIN,uBAAW,KAAX,CAJM,EAMcC,gBAAOC,IANrB,EASgBD,gBAAOE,WATvB,EAYNC,eAAMC,EAZA,oBAAV;;AAkBA,IAAMC,YAAY,GAAGP,0BAAOQ,GAAV;AAAA;AAAA;AAAA,+CAAlB;;AAMA,IAAMC,GAAG,GAAGT,0BAAOQ,GAAV;AAAA;AAAA;AAAA,wCAAT;;AAKA,IAAME,WAAW,GAAGV,0BAAOQ,GAAV;AAAA;AAAA;AAAA,qGAGKN,gBAAOE,WAHZ,CAAjB;;IAQMO,gB;;;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AAFiB;AAGlB;;;;+BAEU;AACT,UAAI,KAAKF,KAAL,CAAWC,QAAf,EAAyB;AACvB,aAAKD,KAAL,CAAWC,QAAX,CAAoB,KAAKD,KAAL,CAAWG,QAA/B;AACD;AACF;;;6BAEQ;AAAA;;AACP,aACE,0CACE,6BAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,IAAvB;AAA6B,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACH,QAAL,EAAN;AAAA;AAAtC,SACE,6BAAC,YAAD,QAAe,KAAKD,KAAL,CAAWK,IAA1B,CADF,EAGE,6BAAC,GAAD,QACG,KAAKL,KAAL,CAAWG,QAAX,GACC,6BAAC,6BAAD;AAAsB,QAAA,KAAK,EAAC,IAA5B;AAAiC,QAAA,MAAM,EAAC;AAAxC,QADD,GAGC,6BAAC,WAAD,OAJJ,CAHF,CADF,CADF;AAeD;;;;EA5B4BG,eAAMC,S;;eA+BtBR,gB","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nimport { CircleBlackCheckIcon } from \"@artsy/palette\"\nimport Colors from \"Assets/Colors\"\nimport { avantgarde } from \"Assets/Fonts\"\nimport { media } from \"../Helpers\"\n\ninterface SelectableToggleProps {\n  href?: string\n  text?: string\n  onSelect: (selected: boolean) => void\n  selected: boolean\n}\n\nconst Link = styled.a`\n  display: flex;\n  color: black;\n  text-decoration: none;\n  ${avantgarde(\"s13\")};\n  &:hover {\n    background-color: ${Colors.gray};\n    cursor: pointer;\n  }\n  border-top: 1px solid ${Colors.grayRegular};\n  height: 70px;\n  padding: 0 15px 0 20px;\n  ${media.sm`\n    height: 50px;\n    padding: 0 5px;\n  `};\n`\n\nconst FullWidthCol = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n`\n\nconst Col = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst EmptyCircle = styled.div`\n  width: 26px;\n  height: 26px;\n  border: 1px solid ${Colors.grayRegular};\n  border-radius: 50%;\n  background-color: transparent;\n`\n\nclass SelectableToggle extends React.Component<SelectableToggleProps, null> {\n  constructor(props) {\n    super(props)\n    this.onSelect = this.onSelect.bind(this)\n  }\n\n  onSelect() {\n    if (this.props.onSelect) {\n      this.props.onSelect(this.props.selected)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Link href={this.props.href} onClick={() => this.onSelect()}>\n          <FullWidthCol>{this.props.text}</FullWidthCol>\n\n          <Col>\n            {this.props.selected ? (\n              <CircleBlackCheckIcon width=\"26\" height=\"26\" />\n            ) : (\n              <EmptyCircle />\n            )}\n          </Col>\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default SelectableToggle\n"],"file":"SelectableToggle.js"}