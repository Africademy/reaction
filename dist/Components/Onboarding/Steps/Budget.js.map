{"version":3,"sources":["../../../../src/Components/Onboarding/Steps/Budget.tsx"],"names":["OptionsContainer","styled","div","Colors","grayRegular","media","sm","BudgetComponent","selection","index","Object","values","options","setState","priceRangeMax","state","props","relayEnvironment","mutation","variables","input","price_range_min","price_range_max","onNextButtonPressed","keys","map","text","onOptionSelected","bind","submit","MultiButtonState","Highlighted","Default","React","Component","Budget","slug"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,gBAAgB,GAAGC,0BAAOC,GAAV;AAAA;AAAA;AAAA,yFAKSC,gBAAOC,WALhB,EAOlBC,eAAMC,EAPY,oBAAtB;;IAiBaC,e;;;;;;;;;;;;;;;;;;8DAMD;AACR,oBAAc,GADN;AAER,sBAAgB,IAFR;AAGR,sBAAgB,IAHR;AAIR,uBAAiB,KAJT;AAKR,uBAAiB,KALT;AAMR,uBAAiB,KANT;AAOR,2BAAqB;AAPb,K;;4DAUF;AACNC,MAAAA,SAAS,EAAE;AADL,K;;uEAIW,UAACC,KAAD,EAAmB;AACpC,UAAMD,SAAS,GAAG;AAAEA,QAAAA,SAAS,EAAEE,MAAM,CAACC,MAAP,CAAc,MAAKC,OAAnB,EAA4BH,KAA5B;AAAb,OAAlB;;AACA,YAAKI,QAAL,CAAcL,SAAd;AACD,K;;;;;;;6BAEQ;AACP,UAAMM,aAAa,GAAG,KAAKC,KAAL,CAAWP,SAAjC;AAEA,sCACE,KAAKQ,KAAL,CAAWC,gBADb,EAEE;AACEC,QAAAA,QAAQ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UADV;AAYEC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE;AACLC,YAAAA,eAAe,EAAE,CAAC,CADb;AAELC,YAAAA,eAAe,EAAER;AAFZ;AADE;AAZb,OAFF;AAuBA,WAAKE,KAAL,CAAWO,mBAAX;AACD;;;6BAEQ;AAAA;;AACP,UAAMX,OAAO,GAAGF,MAAM,CAACc,IAAP,CAAY,KAAKZ,OAAjB,EAA0Ba,GAA1B,CAA8B,UAACC,IAAD,EAAOjB,KAAP;AAAA,eAC5C,6BAAC,yBAAD;AACE,UAAA,GAAG,EAAEA,KADP;AAEE,UAAA,IAAI,EAAEiB,IAFR;AAGE,UAAA,QAAQ,EAAE,MAAI,CAACC,gBAAL,CAAsBC,IAAtB,CAA2B,MAA3B,EAAiCnB,KAAjC,CAHZ;AAIE,UAAA,QAAQ,EAAE,MAAI,CAACM,KAAL,CAAWP,SAAX,KAAyB,MAAI,CAACI,OAAL,CAAac,IAAb;AAJrC,UAD4C;AAAA,OAA9B,CAAhB;AASA,aACE,6BAAC,cAAD;AACE,QAAA,KAAK,EAAC,0CADR;AAEE,QAAA,QAAQ,EAAC,YAFX;AAGE,QAAA,mBAAmB,EAAE,KAAKX,KAAL,CAAWP,SAAX,IAAwB,KAAKqB,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAH/C;AAIE,QAAA,UAAU,MAJZ;AAKE,QAAA,WAAW,EACT,KAAKb,KAAL,CAAWP,SAAX,GACIsB,mCAAiBC,WADrB,GAEID,mCAAiBE;AARzB,SAWE,6BAAC,gBAAD,QAAmBpB,OAAnB,CAXF,CADF;AAeD;;;;EA/EkCqB,eAAMC,S;;;;gBAA9B3B,e,UAIa,Q;;AA8E1B,IAAM4B,MAAM,GAAG,8BAAkB5B,eAAlB,CAAf,C,CACA;;AACA4B,MAAM,CAAC,MAAD,CAAN,GAAiB5B,eAAe,CAAC6B,IAAjC;eAEeD,M","sourcesContent":["import React from \"react\"\nimport { commitMutation, graphql } from \"react-relay\"\nimport styled from \"styled-components\"\n\nimport { BudgetUpdateMyUserProfileMutation } from \"__generated__/BudgetUpdateMyUserProfileMutation.graphql\"\nimport { SystemContextProps, withSystemContext } from \"Artsy\"\nimport Colors from \"../../../Assets/Colors\"\nimport { MultiButtonState } from \"../../Buttons/MultiStateButton\"\nimport { media } from \"../../Helpers\"\nimport SelectableToggle from \"../SelectableToggle\"\nimport { StepProps } from \"../Types\"\nimport { Layout } from \"./Layout\"\n\nconst OptionsContainer = styled.div`\n  width: 450px;\n  margin: 0 auto 100px;\n\n  &:last-child {\n    border-bottom: 1px solid ${Colors.grayRegular};\n  }\n  ${media.sm`\n    width: 100%;\n    margin-bottom: 20px;\n  `};\n`\n\ninterface State {\n  selection: number | null\n}\n\nexport class BudgetComponent extends React.Component<\n  StepProps & SystemContextProps,\n  State\n> {\n  static slug: \"budget\" = \"budget\"\n\n  options = {\n    \"UNDER $500\": 500,\n    \"UNDER $2,500\": 2500,\n    \"UNDER $5,000\": 5000,\n    \"UNDER $10,000\": 10000,\n    \"UNDER $25,000\": 25000,\n    \"UNDER $50,000\": 50000,\n    \"NO BUDGET IN MIND\": 1000000000000,\n  }\n\n  state = {\n    selection: null,\n  }\n\n  onOptionSelected = (index: number) => {\n    const selection = { selection: Object.values(this.options)[index] }\n    this.setState(selection)\n  }\n\n  submit() {\n    const priceRangeMax = this.state.selection\n\n    commitMutation<BudgetUpdateMyUserProfileMutation>(\n      this.props.relayEnvironment,\n      {\n        mutation: graphql`\n          mutation BudgetUpdateMyUserProfileMutation(\n            $input: UpdateMyProfileInput!\n          ) {\n            updateMyUserProfile(input: $input) {\n              user {\n                name\n              }\n            }\n          }\n        `,\n        variables: {\n          input: {\n            price_range_min: -1,\n            price_range_max: priceRangeMax,\n          },\n        },\n      }\n    )\n\n    this.props.onNextButtonPressed()\n  }\n\n  render() {\n    const options = Object.keys(this.options).map((text, index) => (\n      <SelectableToggle\n        key={index}\n        text={text}\n        onSelect={this.onOptionSelected.bind(this, index)}\n        selected={this.state.selection === this.options[text]}\n      />\n    ))\n\n    return (\n      <Layout\n        title=\"Whatâ€™s your maximum artwork budget?\"\n        subtitle=\"Select one\"\n        onNextButtonPressed={this.state.selection && this.submit.bind(this)}\n        isLastStep\n        buttonState={\n          this.state.selection\n            ? MultiButtonState.Highlighted\n            : MultiButtonState.Default\n        }\n      >\n        <OptionsContainer>{options}</OptionsContainer>\n      </Layout>\n    )\n  }\n}\n\nconst Budget = withSystemContext(BudgetComponent)\n// tslint:disable:no-string-literal\nBudget[\"slug\"] = BudgetComponent.slug\n\nexport default Budget\n"],"file":"Budget.js"}