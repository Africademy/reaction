{"version":3,"sources":["../../../src/Components/Publishing/Constants.ts"],"names":["APP_URL","process","env","EMAIL_REGEX","GLOBAL_IMAGE_QUALITY","SIZE_ME_REFRESH_RATE","getArticleHref","slug","getArticleFullHref","getPreSlugPath","layout","includes","getEditorialHref","layoutType","getFullEditorialHref","getFullArtsyHref","getAuthorByline","authors","isEditoral","authorCount","Number","length","name","names","reduce","prev","curr","i","delim","len","getDate","date","format","today","DateTime","local","dateTime","fromISO","setZone","isToday","hasSame","isThisYear","amPm","hour","minutes","minute","monthDay","monthShort","day","monthDayYear","year","time","getCurrentUnixTimestamp","toMillis","getMediaDate","article","published_at","scheduled_publish_at","media","release_date","formatTime","Math","floor","seconds","minutesStr","secondsStr","getArtsySlugsFromArticle","articleBody","sections","map","section","type","body","join","artists","getArtsySlugsFromHTML","genes","html","model","parser","DOMParser","doc","parseFromString","slugs","querySelectorAll","forEach","anchor","href","getAttribute","match","push","url","parse","pathname","split"],"mappings":"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","sourcesContent":["import { compact, last, uniq } from \"lodash\"\nimport { DateTime } from \"luxon\"\nimport url from \"url\"\nimport { ArticleData, DateFormat } from \"../Publishing/Typings\"\n\nconst APP_URL = process.env.APP_URL || \"https://www.artsy.net\"\n\n/**\n * Matches for Email / Instant Articles\n */\nexport const EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\n/**\n * The quality to request from image CDN\n */\nexport const GLOBAL_IMAGE_QUALITY = 80\n\n/**\n * TODO: Eventually remove sizeMe\n */\nexport const SIZE_ME_REFRESH_RATE = 500\n\n/**\n * Relative path to article\n */\nexport const getArticleHref = slug => `/article/${slug}`\n\n/**\n * Absolute path to article\n */\nexport const getArticleFullHref = slug => `${APP_URL}/article/${slug}`\n\n/**\n * Get the pre-slug part of URL\n */\n\nexport const getPreSlugPath = layout => {\n  return [\"standard\", \"feature\"].includes(layout) ? \"article\" : layout\n}\n\n/**\n * Relative path to editorial entity\n */\n\nexport const getEditorialHref = (layout, slug) => {\n  const layoutType = getPreSlugPath(layout)\n  return `/${layoutType}/${slug}`\n}\n\n/**\n * Absolute path to editorial entity\n */\nexport const getFullEditorialHref = (layout, slug) => {\n  const layoutType = getPreSlugPath(layout)\n  return `${APP_URL}/${layoutType}/${slug}`\n}\n\n/**\n * Absolute path to artsy entity\n */\nexport const getFullArtsyHref = slug => `${APP_URL}/${slug}`\n\n/**\n * ByLine helpers\n * TODO: Move this into some kind of utils folder\n */\nexport const getAuthorByline = (authors, isEditoral = true) => {\n  const authorCount = Number(authors && authors.length)\n\n  if (authorCount === 1) {\n    return authors[0].name || \"\"\n  } else if (authorCount > 1) {\n    const names = authors.reduce((prev, curr, i) => {\n      let delim\n      const len = authors.length\n      if (i === len - 1) {\n        delim = \" and \"\n      } else if (i === 0) {\n        delim = \"\"\n      } else {\n        delim = \", \"\n      }\n      return prev + delim + curr.name\n    }, \"\")\n    return names\n\n    // No Author\n  } else if (isEditoral) {\n    return \"Artsy Editors\"\n  }\n}\n\nexport const getDate = (date, format: DateFormat = \"default\") => {\n  const today = DateTime.local()\n  const dateTime = DateTime.fromISO(date).setZone(\"America/New_York\")\n  const isToday = today.hasSame(dateTime, \"day\")\n  const isThisYear = today.hasSame(dateTime, \"year\")\n  const amPm = dateTime.hour >= 12 ? \"pm\" : \"am\"\n  const minutes = dateTime.minute < 10 ? \"0\" + dateTime.minute : dateTime.minute\n  const monthDay = `${dateTime.monthShort} ${dateTime.day}`\n  const monthDayYear = `${dateTime.monthShort} ${dateTime.day}, ${\n    dateTime.year\n  }`\n  let hour\n  if (dateTime.hour > 12) {\n    hour = dateTime.hour - 12\n  } else if (dateTime.hour === 0) {\n    hour = 12\n  } else {\n    hour = dateTime.hour\n  }\n  const time = `${hour}:${minutes}${amPm}`\n\n  switch (format) {\n    case \"monthDay\":\n      return monthDay\n    case \"monthYear\":\n      return `${dateTime.monthShort} ${dateTime.year}`\n    case \"condensed\":\n      return monthDayYear\n    case \"verbose\":\n      const day = isToday ? \"Today\" : monthDayYear\n      return `${day} at ${time}`\n    case \"news\":\n      return isToday ? \"Today\" : isThisYear ? monthDay : monthDayYear\n    default:\n      return `${dateTime.monthShort} ${dateTime.day}, ${dateTime.year} ${time}`\n  }\n}\n\nexport const getCurrentUnixTimestamp = () => DateTime.local().toMillis()\n\nexport const getMediaDate = article => {\n  const { published_at, scheduled_publish_at, media } = article\n  const { release_date } = media\n\n  if (release_date) {\n    return release_date\n  } else {\n    return published_at || scheduled_publish_at\n  }\n}\n\nexport const formatTime = time => {\n  let minutes = Math.floor(time / 60) % 60\n  let seconds = Math.floor(time % 60)\n  minutes = minutes <= 0 ? 0 : minutes\n  seconds = seconds <= 0 ? 0 : seconds\n\n  const minutesStr = minutes < 10 ? \"0\" + minutes : minutes\n  const secondsStr = seconds < 10 ? \"0\" + seconds : seconds\n  return minutesStr + \":\" + secondsStr\n}\n\ninterface SlugsFromArticle {\n  artists: string[]\n  genes: string[]\n}\n\nexport const getArtsySlugsFromArticle = (\n  article: ArticleData\n): SlugsFromArticle => {\n  const articleBody = article.sections\n    ? article.sections\n        .map(section => {\n          if (section.type === \"text\") {\n            return section.body\n          }\n        })\n        .join()\n    : \"\"\n\n  const artists = uniq(getArtsySlugsFromHTML(articleBody, \"artist\"))\n  const genes = uniq(getArtsySlugsFromHTML(articleBody, \"gene\"))\n\n  return {\n    artists,\n    genes,\n  }\n}\n\nexport const getArtsySlugsFromHTML = (\n  html: string,\n  model: string\n): string[] => {\n  const parser = new DOMParser()\n  const doc = parser.parseFromString(html, \"text/html\")\n\n  const slugs: string[] = []\n  doc.querySelectorAll(\"a\").forEach(anchor => {\n    const href = anchor.getAttribute(\"href\")\n    if (href && href.match(`artsy.net/${model}`)) {\n      slugs.push(last(url.parse(href).pathname.split(\"/\")))\n    }\n  })\n\n  return compact(slugs)\n}\n"],"file":"Constants.js"}