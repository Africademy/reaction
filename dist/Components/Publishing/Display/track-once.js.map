{"version":3,"sources":["../../../../src/Components/Publishing/Display/track-once.ts"],"names":["alreadyFired","trackOnce","unitLayout","action","target","name","descriptor","decoratedFn","value","key","props","campaign","article","id","join","apply","arguments","tracking","trackEvent","entity_type","campaign_name","unit_layout","trackImpression","trackViewability"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,YAAY,GAAG,EAArB;AAEA;;;;;;;;;;;;;;;;;;AAiBA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,UAAD,EAAaC,MAAb,EAAwB;AACxC,SAAO,UAACC,MAAD,EAASC,IAAT,EAAeC,UAAf,EAA8B;AACnC,QAAMC,WAAW,GAAGD,UAAU,CAACE,KAA/B,CADmC,CAEnC;;AACAF,IAAAA,UAAU,CAACE,KAAX,GAAmB,YAAW;AAC5B,UAAMC,GAAG,GAAG,CACV,KAAKC,KAAL,CAAWC,QAAX,CAAoBN,IADV,EAEVH,UAAU,CAAC,KAAKQ,KAAN,CAFA,EAGVP,MAHU,EAIT,KAAKO,KAAL,CAAWE,OAAX,IAAsB,KAAKF,KAAL,CAAWE,OAAX,CAAmBC,EAA1C,IAAiD,EAJvC,EAKVC,IALU,CAKL,GALK,CAAZ;AAMA,UAAId,YAAY,CAACS,GAAD,CAAhB,EAAuB,OAAOF,WAAW,CAACQ,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB,CAAP;AACvB,WAAKN,KAAL,CAAWO,QAAX,IACE,KAAKP,KAAL,CAAWO,QAAX,CAAoBC,UAApB,CAA+B;AAC7Bf,QAAAA,MAAM,EAANA,MAD6B;AAE7BgB,QAAAA,WAAW,EAAE,YAFgB;AAG7BC,QAAAA,aAAa,EAAE,KAAKV,KAAL,CAAWC,QAAX,CAAoBN,IAHN;AAI7BgB,QAAAA,WAAW,EAAEnB,UAAU,CAAC,KAAKQ,KAAN;AAJM,OAA/B,CADF;AAOAV,MAAAA,YAAY,CAACS,GAAD,CAAZ,GAAoB,IAApB;AACAF,MAAAA,WAAW,CAACQ,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB;AACD,KAjBD;AAkBD,GArBD;AAsBD,CAvBD;;AAyBO,SAASM,eAAT,CAAyBpB,UAAzB,EAAqC;AAC1C,SAAOD,SAAS,CAACC,UAAD,EAAa,YAAb,CAAhB;AACD;;AAEM,SAASqB,gBAAT,CAA0BrB,UAA1B,EAAsC;AAC3C,SAAOD,SAAS,CAACC,UAAD,EAAa,aAAb,CAAhB;AACD","sourcesContent":["const alreadyFired = {}\n\n/**\n * An impression tracking utility for display ads that tries to not double\n * track the same impression by checking a cache of previous impressions.\n *\n * @example\n *\n *      import { track } from \"src/utils/track\"\n *\n *      @track()\n *      class DisplayAd extends React.Component<{}, null> {\n *\n *        @trackImpression(() => \"panel\")\n *        componentDidMount() {\n *          // ...\n *        }\n *      }\n */\nconst trackOnce = (unitLayout, action) => {\n  return (target, name, descriptor) => {\n    const decoratedFn = descriptor.value\n    // tslint:disable-next-line:only-arrow-functions\n    descriptor.value = function() {\n      const key = [\n        this.props.campaign.name,\n        unitLayout(this.props),\n        action,\n        (this.props.article && this.props.article.id) || \"\",\n      ].join(\":\")\n      if (alreadyFired[key]) return decoratedFn.apply(this, arguments)\n      this.props.tracking &&\n        this.props.tracking.trackEvent({\n          action,\n          entity_type: \"display_ad\",\n          campaign_name: this.props.campaign.name,\n          unit_layout: unitLayout(this.props),\n        })\n      alreadyFired[key] = true\n      decoratedFn.apply(this, arguments)\n    }\n  }\n}\n\nexport function trackImpression(unitLayout) {\n  return trackOnce(unitLayout, \"Impression\")\n}\n\nexport function trackViewability(unitLayout) {\n  return trackOnce(unitLayout, \"Viewability\")\n}\n"],"file":"track-once.js"}