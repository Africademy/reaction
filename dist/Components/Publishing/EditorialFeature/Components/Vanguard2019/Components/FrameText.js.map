{"version":3,"sources":["../../../../../../../src/Components/Publishing/EditorialFeature/Components/Vanguard2019/Components/FrameText.tsx"],"names":["VanguardFrameText","props","isSlideOpen","FrameText","Sans","FrameTextLeft","p","FrameTextRight","MobileFrame","Flex","MobileFrameText","isUppercase"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAMO,IAAMA,iBAAoD,GAAG,SAAvDA,iBAAuD,CAAAC,KAAK,EAAI;AAAA,MACnEC,WADmE,GACnDD,KADmD,CACnEC,WADmE;AAG3E,SACE,4DACE,6BAAC,iBAAD;AAAO,IAAA,EAAE,EAAC;AAAV,KACE,6BAAC,WAAD;AAAa,IAAA,WAAW,EAAEA;AAA1B,KACE,6BAAC,eAAD;AAAiB,IAAA,IAAI,EAAC;AAAtB,iBADF,EAEE,6BAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,GAAtB;AAA0B,IAAA,WAAW;AAArC,gBAFF,EAKE,6BAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,GAAtB;AAA0B,IAAA,WAAW;AAArC,YALF,CADF,CADF,EAcE,6BAAC,iBAAD;AAAO,IAAA,WAAW,EAAC;AAAnB,KACE,6BAAC,aAAD;AACE,IAAA,WAAW,EAAEA,WADf;AAEE,IAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB;AAFR,gBADF,EAOE,6BAAC,cAAD;AACE,IAAA,WAAW,EAAEA,WADf;AAEE,IAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB;AAFR,YAPF,CAdF,CADF;AA+BD,CAlCM;;;AAoCP,IAAMC,SAAS,GAAG,+BAAOC,aAAP,CAAH;AAAA;AAAA;AAAA,0HAMJ,oBAAM,UAAN,CANI,CAAf;AAUA,IAAMC,aAAa,GAAG,+BAAOF,SAAP,CAAH;AAAA;AAAA;AAAA,qFAMJ,UAAAG,CAAC;AAAA,SAAKA,CAAC,CAACJ,WAAF,GAAgB,CAAhB,GAAoB,CAAzB;AAAA,CANG,CAAnB;AAUA,IAAMK,cAAc,GAAG,+BAAOJ,SAAP,CAAH;AAAA;AAAA;AAAA,oFAML,UAAAG,CAAC;AAAA,SAAKA,CAAC,CAACJ,WAAF,GAAgB,CAAhB,GAAoB,CAAzB;AAAA,CANI,CAApB;AAUA,IAAMM,WAAW,GAAG,+BAAOC,aAAP,CAAH;AAAA;AAAA;AAAA,mJAUJ,UAAAH,CAAC;AAAA,SAAKA,CAAC,CAACJ,WAAF,GAAgB,CAAhB,GAAoB,CAAzB;AAAA,CAVG,CAAjB;AAaA,IAAMQ,eAAe,GAAG,+BAAON,aAAP,CAAH;AAAA;AAAA;AAAA,uEAOjB;AAAA,MAAGO,WAAH,QAAGA,WAAH;AAAA,SACAA,WAAW,0CADX;AAAA,CAPiB,CAArB","sourcesContent":["import { color, Flex, Sans } from \"@artsy/palette\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { Media } from \"Utils/Responsive\"\n\ninterface VanguardFrameTextProps {\n  isSlideOpen?: boolean\n}\n\nexport const VanguardFrameText: React.SFC<VanguardFrameTextProps> = props => {\n  const { isSlideOpen } = props\n\n  return (\n    <>\n      <Media at=\"xs\">\n        <MobileFrame isSlideOpen={isSlideOpen}>\n          <MobileFrameText size=\"8\">The Artsy</MobileFrameText>\n          <MobileFrameText size=\"8\" isUppercase>\n            Vanguard\n          </MobileFrameText>\n          <MobileFrameText size=\"8\" isUppercase>\n            2019\n          </MobileFrameText>\n        </MobileFrame>\n      </Media>\n\n      {/* Desktop */}\n      <Media greaterThan=\"xs\">\n        <FrameTextLeft\n          isSlideOpen={isSlideOpen}\n          size={[\"12\", \"12\", \"14\", \"16\"]}\n        >\n          Vanguard\n        </FrameTextLeft>\n        <FrameTextRight\n          isSlideOpen={isSlideOpen}\n          size={[\"12\", \"12\", \"14\", \"16\"]}\n        >\n          2019\n        </FrameTextRight>\n      </Media>\n    </>\n  )\n}\n\nconst FrameText = styled(Sans)`\n  position: fixed;\n  top: 50%;\n  text-transform: uppercase;\n  z-index: 2;\n  mix-blend-mode: difference;\n  color: ${color(\"white100\")};\n  will-change: color;\n`\n\nconst FrameTextLeft = styled(FrameText)<{ isSlideOpen?: boolean }>`\n  left: 0;\n  transform: rotate(-90deg);\n  transform-origin: 30% 136%;\n\n  &&& {\n    z-index: ${p => (p.isSlideOpen ? 0 : 2)};\n  }\n`\n\nconst FrameTextRight = styled(FrameText)<{ isSlideOpen?: boolean }>`\n  right: 0;\n  transform: rotate(90deg);\n  transform-origin: 60% 60%;\n\n  &&& {\n    z-index: ${p => (p.isSlideOpen ? 0 : 2)};\n  }\n`\n\nconst MobileFrame = styled(Flex)<{\n  isSlideOpen?: boolean\n}>`\n  position: fixed;\n  flex-direction: column;\n  top: 65px;\n  left: -10px;\n  height: calc(100vh - 150px);\n  width: 60px;\n  justify-content: space-between;\n  z-index: ${p => (p.isSlideOpen ? 0 : 2)};\n`\n\nconst MobileFrameText = styled(Sans)<{\n  isUppercase?: boolean\n}>`\n  transform: rotate(90deg);\n  white-space: nowrap;\n  padding: 0 10px;\n\n  ${({ isUppercase }) =>\n    isUppercase &&\n    `\n    text-transform: uppercase;\n  `}\n`\n"],"file":"FrameText.js"}