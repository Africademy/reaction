{"version":3,"sources":["../../../../../../../src/Components/Publishing/EditorialFeature/Components/Vanguard2019/Components/TableOfContents.tsx"],"names":["VanguardTableOfContents","props","relatedArticles","article","onChangeSection","map","subSeries","i","subSeriesSlug","title","TocSvgs","type","Chapter","Box","SvgContainer","SeriesTitle","Sans","SeriesContainer"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;;;AAIO,IAAMA,uBAGX,GAAG,SAHQA,uBAGR,CAAAC,KAAK,EAAI;AAAA,MAECC,eAFD,GAIRD,KAJQ,CAEVE,OAFU,CAECD,eAFD;AAAA,MAGVE,eAHU,GAIRH,KAJQ,CAGVG,eAHU;AAMZ,SACE,6BAAC,YAAD;AACE,IAAA,EAAE,EAAE,GADN;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,SAAS,EAAC,MAHZ;AAIE,IAAA,UAAU,EAAE,oBAAM,UAAN;AAJd,KAME,6BAAC,aAAD;AAAM,IAAA,IAAI,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,CAAZ;AAAqC,IAAA,EAAE,EAAE;AAAzC,yBANF,EAUGF,eAAe,IACdA,eAAe,CAACG,GAAhB,CAAoB,UAACC,SAAD,EAAYC,CAAZ,EAAkB;AACpC,QAAMC,aAAa,GAAG,yBAAQF,SAAS,CAACG,KAAlB,CAAtB;AACA,WACE,6BAAC,eAAD;AACE,MAAA,GAAG,EAAEF,CADP;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMH,eAAe,CAACI,aAAD,CAArB;AAAA;AAFX,OAIE,6BAAC,YAAD,QAAeE,OAAO,CAACF,aAAD,CAAtB,CAJF,EAKE,6BAAC,OAAD,QACE,6BAAC,cAAD;AACE,MAAA,IAAI,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,CADR;AAEE,MAAA,EAAE,EAAE,CAFN;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,EAAE,EAAC;AAJL,OAMG,qBAAMD,CAAC,GAAG,CAAV,EAAa;AAAA,aAAM,GAAN;AAAA,KAAb,CANH,CADF,EASE,6BAAC,WAAD;AACE,MAAA,IAAI,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,CADR;AAEE,MAAA,EAAE,EAAE,CAFN;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,EAAE,EAAC;AAJL,OAMGD,SAAS,CAACG,KANb,CATF,CALF,CADF;AA0BD,GA5BD,CAXJ,CADF;AA2CD,CApDM;;;;AAsDA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAyB;AAC9C,UAAQA,IAAR;AACE,SAAK,UAAL;AACE,aAAO,6BAAC,mBAAD,OAAP;;AACF,SAAK,mBAAL;AACE,aAAO,6BAAC,mCAAD,OAAP;;AACF,SAAK,mBAAL;AACE,aAAO,6BAAC,iCAAD,OAAP;AANJ;AAQD,CATM;;;AAWP,IAAMC,OAAO,GAAG,+BAAOC,YAAP,CAAH;AAAA;AAAA;AAAA,0BAAb;AAIA,IAAMC,YAAY,GAAG,+BAAOD,YAAP,CAAH;AAAA;AAAA;AAAA,2EAAlB;AASA,IAAME,WAAW,GAAG,+BAAOC,aAAP,CAAH;AAAA;AAAA;AAAA,iCAAjB;AAIO,IAAMC,eAAe,GAAG,+BAAOJ,YAAP,CAAH;AAAA;AAAA;AAAA,yFAItBC,YAJsB,EAQtBF,OARsB,CAArB","sourcesContent":["import { Box, color, Sans, Serif } from \"@artsy/palette\"\nimport { Emerging1 } from \"Components/Publishing/EditorialFeature/Components/Vanguard2019/Blobs/Emerging\"\nimport { GettingTheirDue1 } from \"Components/Publishing/EditorialFeature/Components/Vanguard2019/Blobs/GettingTheirDue\"\nimport { NewlyEstablished1 } from \"Components/Publishing/EditorialFeature/Components/Vanguard2019/Blobs/NewlyEstablished\"\nimport { ArticleData } from \"Components/Publishing/Typings\"\nimport { times } from \"lodash\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { slugify } from \"underscore.string\"\n\ntype SubSeriesType = \"emerging\" | \"newly-established\" | \"getting-their-due\"\n\nexport const VanguardTableOfContents: React.SFC<{\n  article: ArticleData\n  onChangeSection: (slug: string) => void\n}> = props => {\n  const {\n    article: { relatedArticles },\n    onChangeSection,\n  } = props\n\n  return (\n    <Box\n      pb={100}\n      textAlign=\"center\"\n      minHeight=\"70vh\"\n      background={color(\"white100\")}\n    >\n      <Sans size={[\"8\", \"12\", \"14\", \"16\"]} mb={4}>\n        Table of Contents\n      </Sans>\n\n      {relatedArticles &&\n        relatedArticles.map((subSeries, i) => {\n          const subSeriesSlug = slugify(subSeries.title) as SubSeriesType\n          return (\n            <SeriesContainer\n              key={i}\n              onClick={() => onChangeSection(subSeriesSlug)}\n            >\n              <SvgContainer>{TocSvgs(subSeriesSlug)}</SvgContainer>\n              <Chapter>\n                <Serif\n                  size={[\"8\", \"10\", \"12\", \"12\"]}\n                  pb={2}\n                  maxWidth={1000}\n                  mx=\"auto\"\n                >\n                  {times(i + 1, () => \"I\")}\n                </Serif>\n                <SeriesTitle\n                  size={[\"8\", \"10\", \"12\", \"14\"]}\n                  pb={2}\n                  maxWidth={1000}\n                  mx=\"auto\"\n                >\n                  {subSeries.title}\n                </SeriesTitle>\n              </Chapter>\n            </SeriesContainer>\n          )\n        })}\n    </Box>\n  )\n}\n\nexport const TocSvgs = (type: SubSeriesType) => {\n  switch (type) {\n    case \"emerging\":\n      return <Emerging1 />\n    case \"newly-established\":\n      return <NewlyEstablished1 />\n    case \"getting-their-due\":\n      return <GettingTheirDue1 />\n  }\n}\n\nconst Chapter = styled(Box)`\n  position: relative;\n`\n\nconst SvgContainer = styled(Box)`\n  position: absolute;\n  left: 0;\n  top: -50%;\n  right: 0;\n  bottom: auto;\n  display: none;\n`\n\nconst SeriesTitle = styled(Sans)`\n  text-transform: uppercase;\n`\n\nexport const SeriesContainer = styled(Box)`\n  position: relative;\n\n  &:hover {\n    ${SvgContainer} {\n      display: block;\n    }\n\n    ${Chapter} {\n      color: white;\n      cursor: pointer;\n    }\n  }\n`\n"],"file":"TableOfContents.js"}