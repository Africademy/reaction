{"version":3,"sources":["../../../../../../src/Components/Publishing/EditorialFeature/Components/Vanguard2019/index.tsx"],"names":["Vanguard2019","isSlideOpen","slug","scrollTarget","document","getElementById","scrollIntoView","behavior","validPaths","props","article","relatedArticles","forEach","series","push","title","map","artist","validSlugs","state","setState","getValidPaths","window","addEventListener","handleScrollOnLoad","bind","removeEventListener","scrollSlugs","location","pathname","split","filter","length","scrollToSlug","includes","onChangeSection","history","replaceState","isMobile","isTest","subSeries","i","id","onFullScreenProviderStateChange","React","Component","VanguardWrapper","Box","ArtistWrapper","NavContainer"],"mappings":"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","sourcesContent":["import { Box } from \"@artsy/palette\"\nimport { VanguardCredits } from \"Components/Publishing/EditorialFeature/Components/Vanguard2019/Components/VanguardCredits\"\nimport { EditorialFeaturesProps } from \"Components/Publishing/EditorialFeature/EditorialFeature\"\nimport { Nav, NavContainer } from \"Components/Publishing/Nav/Nav\"\nimport { last } from \"lodash\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { slugify } from \"underscore.string\"\nimport { ArtistWrapper } from \"./Components/ArtistWrapper\"\nimport { VanguardFooter } from \"./Components/Footer\"\nimport { VanguardFrameText } from \"./Components/FrameText\"\nimport { VanguardIntroduction } from \"./Components/Introduction\"\nimport { VanguardSeriesWrapper } from \"./Components/SeriesWrapper\"\nimport { VanguardTableOfContents } from \"./Components/TableOfContents\"\n\nexport class Vanguard2019 extends React.Component<\n  EditorialFeaturesProps,\n  {\n    isSlideOpen: boolean\n    isTest?: boolean\n  }\n> {\n  state = {\n    isSlideOpen: false,\n  }\n  public validSlugs\n\n  onChangeSection = slug => {\n    const scrollTarget = document.getElementById(slug)\n    scrollTarget &&\n      scrollTarget.scrollIntoView({\n        behavior: \"smooth\",\n      })\n  }\n\n  componentDidMount() {\n    this.getValidPaths()\n    window.addEventListener(\"load\", this.handleScrollOnLoad.bind(this))\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"load\", this.handleScrollOnLoad)\n  }\n\n  handleScrollOnLoad() {\n    const scrollSlugs = window.location.pathname\n      .split(\"/series/artsy-vanguard-2019/\")\n      .filter(({ length }) => length)\n    const scrollToSlug = scrollSlugs.length && last(scrollSlugs)\n\n    if (this.validSlugs.includes(scrollToSlug)) {\n      this.onChangeSection(scrollToSlug)\n    }\n    // remove slug from pathname\n    window.history.replaceState({}, \"\", \"/series/artsy-vanguard-2019\")\n  }\n\n  getValidPaths = () => {\n    const validPaths = []\n\n    this.props.article.relatedArticles.forEach(series => {\n      // get subSeries slug\n      validPaths.push(slugify(series.title))\n      series.relatedArticles.map(artist => {\n        // get artist slug\n        validPaths.push(slugify(artist.title))\n      })\n    })\n    this.validSlugs = validPaths\n  }\n\n  onFullScreenProviderStateChange = (state: boolean) => {\n    this.setState({ isSlideOpen: !state })\n  }\n\n  render() {\n    const { article, isMobile, isTest } = this.props\n    const { isSlideOpen } = this.state\n    const { relatedArticles } = article\n\n    return (\n      <VanguardWrapper isSlideOpen={isSlideOpen}>\n        <Nav\n          canFix\n          color=\"black\"\n          backgroundColor=\"white\"\n          title={article.title}\n          isSlideOpen={isSlideOpen}\n        />\n\n        {/** floating title text */}\n        <VanguardFrameText isSlideOpen={isSlideOpen} />\n\n        {/** header landing video & intro text */}\n        <VanguardIntroduction article={article} isMobile={isMobile} />\n\n        {/** table of contents */}\n        <VanguardTableOfContents\n          article={article}\n          onChangeSection={this.onChangeSection}\n        />\n\n        {/** map 3 sub-series articles */}\n        {relatedArticles &&\n          relatedArticles.map((subSeries, i) => (\n            <VanguardSeriesWrapper\n              key={subSeries.id}\n              article={subSeries}\n              index={i}\n              isMobile={isMobile}\n              onSlideshowStateChange={this.onFullScreenProviderStateChange}\n              isTest={isTest}\n            />\n          ))}\n\n        {/** display credits at end of article series on mobile */}\n        {isMobile && <VanguardCredits isMobile={isMobile} />}\n        <VanguardFooter />\n      </VanguardWrapper>\n    )\n  }\n}\n\nconst VanguardWrapper = styled(Box)<{ isSlideOpen: boolean }>`\n  overflow: ${({ isSlideOpen }) => isSlideOpen && \"hidden\"};\n\n  ${ArtistWrapper} {\n    z-index: unset;\n  }\n\n  ${NavContainer} {\n    position: fixed;\n  }\n`\n"],"file":"index.js"}