{"version":3,"sources":["../../../../src/Components/Publishing/Email/EmailPanel.tsx"],"names":["EmailPanel","page","dispatch","data","Events","postEvent","value","error","submitted","disabled","message","setState","state","match","EMAIL_REGEX","request","post","props","signupUrl","send","email","set","end","err","res","flashMessage","tracking","trackEvent","action","context_type","setTimeout","e","target","onInputChange","length","onClick","React","Component","Input","styled","input","isError","Colors","redMedium","isReadOnly","borderedInput","EmailPanelContainer","div","Title","StyledButton","InvertedButton","Form"],"mappings":"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","sourcesContent":["import { avantgarde, unica } from \"Assets/Fonts\"\nimport React from \"react\"\nimport track, { TrackingProp } from \"react-tracking\"\nimport styled from \"styled-components\"\nimport request from \"superagent\"\nimport Colors from \"../../../Assets/Colors\"\nimport Events from \"../../../Utils/Events\"\nimport InvertedButton from \"../../Buttons/Inverted\"\nimport { borderedInput } from \"../../Mixins\"\nimport { EMAIL_REGEX } from \"../Constants\"\n\ninterface EmailPanelProps {\n  signupUrl: string\n  tracking?: TrackingProp\n}\n\ninterface EmailPanelState {\n  value: string\n  error: boolean\n  submitted: boolean\n  disabled: boolean\n  message: string\n}\n\ninterface InputProps extends React.HTMLProps<HTMLInputElement> {\n  isError: boolean\n  isReadOnly: boolean\n}\n\n@track(\n  { page: \"Article\" },\n  {\n    dispatch: data => Events.postEvent(data),\n  }\n)\nexport class EmailPanel extends React.Component<\n  EmailPanelProps,\n  EmailPanelState\n> {\n  state = {\n    value: \"\",\n    error: false,\n    submitted: false,\n    disabled: false,\n    message: \"\",\n  }\n\n  onClick = () => {\n    this.setState({ disabled: true })\n    if (this.state.value.match(EMAIL_REGEX)) {\n      request\n        .post(this.props.signupUrl)\n        .send({ email: this.state.value })\n        .set(\"accept\", \"json\")\n        .end((err, res) => {\n          if (err) {\n            this.flashMessage(\"Error. Please try again\", true, false)\n          } else {\n            this.flashMessage(\"Thank you!\", false, true)\n            this.props.tracking.trackEvent({\n              action: \"Sign up for editorial email\",\n              context_type: \"article_fixed\",\n            })\n          }\n        })\n    } else {\n      this.flashMessage(\"Invalid Email... Please try again\", true, false)\n    }\n  }\n\n  flashMessage = (message, error, submitted) => {\n    this.setState({ message, error })\n    setTimeout(() => {\n      this.setState({ message: \"\", disabled: false, error: false, submitted })\n    }, 2000)\n  }\n\n  onInputChange = e => {\n    this.setState({ value: e.target.value, error: null })\n  }\n\n  render() {\n    if (this.state.submitted) {\n      return <div />\n    } else {\n      return (\n        <EmailPanelContainer>\n          <Title>Stay up to date with Artsy Editorial</Title>\n          <Form>\n            <Input\n              type=\"email\"\n              placeholder=\"Enter Your Email...\"\n              onChange={this.onInputChange}\n              value={this.state.message || this.state.value}\n              readOnly={this.state.message.length > 0}\n              isError={this.state.error}\n              isReadOnly={this.state.message.length > 0}\n            />\n            <StyledButton disabled={this.state.disabled} onClick={this.onClick}>\n              Subscribe\n            </StyledButton>\n          </Form>\n        </EmailPanelContainer>\n      )\n    }\n  }\n}\n\nconst Input = styled.input<InputProps>`\n  width: 100%;\n  border-width: 1px;\n  color: ${props => (props.isError ? Colors.redMedium : \"black\")};\n  ${props => (props.isReadOnly ? unica(\"s16\") : \"\")};\n  ${borderedInput as any};\n`\nconst EmailPanelContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 350px;\n  width: 100%;\n`\nconst Title = styled.div`\n  ${unica(\"s16\", \"medium\")};\n  margin-bottom: 10px;\n`\nconst StyledButton = styled(InvertedButton)`\n  border-radius: 2px;\n  height: 30px;\n  width: 80px;\n  margin-left: -100px;\n  ${avantgarde(\"s11\")};\n`\nconst Form = styled.div`\n  display: flex;\n`\n"],"file":"EmailPanel.js"}