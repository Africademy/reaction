{"version":3,"sources":["../../../../../../src/Components/Publishing/Header/Layouts/Components/FeatureSplitHeader.tsx"],"names":["FeatureSplitHeader","props","article","hero_section","seriesArticle","editImage","url","isVideo","includes","src","length","width","HeaderTextContainer","Box","TextContainer","SubContentContainer","BylineContainer","media","md","Title","FeatureVideo","styled","video","FeatureAssetContainer","ImageContainer","div","Img","img","FeatureSplitHeaderContainer","Flex","hasNav"],"mappings":"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","sourcesContent":["import { Box, Flex, media, space } from \"@artsy/palette\"\nimport { BylineContainer } from \"Components/Publishing/Byline/Byline\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { resize } from \"Utils/resizer\"\nimport { Media } from \"Utils/Responsive\"\nimport { EditImage, FeatureHeaderProps } from \"../FeatureHeader\"\nimport {\n  FeatureInnerContent,\n  FeatureInnerSubContent,\n  SubContentContainer,\n  TextContainer,\n  Title,\n} from \"./FeatureInnerContent\"\n\nexport const FeatureSplitHeader: React.SFC<FeatureHeaderProps> = props => {\n  const {\n    article: { hero_section, seriesArticle },\n    editImage,\n  } = props\n\n  const url = (hero_section && hero_section.url) || \"\"\n  const isVideo = url.includes(\"mp4\")\n  const src = !isVideo && url.length && resize(url, { width: 1600 })\n\n  return (\n    <FeatureSplitHeaderContainer\n      hasNav={(seriesArticle || editImage) && true}\n      justifyContent=\"space-between\"\n      flexDirection={[\"column\", \"column\", \"row\", \"row\"]}\n    >\n      <HeaderTextContainer width={[\"100%\", \"100%\", \"50%\", \"50%\"]} p={20}>\n        <FeatureInnerContent {...props} />\n      </HeaderTextContainer>\n\n      <FeatureAssetContainer\n        width={[\"100%\", \"100%\", \"50%\", \"50%\"]}\n        p={[0, 0, 20, 20]}\n      >\n        {editImage && <EditImage>{editImage}</EditImage>}\n        {isVideo ? (\n          <FeatureVideo\n            src={url}\n            autoPlay\n            controls={false}\n            loop\n            muted\n            playsInline\n          />\n        ) : (\n          src && (\n            <ImageContainer src={src}>\n              <Img src={src} />\n            </ImageContainer>\n          )\n        )}\n      </FeatureAssetContainer>\n\n      <Media lessThan=\"md\">\n        <HeaderTextContainer width=\"100%\" px={20}>\n          <FeatureInnerSubContent {...props} />\n        </HeaderTextContainer>\n      </Media>\n    </FeatureSplitHeaderContainer>\n  )\n}\n\nconst HeaderTextContainer = styled(Box)`\n  ${TextContainer} {\n    height: 100%;\n    justify-content: space-between;\n  }\n\n  ${SubContentContainer} {\n    display: block;\n  }\n\n  ${BylineContainer} {\n    margin-top: ${space(3)}px;\n  }\n\n  ${media.md`\n    ${Title} {\n      margin-bottom: 20px;\n    }\n    ${TextContainer} {\n      ${SubContentContainer} {\n        display: none;\n      }\n    }\n  `};\n`\n\nconst FeatureVideo = styled.video`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n\n  ${media.md`\n    height: auto;\n  `};\n`\n\nexport const FeatureAssetContainer = styled(Box)`\n  flex: 1;\n  overflow: hidden;\n  position: relative;\n\n  img {\n    display: none;\n  }\n\n  ${media.md`\n    height: fit-content;\n    overflow: inherit;\n\n    img {\n      display: block;\n    }\n  `};\n`\n\nconst ImageContainer = styled.div<{ src?: string }>`\n  ${props =>\n    props.src &&\n    `\n  background-image: url(${props.src});\n  `};\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  height: 100%;\n\n  ${media.md`\n    height: fit-content;\n    ${props =>\n      props.src &&\n      `\n      background-image: none;\n      height: fit-content;\n    `}\n  `};\n`\n\nconst Img = styled.img`\n  width: 100%;\n`\n\nexport const FeatureSplitHeaderContainer = styled(Flex)<{\n  hasNav?: boolean\n}>`\n  height: ${props => (props.hasNav ? \"100vh\" : \"calc(100vh - 61px)\")};\n  min-height: fit-content;\n\n  ${props =>\n    !props.hasNav &&\n    `\n    margin-top: 61px;\n  `};\n`\n"],"file":"FeatureSplitHeader.js"}