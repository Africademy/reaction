{"version":3,"sources":["../../../../src/Components/Publishing/Sections/Author.tsx"],"names":["Author","author","color","profileImage","image_url","width","bio","length","name","twitter_handle","ProfileImage","Box","props","src","pMedia","xs","AuthorContainer","Flex","AuthorInfo","styled","span","TwitterHandle","a","Icon"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAOO,IAAMA,MAA8B,GAAG,SAAjCA,MAAiC,OAAiC;AAAA,MAA9BC,MAA8B,QAA9BA,MAA8B;AAAA,wBAAtBC,KAAsB;AAAA,MAAtBA,KAAsB,2BAAd,OAAc;AAC7E,MAAMC,YAAY,GAAGF,MAAM,CAACG,SAAP,GACnB,6BAAC,YAAD;AAAc,IAAA,EAAE,EAAE,EAAlB;AAAsB,IAAA,GAAG,EAAE,qBAAOH,MAAM,CAACG,SAAd,EAAyB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAzB;AAA3B,IADmB,GAGnB,KAHF;AAKA,SACE,6BAAC,eAAD;AAAiB,IAAA,KAAK,EAAEH,KAAxB;AAA+B,IAAA,EAAE,EAAE,EAAnC;AAAuC,IAAA,UAAU,EAAC;AAAlD,KACGC,YADH,EAEE,6BAAC,aAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAe,IAAA,MAAM,EAAC;AAAtB,KACE,6BAAC,UAAD,QACGF,MAAM,CAACK,GAAP,IAAcL,MAAM,CAACK,GAAP,CAAWC,MAAzB,GACC,6BAAC,sBAAD;AACE,IAAA,MAAM,EAAEN,MAAM,CAACK,GADjB;AAEE,IAAA,eAAe,EAAE,CAAC,WAAD,CAFnB;AAGE,IAAA,gBAAgB,MAHlB;AAIE,IAAA,gBAAgB,EAAC;AAJnB,IADD,GAQC,0CAAML,MAAM,CAACO,IAAb,CATJ,CADF,EAcGP,MAAM,CAACQ,cAAP,IAAyBR,MAAM,CAACQ,cAAP,CAAsBF,MAA/C,GACC,2CACE,6BAAC,aAAD;AAAe,IAAA,IAAI,+BAAwBN,MAAM,CAACQ,cAA/B;AAAnB,KACE,6BAAC,aAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,KAAK,EAAEP;AAA5B,IADF,aAEOD,MAAM,CAACQ,cAFd,EADF,CADD,GAQC,KAtBJ,CAFF,CADF;AA8BD,CApCM;;;AAsCP,IAAMC,YAAY,GAAG,+BAAOC,YAAP,CAAH;AAAA;AAAA;AAAA,kIAIE,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,GAAN,IAAa,EAAjB;AAAA,CAJP,EAOdC,gBAAOC,EAPO,oBAAlB;AAaA,IAAMC,eAAe,GAAG,+BAAOC,aAAP,CAAH;AAAA;AAAA;AAAA,kCACV,UAAAL,KAAK;AAAA,SAAIA,KAAK,CAACV,KAAV;AAAA,CADK,EAIR,UAAAU,KAAK;AAAA,SAAIA,KAAK,CAACV,KAAV;AAAA,CAJG,CAArB;;AAQA,IAAMgB,UAAU,GAAGC,0BAAOC,IAAV;AAAA;AAAA;AAAA,6BACE,oBAAM,CAAN,CADF,CAAhB;;AAIA,IAAMC,aAAa,GAAGF,0BAAOG,CAAV;AAAA;AAAA;AAAA,sFAIfC,aAJe,CAAnB","sourcesContent":["import { Box, Flex, Sans, space } from \"@artsy/palette\"\nimport { pMedia } from \"Components/Helpers\"\nimport Icon from \"Components/Icon\"\nimport React from \"react\"\nimport Markdown from \"react-markdown\"\nimport styled from \"styled-components\"\nimport { resize } from \"Utils/resizer\"\n\ninterface AuthorProps {\n  author: any\n  color?: string\n}\n\nexport const Author: React.SFC<AuthorProps> = ({ author, color = \"black\" }) => {\n  const profileImage = author.image_url ? (\n    <ProfileImage mr={20} src={resize(author.image_url, { width: 200 })} />\n  ) : (\n    false\n  )\n  return (\n    <AuthorContainer color={color} mb={20} alignItems=\"center\">\n      {profileImage}\n      <Sans size=\"4\" weight=\"medium\">\n        <AuthorInfo>\n          {author.bio && author.bio.length ? (\n            <Markdown\n              source={author.bio}\n              disallowedTypes={[\"Paragraph\"]}\n              unwrapDisallowed\n              containerTagName=\"span\"\n            />\n          ) : (\n            <div>{author.name}</div>\n          )}\n        </AuthorInfo>\n\n        {author.twitter_handle && author.twitter_handle.length ? (\n          <span>\n            <TwitterHandle href={`http://twitter.com/${author.twitter_handle}`}>\n              <Icon name=\"twitter\" color={color} />\n              {`@${author.twitter_handle}`}\n            </TwitterHandle>\n          </span>\n        ) : (\n          false\n        )}\n      </Sans>\n    </AuthorContainer>\n  )\n}\n\nconst ProfileImage = styled(Box)<{ src?: string }>`\n  min-width: 60px;\n  min-height: 60px;\n  border-radius: 50%;\n  background: url(${props => props.src || \"\"}) no-repeat center center;\n  background-size: cover;\n\n  ${pMedia.xs`\n    min-width: 40px;\n    min-height: 40px;\n  `};\n`\n\nconst AuthorContainer = styled(Flex)<{ color: string }>`\n  color: ${props => props.color};\n\n  a {\n    color: ${props => props.color};\n  }\n`\n\nconst AuthorInfo = styled.span`\n  margin-right: ${space(2)}px;\n`\n\nconst TwitterHandle = styled.a`\n  text-decoration: none;\n  white-space: nowrap;\n\n  ${Icon} {\n    vertical-align: middle;\n    margin: 0;\n  }\n`\n"],"file":"Author.js"}