{"version":3,"sources":["../../../../../src/Components/Publishing/Sections/FullscreenViewer/FullScreenProvider.tsx"],"names":["FullScreenProvider","slideIndex","viewerIsOpen","index","body","document","getElementsByTagName","setAttribute","props","onSlideshowStateChange","slideshowStateChange","setState","state","closeViewer","onViewFullscreen","openViewer","children","Component","PropTypes","func","isRequired","number","bool"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAYaA,kB;;;;;;;;;;;;;;;;;;4DACH;AACNC,MAAAA,UAAU,EAAE,CADN;AAENC,MAAAA,YAAY,EAAE;AAFR,K;;iEAuBK,UAAAC,KAAK,EAAI;AACpB,UAAMC,IAAI,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAb;AACAF,MAAAA,IAAI,CAACG,YAAL,CAAkB,OAAlB,EAA2B,mBAA3B;;AAEA,UAAI,MAAKC,KAAL,CAAWC,sBAAf,EAAuC;AACrC,cAAKC,oBAAL;AACD;;AAED,YAAKC,QAAL,CAAc;AACZT,QAAAA,YAAY,EAAE,IADF;AAEZD,QAAAA,UAAU,EAAEE;AAFA,OAAd;AAID,K;;kEAEa,YAAM;AAClB,UAAMC,IAAI,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAb;AACAF,MAAAA,IAAI,CAACG,YAAL,CAAkB,OAAlB,EAA2B,mBAA3B;;AAEA,UAAI,MAAKC,KAAL,CAAWC,sBAAf,EAAuC;AACrC,cAAKC,oBAAL;AACD;;AAED,YAAKC,QAAL,CAAc;AACZT,QAAAA,YAAY,EAAE,KADF;AAEZD,QAAAA,UAAU,EAAE,CAFA,CAEG;;AAFH,OAAd;AAID,K;;2EAEsB,YAAM;AAC3B,aAAO,MAAKO,KAAL,CAAWC,sBAAX,CAAkC,MAAKG,KAAL,CAAWV,YAA7C,CAAP;AACD,K;;;;;;;sCAxCiB;AAChB,aAAO;AACLW,QAAAA,WAAW,EAAE,KAAKA,WADb;AAELC,QAAAA,gBAAgB,EAAE,KAAKC,UAFlB;AAGLA,QAAAA,UAAU,EAAE,KAAKA,UAHZ;AAILd,QAAAA,UAAU,EAAE,KAAKW,KAAL,CAAWX,UAJlB;AAKLC,QAAAA,YAAY,EAAE,KAAKU,KAAL,CAAWV;AALpB,OAAP;AAOD;;;6BAkCQ;AAAA,UACCc,QADD,GACc,KAAKR,KADnB,CACCQ,QADD;AAAA,wBAE8B,KAAKJ,KAFnC;AAAA,UAECX,UAFD,eAECA,UAFD;AAAA,UAEaC,YAFb,eAEaA,YAFb;;AAIP,UAAI,0BAAWc,QAAX,CAAJ,EAA0B;AACxB,eAAOA,QAAQ,CAAC;AACdH,UAAAA,WAAW,EAAE,KAAKA,WADJ;AAEdC,UAAAA,gBAAgB,EAAE,KAAKC,UAFT;AAGdA,UAAAA,UAAU,EAAE,KAAKA,UAHH;AAIdd,UAAAA,UAAU,EAAVA,UAJc;AAKdC,UAAAA,YAAY,EAAZA;AALc,SAAD,CAAf;AAOD,OARD,MAQO;AACL,eAAOc,QAAP;AACD;AACF;;;;EAvEqCC,gB;;;;gBAA3BjB,kB,uBAMgB;AACzBa,EAAAA,WAAW,EAAEK,mBAAUC,IAAV,CAAeC,UADH;AAEzBN,EAAAA,gBAAgB,EAAEI,mBAAUC,IAAV,CAAeC,UAFR;AAGzBL,EAAAA,UAAU,EAAEG,mBAAUC,IAAV,CAAeC,UAHF;AAIzBnB,EAAAA,UAAU,EAAEiB,mBAAUG,MAAV,CAAiBD,UAJJ;AAKzBlB,EAAAA,YAAY,EAAEgB,mBAAUI,IAAV,CAAeF;AALJ,C","sourcesContent":["import { isFunction } from \"lodash\"\nimport PropTypes from \"prop-types\"\nimport { Component } from \"react\"\n\ninterface Props {\n  children: any\n  onSlideshowStateChange?: (state: boolean) => void\n}\n\ninterface State {\n  viewerIsOpen: boolean\n  slideIndex: number\n}\n\nexport class FullScreenProvider extends Component<Props, State> {\n  state = {\n    slideIndex: 0,\n    viewerIsOpen: false,\n  }\n\n  static childContextTypes = {\n    closeViewer: PropTypes.func.isRequired,\n    onViewFullscreen: PropTypes.func.isRequired,\n    openViewer: PropTypes.func.isRequired,\n    slideIndex: PropTypes.number.isRequired,\n    viewerIsOpen: PropTypes.bool.isRequired,\n  }\n\n  getChildContext() {\n    return {\n      closeViewer: this.closeViewer,\n      onViewFullscreen: this.openViewer,\n      openViewer: this.openViewer,\n      slideIndex: this.state.slideIndex,\n      viewerIsOpen: this.state.viewerIsOpen,\n    }\n  }\n\n  openViewer = index => {\n    const body = document.getElementsByTagName(\"BODY\")[0]\n    body.setAttribute(\"style\", \"overflow: hidden;\")\n\n    if (this.props.onSlideshowStateChange) {\n      this.slideshowStateChange()\n    }\n\n    this.setState({\n      viewerIsOpen: true,\n      slideIndex: index,\n    })\n  }\n\n  closeViewer = () => {\n    const body = document.getElementsByTagName(\"BODY\")[0]\n    body.setAttribute(\"style\", \"overflow: scroll;\")\n\n    if (this.props.onSlideshowStateChange) {\n      this.slideshowStateChange()\n    }\n\n    this.setState({\n      viewerIsOpen: false,\n      slideIndex: 0, // go to beginning on close\n    })\n  }\n\n  slideshowStateChange = () => {\n    return this.props.onSlideshowStateChange(this.state.viewerIsOpen)\n  }\n\n  render() {\n    const { children } = this.props\n    const { slideIndex, viewerIsOpen } = this.state\n\n    if (isFunction(children)) {\n      return children({\n        closeViewer: this.closeViewer,\n        onViewFullscreen: this.openViewer,\n        openViewer: this.openViewer,\n        slideIndex,\n        viewerIsOpen,\n      })\n    } else {\n      return children\n    }\n  }\n}\n"],"file":"FullScreenProvider.js"}