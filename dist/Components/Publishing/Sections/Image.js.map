{"version":3,"sources":["../../../../src/Components/Publishing/Sections/Image.tsx"],"names":["Image","props","children","color","editing","editCaption","height","image","layout","linked","sectionLayout","slideshowIndex","width","caption","shouldIncreaseResizeWidth","sd","IS_MOBILE","src","url","quality","GLOBAL_IMAGE_QUALITY","alt","replace","defaultProps"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;AAeO,IAAMA,KAA4B,GAAG,SAA/BA,KAA+B,CAAAC,KAAK,EAAI;AAAA,MAEjDC,QAFiD,GAa/CD,KAb+C,CAEjDC,QAFiD;AAAA,MAGjDC,KAHiD,GAa/CF,KAb+C,CAGjDE,KAHiD;AAAA,MAIjDC,OAJiD,GAa/CH,KAb+C,CAIjDG,OAJiD;AAAA,MAKjDC,WALiD,GAa/CJ,KAb+C,CAKjDI,WALiD;AAAA,MAMjDC,MANiD,GAa/CL,KAb+C,CAMjDK,MANiD;AAAA,MAOjDC,KAPiD,GAa/CN,KAb+C,CAOjDM,KAPiD;AAAA,MAQjDC,MARiD,GAa/CP,KAb+C,CAQjDO,MARiD;AAAA,MASjDC,MATiD,GAa/CR,KAb+C,CASjDQ,MATiD;AAAA,MAUjDC,aAViD,GAa/CT,KAb+C,CAUjDS,aAViD;AAAA,MAWjDC,cAXiD,GAa/CV,KAb+C,CAWjDU,cAXiD;AAAA,MAYjDC,KAZiD,GAa/CX,KAb+C,CAYjDW,KAZiD;AAenD,MAAMC,OAAO,GAAGN,KAAK,CAACM,OAAN,IAAiB,EAAjC;AACA,MAAMC,yBAAyB,GAC7B,CAACC,cAAGC,SAAJ,IAAiBN,aAAa,KAAK,WADrC;AAEA,MAAMO,GAAG,GAAG,qBAAOV,KAAK,CAACW,GAAb,EAAkB;AAC5BN,IAAAA,KAAK,EAAEE,yBAAyB,GAAG,IAAH,GAAU,IADd;AAE5BK,IAAAA,OAAO,EAAEC;AAFmB,GAAlB,CAAZ;AAIA,MAAMC,GAAG,GAAGR,OAAO,CAACS,OAAR,CAAgB,UAAhB,EAA4B,EAA5B,CAAZ;AAA4C;;AAE5C,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,6BAAC,0BAAD;AACE,IAAA,MAAM,EAAEb,MADV;AAEE,IAAA,MAAM,EAAED,MAFV;AAGE,IAAA,GAAG,EAAES,GAHP;AAIE,IAAA,KAAK,EAAEL,KAJT;AAKE,IAAA,MAAM,EAAEN,MALV;AAME,IAAA,GAAG,EAAEe,GANP;AAOE,IAAA,cAAc,EAAEV,cAPlB;AAQE,IAAA,OAAO,EAAEN,WAAW,IAAID;AAR1B,IADF,EAYE,6BAAC,gBAAD;AACE,IAAA,OAAO,EAAES,OADX;AAEE,IAAA,KAAK,EAAEV,KAFT;AAGE,IAAA,MAAM,EAAEK,MAHV;AAIE,IAAA,aAAa,EAAEE;AAJjB,KAMGL,WAAW,IAAIA,WAAW,EAN7B,CAZF,EAoBGH,QApBH,CADF;AAwBD,CAhDM;;;AAkDPF,KAAK,CAACuB,YAAN,GAAqB;AACnBX,EAAAA,KAAK,EAAE,MADY;AAEnBN,EAAAA,MAAM,EAAE,MAFW;AAGnBG,EAAAA,MAAM,EAAE;AAHW,CAArB","sourcesContent":["import React from \"react\"\nimport { data as sd } from \"sharify\"\nimport { resize } from \"../../../Utils/resizer\"\nimport { GLOBAL_IMAGE_QUALITY } from \"../Constants\"\nimport { ArticleLayout, SectionLayout } from \"../Typings\"\nimport { Caption } from \"./Caption\"\nimport { ImageWrapper } from \"./ImageWrapper\"\n\ninterface ImageProps extends React.HTMLProps<HTMLDivElement> {\n  color?: string\n  editCaption?: any\n  editing?: boolean\n  image?: any\n  layout?: ArticleLayout\n  linked?: boolean\n  sectionLayout?: SectionLayout\n  width?: number | string\n  height?: number | string\n  slideshowIndex?: number\n}\n\nexport const Image: React.SFC<ImageProps> = props => {\n  const {\n    children,\n    color,\n    editing,\n    editCaption,\n    height,\n    image,\n    layout,\n    linked,\n    sectionLayout,\n    slideshowIndex,\n    width,\n  } = props\n\n  const caption = image.caption || \"\"\n  const shouldIncreaseResizeWidth =\n    !sd.IS_MOBILE && sectionLayout === \"fillwidth\"\n  const src = resize(image.url, {\n    width: shouldIncreaseResizeWidth ? 2000 : 1200,\n    quality: GLOBAL_IMAGE_QUALITY,\n  })\n  const alt = caption.replace(/<[^>]*>/g, \"\") /* strip caption html */\n\n  return (\n    <div className=\"article-image\">\n      <ImageWrapper\n        linked={linked}\n        layout={layout}\n        src={src}\n        width={width}\n        height={height}\n        alt={alt}\n        slideshowIndex={slideshowIndex}\n        editing={editCaption || editing}\n      />\n\n      <Caption\n        caption={caption}\n        color={color}\n        layout={layout}\n        sectionLayout={sectionLayout}\n      >\n        {editCaption && editCaption()}\n      </Caption>\n      {children}\n    </div>\n  )\n}\n\nImage.defaultProps = {\n  width: \"100%\",\n  height: \"auto\",\n  linked: true,\n}\n"],"file":"Image.js"}