{"version":3,"sources":["../../../../../src/Components/Publishing/Sections/ImageSetPreview/ImageSetLabel.tsx"],"names":["ImageSetLabel","props","color","section","images","title","label","length","imageCount","primaryTitle","textColor","undefined","IconContainer","styled","div","LabelWrapper","Flex","SlideshowTitle","Sans","SlideshowCta"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;AAGO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAiC;AAAA,MAE1DC,KAF0D,GAIxDD,KAJwD,CAE1DC,KAF0D;AAAA,uBAIxDD,KAJwD,CAG1DE,OAH0D;AAAA,MAG/CC,MAH+C,kBAG/CA,MAH+C;AAAA,MAGvCC,KAHuC,kBAGvCA,KAHuC;AAK5D,MAAMC,KAAK,GAAGF,MAAM,CAACG,MAAP,KAAkB,CAAlB,GAAsB,OAAtB,GAAgC,QAA9C;AACA,MAAMC,UAAU,aAAMJ,MAAM,CAACG,MAAb,cAAuBD,KAAvB,CAAhB;AACA,MAAMG,YAAY,GAAGJ,KAAK,GAAGA,KAAH,GAAWG,UAArC;AACA,MAAME,SAAS,GAAGR,KAAK,KAAK,OAAV,GAAoBA,KAApB,GAA4BS,SAA9C;AAEA,SACE,6BAAC,YAAD;AAAc,IAAA,UAAU,EAAC,QAAzB;AAAkC,IAAA,cAAc,EAAC;AAAjD,KACE,6BAAC,aAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAA6B,IAAA,cAAc,EAAC;AAA5C,KACE,6BAAC,cAAD;AACE,IAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,CADR;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,KAAK,EAAED;AAJT,KAMGD,YANH,CADF,EAUE,6BAAC,YAAD,QACE,6BAAC,aAAD;AAAM,IAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,CAAZ;AAAwB,IAAA,MAAM,EAAC,QAA/B;AAAwC,IAAA,KAAK,EAAEC;AAA/C,sBADF,EAIGL,KAAK,IACJ,6BAAC,aAAD;AAAM,IAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,CAAZ;AAAwB,IAAA,EAAE,EAAE,EAA5B;AAAgC,IAAA,KAAK,EAAEK;AAAvC,KACGF,UADH,CALJ,CAVF,CADF,EAuBE,6BAAC,iBAAD;AAAO,IAAA,kBAAkB,EAAC;AAA1B,KACE,6BAAC,aAAD,QACE,6BAAC,0BAAD;AAAc,IAAA,KAAK,EAAEE;AAArB,IADF,CADF,CAvBF,CADF;AA+BD,CAzCM;;;;AA2CA,IAAME,aAAa,GAAGC,0BAAOC,GAAV;AAAA;AAAA;AAAA,6FAGT,oBAAM,CAAN,CAHS,CAAnB;;;AAWA,IAAMC,YAAY,GAAG,+BAAOC,aAAP,CAAH;AAAA;AAAA;AAAA,mCACZ,oBAAM,CAAN,CADY,CAAlB,C,CAKP;;;AACO,IAAMC,cAAc,GAAG,+BAAOC,aAAP,CAAH;AAAA;AAAA;AAAA,QAApB;;AACA,IAAMC,YAAY,GAAG,+BAAOH,aAAP,CAAH;AAAA;AAAA;AAAA,QAAlB","sourcesContent":["import { Flex, Sans, space } from \"@artsy/palette\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nimport { IconImageSet } from \"Components/Publishing/Icon/IconImageSet\"\nimport { Media } from \"Utils/Responsive\"\nimport { ImageSetPreviewProps } from \"./ImageSetPreview\"\n\nexport const ImageSetLabel = (props: ImageSetPreviewProps) => {\n  const {\n    color,\n    section: { images, title },\n  } = props\n  const label = images.length === 1 ? \"Image\" : \"Images\"\n  const imageCount = `${images.length} ${label}`\n  const primaryTitle = title ? title : imageCount\n  const textColor = color !== \"white\" ? color : undefined\n\n  return (\n    <LabelWrapper alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\" justifyContent=\"space-between\">\n        <SlideshowTitle\n          size={[\"4\", \"5\"]}\n          weight=\"medium\"\n          pb={2}\n          color={textColor}\n        >\n          {primaryTitle}\n        </SlideshowTitle>\n\n        <SlideshowCta>\n          <Sans size={[\"2\", \"3\"]} weight=\"medium\" color={textColor}>\n            View Slideshow\n          </Sans>\n          {title && (\n            <Sans size={[\"2\", \"3\"]} pl={20} color={textColor}>\n              {imageCount}\n            </Sans>\n          )}\n        </SlideshowCta>\n      </Flex>\n\n      <Media greaterThanOrEqual=\"sm\">\n        <IconContainer>\n          <IconImageSet color={textColor} />\n        </IconContainer>\n      </Media>\n    </LabelWrapper>\n  )\n}\n\nexport const IconContainer = styled.div`\n  height: 45px;\n  position: relative;\n  margin-left: ${space(4)}px;\n  text-align: right;\n\n  > svg {\n    height: 98%;\n  }\n`\n\nexport const LabelWrapper = styled(Flex)`\n  padding: ${space(2)}px;\n  width: 100%;\n`\n\n// exported for targeting from outside components\nexport const SlideshowTitle = styled(Sans)``\nexport const SlideshowCta = styled(Flex)``\n"],"file":"ImageSetLabel.js"}