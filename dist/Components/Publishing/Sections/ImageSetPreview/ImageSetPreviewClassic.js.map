{"version":3,"sources":["../../../../../src/Components/Publishing/Sections/ImageSetPreview/ImageSetPreviewClassic.tsx"],"names":["Wrapper","styled","div","Text","Remaining","IconContainer","container","containerHeight","iconContainer","margin","ImageSetPreviewClassic","props","state","visibleImages","getVisibleImages","images","widths","hidden","map","item","i","adjustedWidth","width","height","push","total","reduce","a","b","margins","length","items","slice","src","image","url","alt","caption","replace","title","marginRight","display","renderImages","Component","Div","Length","imgLength"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,IAAMA,OAAO,GAAGC,0BAAOC,GAAV;AAAA;AAAA;AAAA,6DAAb;;AAMA,IAAMC,IAAI,GAAGF,0BAAOC,GAAV;AAAA;AAAA;AAAA,0CACN,uBAAW,KAAX,CADM,CAAV;;AAKA,IAAME,SAAS,GAAGH,0BAAOC,GAAV;AAAA;AAAA;AAAA,mKAAf;;AAWA,IAAMG,aAAa,GAAGJ,0BAAOC,GAAV;AAAA;AAAA;AAAA,wDAAnB;;AAKA,IAAMI,SAAS,GAAG,GAAlB;AACA,IAAMC,eAAe,GAAG,GAAxB;AACA,IAAMC,aAAa,GAAG,EAAtB;AACA,IAAMC,MAAM,GAAG,EAAf;;IAUaC,sB;;;;;AAIX,kCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gGAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,MAAKC,gBAAL,CAAsB,MAAKH,KAAL,CAAWI,MAAjC;AADJ,KAAb;AAFiB;AAKlB;;;;qCAEgBA,M,EAAQ;AACvB,UAAMC,MAAM,GAAG,EAAf;AACA,UAAIC,MAAM,GAAG,CAAb;AACAF,MAAAA,MAAM,CAACG,GAAP,CAAW,UAACC,IAAD,EAAOC,CAAP,EAAa;AACtB,YAAMC,aAAa,GAAId,eAAe,GAAGY,IAAI,CAACG,KAAxB,GAAiCH,IAAI,CAACI,MAA5D;AACAP,QAAAA,MAAM,CAACQ,IAAP,CAAYH,aAAZ;AACA,YAAMI,KAAK,GAAGT,MAAM,CAACU,MAAP,CAAc,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,GAAGC,CAAd;AAAA,SAAd,EAA+B,CAA/B,CAAd;AACA,YAAMC,OAAO,GAAGb,MAAM,CAACc,MAAP,GAAgBrB,MAAhC;;AACA,YAAIgB,KAAK,GAAGI,OAAR,GAAkBrB,aAAlB,GAAkCF,SAAtC,EAAiD;AAC/CW,UAAAA,MAAM,GAAGA,MAAM,GAAG,CAAlB;AACD;AACF,OARD;AASA,aAAOD,MAAM,CAACc,MAAP,GAAgBb,MAAvB;AACD;;;iCAEYF,M,EAAQ;AAAA;;AACnB,UAAMgB,KAAK,GAAGhB,MAAM,CAACiB,KAAP,CAAa,CAAb,EAAgB,CAAhB,EAAmBd,GAAnB,CAAuB,UAACC,IAAD,EAAOC,CAAP,EAAa;AAChD,YAAMa,GAAG,GAAG,qBAAOd,IAAI,CAACe,KAAL,IAAcf,IAAI,CAACgB,GAAnB,IAA0B,EAAjC,EAAqC;AAAEb,UAAAA,KAAK,EAAE;AAAT,SAArC,CAAZ;AACA,YAAMc,GAAG,GAAGjB,IAAI,CAACkB,OAAL,GACRlB,IAAI,CAACkB,OAAL,CAAaC,OAAb,CAAqB,UAArB,EAAiC,EAAjC,CADQ,GAERnB,IAAI,CAACoB,KAAL,IAAc,EAFlB;;AAGA,YAAInB,CAAC,GAAG,MAAI,CAACR,KAAL,CAAWC,aAAnB,EAAkC;AAChC,iBACE;AACE,YAAA,GAAG,EAAE,cAAcO,CADrB;AAEE,YAAA,GAAG,EAAEa,GAFP;AAGE,YAAA,MAAM,EAAE1B,eAHV;AAIE,YAAA,SAAS,EAAC,yBAJZ;AAKE,YAAA,KAAK,EAAE;AAAEiC,cAAAA,WAAW,EAAE/B;AAAf,aALT;AAME,YAAA,GAAG,EAAE2B;AANP,YADF;AAUD;AACF,OAjBa,EAiBX,IAjBW,CAAd;AAkBA,aAAOL,KAAP;AACD;;;6BAEQ;AAAA,UACChB,MADD,GACY,KAAKJ,KADjB,CACCI,MADD;AAGP,aACE,6BAAC,OAAD;AAAS,QAAA,SAAS,EAAC;AAAnB,SACE;AACE,QAAA,SAAS,EAAC,6BADZ;AAEE,QAAA,KAAK,EAAE;AAAE0B,UAAAA,OAAO,EAAE;AAAX;AAFT,SAIG,KAAKC,YAAL,CAAkB3B,MAAlB,CAJH,CADF,EAOE,6BAAC,SAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SACE,6BAAC,aAAD;AAAe,QAAA,SAAS,EAAC;AAAzB,SACE,6BAAC,0BAAD,OADF,EAEE,6BAAC,MAAD;AACE,QAAA,SAAS,EAAC,0BADZ;AAEE,QAAA,SAAS,EAAEA,MAAM,CAACe;AAFpB,SAIE,6BAAC,IAAD,QAAOf,MAAM,CAACe,MAAd,CAJF,CAFF,CADF,EAUE,6BAAC,IAAD;AAAM,QAAA,SAAS,EAAC;AAAhB,2BAVF,CAPF,CADF;AAsBD;;;;EAzEyCa,gB;;;AA4E5C,IAAMC,GAAgC,GAAG3C,0BAAOC,GAAhD;AACA,IAAM2C,MAAM,GAAGD,GAAH,oBAEF,UAAAjC,KAAK;AAAA,SAAKA,KAAK,CAACmC,SAAN,GAAkB,CAAlB,GAAsB,KAAtB,GAA8B,KAAnC;AAAA,CAFH,CAAZ","sourcesContent":["import { avantgarde } from \"Assets/Fonts\"\nimport { ImagesData } from \"Components/Publishing/Typings\"\nimport React, { Component } from \"react\"\nimport styled, { StyledFunction } from \"styled-components\"\nimport { resize } from \"../../../../Utils/resizer\"\nimport { IconImageSet } from \"../../Icon/IconImageSet\"\n\ninterface LengthProps extends React.HTMLProps<HTMLDivElement> {\n  imgLength: number\n}\n\nconst Wrapper = styled.div`\n  max-width: 580px;\n  width: 100%;\n  height: 150px;\n  display: flex;\n`\nconst Text = styled.div`\n  ${avantgarde(\"s11\")};\n  line-height: 1.35em;\n  margin: 0;\n`\nconst Remaining = styled.div`\n  min-width: 50px;\n  padding: 10px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #e5e5e5;\n  text-align: center;\n`\nconst IconContainer = styled.div`\n  width: 32px;\n  margin-bottom: 10px;\n  position: relative;\n`\nconst container = 560\nconst containerHeight = 150\nconst iconContainer = 50\nconst margin = 10\n\nexport interface ImageSetPreviewClassicProps {\n  images: ImagesData\n}\n\ninterface ImageSetPreviewClassicState {\n  visibleImages: number\n}\n\nexport class ImageSetPreviewClassic extends Component<\n  ImageSetPreviewClassicProps,\n  ImageSetPreviewClassicState\n> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visibleImages: this.getVisibleImages(this.props.images),\n    }\n  }\n\n  getVisibleImages(images) {\n    const widths = []\n    let hidden = 0\n    images.map((item, i) => {\n      const adjustedWidth = (containerHeight * item.width) / item.height\n      widths.push(adjustedWidth)\n      const total = widths.reduce((a, b) => a + b, 0)\n      const margins = widths.length * margin\n      if (total + margins + iconContainer > container) {\n        hidden = hidden + 1\n      }\n    })\n    return widths.length - hidden\n  }\n\n  renderImages(images) {\n    const items = images.slice(0, 4).map((item, i) => {\n      const src = resize(item.image || item.url || \"\", { width: 500 })\n      const alt = item.caption\n        ? item.caption.replace(/<[^>]*>/g, \"\")\n        : item.title || \"\"\n      if (i < this.state.visibleImages) {\n        return (\n          <img\n            key={\"imageset-\" + i}\n            src={src}\n            height={containerHeight}\n            className=\"imageset-preview__image\"\n            style={{ marginRight: margin }}\n            alt={alt}\n          />\n        )\n      }\n    }, this)\n    return items\n  }\n\n  render() {\n    const { images } = this.props\n\n    return (\n      <Wrapper className=\"imageset-preview\">\n        <div\n          className=\"imageset-preview__container\"\n          style={{ display: \"flex\" }}\n        >\n          {this.renderImages(images)}\n        </div>\n        <Remaining className=\"imageset-preview__remaining\">\n          <IconContainer className=\"imageset-preview__icon-container\">\n            <IconImageSet />\n            <Length\n              className=\"imageset-preview__length\"\n              imgLength={images.length}\n            >\n              <Text>{images.length}</Text>\n            </Length>\n          </IconContainer>\n          <Text className=\"imageset-preview__text\">Enter Slideshow</Text>\n        </Remaining>\n      </Wrapper>\n    )\n  }\n}\n\nconst Div: StyledFunction<LengthProps> = styled.div\nconst Length = Div`\n  position: absolute;\n  left: ${props => (props.imgLength > 9 ? \"4px\" : \"8px\")};\n  top: 14px;\n`\n"],"file":"ImageSetPreviewClassic.js"}