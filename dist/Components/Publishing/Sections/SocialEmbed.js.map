{"version":3,"sources":["../../../../src/Components/Publishing/Sections/SocialEmbed.tsx"],"names":["TWITTER_EMBED_URL","INSTAGRAM_EMBED_URL","SocialEmbed","html","url","err","data","setState","fetch","then","response","json","catch","console","log","props","section","match","getEmbedUrl","includes","getInstagramEmbed","getTwitterEmbed","state","__html","React","Component","StyledEmbedContainer","EmbedContainer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAWA,IAAMA,iBAAiB,GAAG,oCAA1B;AACA,IAAMC,mBAAmB,GAAG,kCAA5B;;IAEaC,W;;;;;;;;;;;;;;;;;;4DAIH;AAAEC,MAAAA,IAAI,EAAE;AAAR,K;;sEAcU,UAAAC,GAAG,EAAI;AACvB,0BAAMA,GAAN,EAAW,UAACC,GAAD,EAAMC,IAAN,EAAe;AACxB,YAAID,GAAJ,EAAS;AACP;AACD;;AACD,cAAKE,QAAL,CAAc;AAAEJ,UAAAA,IAAI,EAAEG,IAAI,CAACH;AAAb,SAAd;AACD,OALD;AAMD,K;;wEAEmB,UAAAC,GAAG,EAAI;AACzBI,MAAAA,KAAK,CAACJ,GAAD,CAAL,CACGK,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQ,UAAAH,IAAI,EAAI;AACZ,cAAKC,QAAL,CAAc;AAAEJ,UAAAA,IAAI,EAAEG,IAAI,CAACH;AAAb,SAAd;AACD,OANH,EAOGS,KAPH,CAOS,UAAAP,GAAG,EAAI;AACZQ,QAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACA;AACD,OAVH;AAWD,K;;kEAEa,YAAM;AAAA,UACVD,GADU,GACF,MAAKW,KAAL,CAAWC,OADT,CACVZ,GADU;;AAGlB,UAAIA,GAAG,CAACa,KAAJ,CAAU,SAAV,CAAJ,EAA0B;AACxB,eAAOjB,iBAAiB,kBAAWI,GAAX,CAAxB;AACD,OAFD,MAEO,IAAIA,GAAG,CAACa,KAAJ,CAAU,OAAV,CAAJ,EAAwB;AAC7B,eAAOhB,mBAAmB,kBAAWG,GAAX,CAA1B;AACD;AACF,K;;;;;;;wCA3CmB;AAClB,UAAMA,GAAG,GAAG,KAAKc,WAAL,EAAZ;;AAEA,UAAId,GAAJ,EAAS;AACP,YAAIA,GAAG,CAACe,QAAJ,CAAa,WAAb,CAAJ,EAA+B;AAC7B,eAAKC,iBAAL,CAAuBhB,GAAvB;AACD,SAFD,MAEO;AACL,eAAKiB,eAAL,CAAqBjB,GAArB;AACD;AACF;AACF;;;6BAmCQ;AAAA,UACCD,IADD,GACU,KAAKmB,KADf,CACCnB,IADD;;AAGP,UAAIA,IAAJ,EAAU;AACR,eACE,6BAAC,oBAAD;AAAsB,UAAA,MAAM,EAAEA;AAA9B,WACE;AAAK,UAAA,uBAAuB,EAAE;AAAEoB,YAAAA,MAAM,EAAEpB;AAAV;AAA9B,UADF,CADF;AAKD,OAND,MAMO;AACL,eAAO,KAAP;AACD;AACF;;;;EA/D8BqB,eAAMC,S;;;AAkEvC,IAAMC,oBAAoB,GAAG,+BAAOC,6BAAP,CAAH;AAAA;AAAA;AAAA,iGAA1B","sourcesContent":["import \"isomorphic-fetch\"\nimport jsonp from \"jsonp\"\nimport React from \"react\"\nimport EmbedContainer from \"react-oembed-container\"\nimport styled from \"styled-components\"\nimport { SectionData } from \"../Typings\"\n\nexport interface SocialEmbedProps {\n  section: SectionData\n}\n\ninterface SocialEmbedState {\n  html: string\n}\n\nconst TWITTER_EMBED_URL = \"https://publish.twitter.com/oembed\"\nconst INSTAGRAM_EMBED_URL = \"https://api.instagram.com/oembed\"\n\nexport class SocialEmbed extends React.Component<\n  SocialEmbedProps,\n  SocialEmbedState\n> {\n  state = { html: \"\" }\n\n  componentDidMount() {\n    const url = this.getEmbedUrl()\n\n    if (url) {\n      if (url.includes(\"instagram\")) {\n        this.getInstagramEmbed(url)\n      } else {\n        this.getTwitterEmbed(url)\n      }\n    }\n  }\n\n  getTwitterEmbed = url => {\n    jsonp(url, (err, data) => {\n      if (err) {\n        return\n      }\n      this.setState({ html: data.html })\n    })\n  }\n\n  getInstagramEmbed = url => {\n    fetch(url)\n      .then(response => {\n        return response.json()\n      })\n      .then(data => {\n        this.setState({ html: data.html })\n      })\n      .catch(err => {\n        console.log(err)\n        return\n      })\n  }\n\n  getEmbedUrl = () => {\n    const { url } = this.props.section\n\n    if (url.match(\"twitter\")) {\n      return TWITTER_EMBED_URL + `?url=${url}`\n    } else if (url.match(\"insta\")) {\n      return INSTAGRAM_EMBED_URL + `?url=${url}`\n    }\n  }\n\n  render() {\n    const { html } = this.state\n\n    if (html) {\n      return (\n        <StyledEmbedContainer markup={html}>\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </StyledEmbedContainer>\n      )\n    } else {\n      return false\n    }\n  }\n}\n\nconst StyledEmbedContainer = styled(EmbedContainer)`\n  width: 100%;\n  max-width: 560px;\n  margin: auto;\n\n  twitterwidget {\n    margin-left: auto;\n    margin-right: auto;\n  }\n`\n"],"file":"SocialEmbed.js"}