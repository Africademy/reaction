{"version":3,"sources":["../../../../src/Components/Publishing/ToolTip/TooltipsDataLoader.tsx"],"names":["TooltipsDataLoader","props","article","children","user","relayEnvironment","shouldFetchData","onOpenAuthModal","artistSlugs","artists","geneSlugs","genes","readyState","data","Object","keys","forEach","key","col","Component","TooltipsContextProvider","activeToolTip","waitForFade","state","setTimeout","setState","onTriggerToolTip","tooltipsData","PropTypes","any","object","func","string","TooltipsData","Artsy","withSystemContext"],"mappings":"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","sourcesContent":["import { TooltipsDataLoaderQueryResponse } from \"__generated__/TooltipsDataLoaderQuery.graphql\"\nimport { TooltipsDataLoaderQuery } from \"__generated__/TooltipsDataLoaderQuery.graphql\"\nimport * as Artsy from \"Artsy\"\nimport { getArtsySlugsFromArticle } from \"Components/Publishing/Constants\"\nimport { ArticleData } from \"Components/Publishing/Typings\"\nimport { keyBy } from \"lodash\"\nimport PropTypes from \"prop-types\"\nimport React, { Component } from \"react\"\nimport { QueryRenderer } from \"react-relay\"\nimport { graphql } from \"react-relay\"\nimport { ArticleProps } from \"../Article\"\n\ninterface Props extends Artsy.SystemContextProps {\n  article: ArticleData\n  shouldFetchData?: boolean\n  onOpenAuthModal?: ArticleProps[\"onOpenAuthModal\"]\n}\n\nexport class TooltipsDataLoader extends Component<Props> {\n  static defaultProps = {\n    shouldFetchData: true,\n  }\n\n  render() {\n    const {\n      article,\n      children,\n      user,\n      relayEnvironment,\n      shouldFetchData,\n      onOpenAuthModal,\n    } = this.props\n\n    const { artists: artistSlugs, genes: geneSlugs } = getArtsySlugsFromArticle(\n      article\n    )\n\n    if (!shouldFetchData) {\n      return children\n    }\n\n    return (\n      <QueryRenderer<TooltipsDataLoaderQuery>\n        environment={relayEnvironment}\n        query={graphql`\n          query TooltipsDataLoaderQuery(\n            $artistSlugs: [String!]\n            $geneSlugs: [String!]\n          ) {\n            artists(slugs: $artistSlugs) {\n              id\n              _id\n              ...ArtistToolTip_artist\n              ...MarketDataSummary_artist\n              ...FollowArtistButton_artist\n            }\n            genes(slugs: $geneSlugs) {\n              id\n              _id\n              ...GeneToolTip_gene\n              ...FollowGeneButton_gene\n            }\n          }\n        `}\n        variables={{\n          artistSlugs,\n          geneSlugs,\n        }}\n        render={readyState => {\n          const data: TooltipsDataLoaderQueryResponse = {\n            artists: [],\n            genes: [],\n          }\n          Object.keys(readyState.props || {}).forEach(key => {\n            const col = readyState.props[key]\n            data[key] = keyBy(col, \"id\")\n          })\n          return (\n            <TooltipsContextProvider\n              {...data}\n              user={user}\n              onOpenAuthModal={onOpenAuthModal}\n            >\n              {children}\n            </TooltipsContextProvider>\n          )\n        }}\n      />\n    )\n  }\n}\n\nclass TooltipsContextProvider extends Component<any> {\n  static childContextTypes = {\n    activeToolTip: PropTypes.any,\n    user: PropTypes.object,\n    onOpenAuthModal: PropTypes.func,\n    onTriggerToolTip: PropTypes.func,\n    tooltipsData: PropTypes.object,\n    waitForFade: PropTypes.string,\n  }\n\n  state = {\n    activeToolTip: null,\n    waitForFade: null,\n  }\n\n  onTriggerToolTip = activeToolTip => {\n    if (activeToolTip !== this.state.activeToolTip) {\n      if (activeToolTip === null) {\n        setTimeout(() => {\n          this.setState({ waitForFade: null })\n        }, 250)\n      }\n      this.setState({ activeToolTip, waitForFade: this.state.activeToolTip })\n    }\n  }\n\n  getChildContext() {\n    const { artists, user, genes, onOpenAuthModal } = this.props\n    const { activeToolTip, waitForFade } = this.state\n\n    return {\n      activeToolTip,\n      user,\n      onOpenAuthModal,\n      onTriggerToolTip: this.onTriggerToolTip,\n      tooltipsData: {\n        artists,\n        genes,\n      },\n      waitForFade,\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport const TooltipsData = Artsy.withSystemContext(TooltipsDataLoader)\n"],"file":"TooltipsDataLoader.js"}