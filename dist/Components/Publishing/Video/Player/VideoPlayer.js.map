{"version":3,"sources":["../../../../../src/Components/Publishing/Video/Player/VideoPlayer.tsx"],"names":["VideoPlayer","props","action","label","isMuted","isPlaying","forcePlay","currentTime","duration","idleTime","showControls","setState","newIdleTime","state","e","target","trackProgress","video","pause","play","notifyPlayToggle","value","secondsComplete","Math","floor","percentComplete","percentCompleteInterval","trackDuration","trackSeconds","tracking","trackEvent","percent_complete","seconds_complete","toggleFullscreen","bind","addEventListener","updateTime","setDuration","document","resetTimer","timer","setInterval","incrementTimer","removeEventListener","clearInterval","nextProps","videoPlayer","url","title","container","toggleMute","togglePlay","seekTo","Component","VideoControlsParent","styled","div","Div","VideoContainer","VideoControlsContainer"],"mappings":"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","sourcesContent":["import { memoize } from \"lodash\"\nimport React, { Component } from \"react\"\nimport track, { TrackingProp } from \"react-tracking\"\n// @ts-ignore\nimport styled, { StyledComponentClass, StyledFunction } from \"styled-components\"\nimport {\n  addFSEventListener,\n  exitFullscreen,\n  fullscreenEnabled,\n  isFullscreen,\n  removeFSEventListener,\n  requestFullscreen,\n} from \"./FullscreenHelpers\"\nimport { VideoControls, VideoControlsContainer } from \"./VideoControls\"\n\nexport interface VideoPlayerProps extends React.HTMLProps<HTMLDivElement> {\n  url?: string\n  title?: string\n  notifyPlayToggle?: (e) => void\n  forcePlay?: boolean\n  tracking?: TrackingProp\n}\n\nexport interface VideoPlayerState {\n  isMuted: boolean\n  isPlaying: boolean\n  currentTime: number\n  duration: number\n  idleTime: number\n  showControls: boolean\n}\n\nexport interface DivProps {\n  showControls: boolean\n}\n\n@track()\nexport class VideoPlayer extends Component<VideoPlayerProps, VideoPlayerState> {\n  public video: HTMLVideoElement\n  public videoPlayer: HTMLDivElement\n  public timer\n\n  state = {\n    isMuted: false,\n    isPlaying: this.props.forcePlay,\n    currentTime: 0,\n    duration: 0,\n    idleTime: 0,\n    showControls: true,\n  }\n\n  constructor(props) {\n    super(props)\n    this.toggleFullscreen = this.toggleFullscreen.bind(this)\n  }\n\n  componentDidMount() {\n    if (this.video) {\n      if (fullscreenEnabled()) {\n        addFSEventListener(this.video)\n      }\n\n      this.video.addEventListener(\"timeupdate\", this.updateTime)\n      this.video.addEventListener(\"loadedmetadata\", this.setDuration)\n\n      document.addEventListener(\"mousemove\", this.resetTimer)\n      document.addEventListener(\"keypress\", this.resetTimer)\n      document.addEventListener(\"touchstart\", this.resetTimer)\n      this.timer = setInterval(this.incrementTimer, 1000)\n    }\n  }\n\n  componentWillUnmount() {\n    if (fullscreenEnabled()) {\n      removeFSEventListener(this.video)\n    }\n\n    this.video.removeEventListener(\"timeupdate\", this.updateTime)\n\n    document.removeEventListener(\"mousemove\", this.resetTimer)\n    document.removeEventListener(\"keypress\", this.resetTimer)\n    document.removeEventListener(\"touchstart\", this.resetTimer)\n    clearInterval(this.timer)\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.forcePlay) {\n      this.forcePlay()\n    }\n  }\n\n  resetTimer = () => {\n    this.setState({\n      showControls: true,\n      idleTime: 0,\n    })\n  }\n\n  incrementTimer = () => {\n    const newIdleTime = this.state.idleTime + 1\n\n    this.setState({\n      idleTime: newIdleTime,\n      showControls: newIdleTime > 3 ? false : true,\n    })\n  }\n\n  setDuration = e => {\n    this.setState({\n      duration: e.target.duration,\n    })\n  }\n\n  updateTime = e => {\n    this.trackProgress()\n    this.setState({\n      currentTime: e.target.currentTime,\n    })\n  }\n\n  togglePlay = () => {\n    if (this.state.isPlaying) {\n      this.video.pause()\n    } else {\n      this.video.play()\n    }\n\n    if (this.props.notifyPlayToggle) {\n      this.props.notifyPlayToggle(!this.state.isPlaying)\n    }\n\n    this.setState({\n      isPlaying: !this.state.isPlaying,\n    })\n  }\n\n  toggleMute = () => {\n    this.setState({\n      isMuted: !this.state.isMuted,\n    })\n  }\n\n  forcePlay = () => {\n    this.video.play()\n    this.setState({\n      isPlaying: true,\n    })\n  }\n\n  @track(props => {\n    return {\n      action: \"Click\",\n      label: \"Fullscreen video\",\n    }\n  })\n  toggleFullscreen() {\n    if (fullscreenEnabled()) {\n      if (isFullscreen()) {\n        exitFullscreen()\n      } else {\n        requestFullscreen(this.videoPlayer)\n      }\n    }\n  }\n\n  seekTo = value => {\n    this.video.currentTime = value\n    this.setState({\n      currentTime: value,\n    })\n  }\n\n  pause = () => {\n    this.video.pause()\n    this.setState({\n      isPlaying: false,\n    })\n  }\n\n  play = () => {\n    this.video.play()\n    this.setState({\n      isPlaying: true,\n    })\n  }\n\n  trackProgress = () => {\n    const secondsComplete = Math.floor(this.video.currentTime)\n    const percentComplete = Math.floor(\n      (this.video.currentTime / this.video.duration) * 100\n    )\n    const percentCompleteInterval = Math.floor(percentComplete / 25) * 25\n\n    // Track 25% duration intervals\n    if (percentCompleteInterval > 0) {\n      this.trackDuration(percentCompleteInterval)\n    }\n\n    // Track 3 & 10 seconds\n    if (secondsComplete === 3 || secondsComplete === 10) {\n      this.trackSeconds(secondsComplete)\n    }\n  }\n\n  trackDuration = memoize(percentComplete => {\n    this.props.tracking.trackEvent({\n      action: \"Video duration\",\n      label: \"Video duration\",\n      percent_complete: percentComplete,\n    })\n  })\n\n  trackSeconds = memoize(secondsComplete => {\n    this.props.tracking.trackEvent({\n      action: \"Video seconds\",\n      label: \"Video seconds\",\n      seconds_complete: secondsComplete,\n    })\n  })\n\n  render() {\n    const { url, title } = this.props\n\n    return (\n      <VideoContainer\n        ref={container => (this.videoPlayer = container)}\n        showControls={this.state.showControls}\n      >\n        <video\n          playsInline\n          src={url}\n          ref={video => (this.video = video)}\n          muted={this.state.isMuted}\n        />\n        <VideoControlsParent>\n          <VideoControls\n            title={title}\n            duration={this.state.duration}\n            currentTime={this.state.currentTime}\n            toggleFullscreen={this.toggleFullscreen}\n            toggleMute={this.toggleMute}\n            togglePlay={this.togglePlay}\n            pause={this.pause}\n            play={this.play}\n            seekTo={this.seekTo}\n            isMuted={this.state.isMuted}\n            isPlaying={this.state.isPlaying}\n          />\n        </VideoControlsParent>\n      </VideoContainer>\n    )\n  }\n}\n\nconst VideoControlsParent = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  max-width: 1200px;\n  width: 100%;\n`\n\nconst Div: StyledFunction<DivProps & React.HTMLProps<HTMLDivElement>> =\n  styled.div\nexport const VideoContainer = Div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  background-color: black;\n  video {\n    object-fit: contain;\n    width: 100%;\n    height: 100%;\n  }\n  ${VideoControlsContainer} {\n    opacity: ${props => (props.showControls ? \"1\" : \"0\")};\n  }\n`\n"],"file":"VideoPlayer.js"}