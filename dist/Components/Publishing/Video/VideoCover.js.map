{"version":3,"sources":["../../../../src/Components/Publishing/Video/VideoCover.tsx"],"names":["VideoCover","props","tracking","playVideo","trackEvent","action","label","article","editDescription","editTitle","hideCover","media","seriesLink","seriesTitle","cover_image_url","onPlayClick","vertical","name","title","description","Component","VideoCoverAsset","styled","div","src","VideoCoverOverlay","VideoCoverInfo","Flex","IconVideoPlay","VideoCoverContainer"],"mappings":"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","sourcesContent":["import { Box, Flex, Serif } from \"@artsy/palette\"\nimport React, { Component } from \"react\"\nimport track, { TrackingProp } from \"react-tracking\"\nimport styled from \"styled-components\"\n\nimport { IconVideoPlay } from \"Components/Publishing/Icon/IconVideoPlay\"\nimport { ArticleData, MediaData } from \"Components/Publishing/Typings\"\nimport { VideoInfoBlock } from \"./VideoInfoBlock\"\n\ninterface VideoCoverProps {\n  article: ArticleData\n  description?: string\n  editDescription?: any\n  editTitle?: any\n  hideCover?: boolean\n  media: MediaData\n  playVideo?: () => void\n  seriesLink?: string\n  seriesTitle?: string\n  tracking?: TrackingProp\n}\n\n@track()\nexport class VideoCover extends Component<VideoCoverProps> {\n  onPlayClick = () => {\n    const { tracking, playVideo } = this.props\n\n    tracking.trackEvent({\n      action: \"Click\",\n      label: \"Play video\",\n    })\n    playVideo()\n  }\n\n  render() {\n    const {\n      article,\n      editDescription,\n      editTitle,\n      hideCover,\n      media,\n      seriesLink,\n      seriesTitle,\n    } = this.props\n\n    return (\n      <VideoCoverContainer hideCover={hideCover}>\n        <VideoCoverAsset src={media.cover_image_url} />\n        <VideoCoverOverlay />\n\n        <VideoCoverInfo\n          width=\"100%\"\n          alignItems=\"flex-end\"\n          pb={[40, 60]}\n          px={20}\n        >\n          <Box maxWidth={1200} mx=\"auto\" pb=\"12px\">\n            <Flex>\n              <Box width=\"60px\" pr={20} onClick={this.onPlayClick}>\n                <IconVideoPlay color=\"white\" />\n              </Box>\n              <Box>\n                <VideoInfoBlock\n                  media={media}\n                  subTitle={\n                    seriesTitle || (article.vertical && article.vertical.name)\n                  }\n                  subTitleLink={seriesLink}\n                  title={article.title}\n                  editTitle={editTitle}\n                />\n              </Box>\n            </Flex>\n\n            <Box maxWidth={[\"100%\", \"60%\"]}>\n              <Serif size={[\"4\", \"5\", \"5\", \"5\"]} pt={30}>\n                {editDescription || article.description}\n              </Serif>\n            </Box>\n          </Box>\n        </VideoCoverInfo>\n      </VideoCoverContainer>\n    )\n  }\n}\n\nexport const VideoCoverAsset = styled.div<{ src?: string }>`\n  background: url(${props => props.src || \"\"}) no-repeat center center;\n  background-size: cover;\n  background-color: black;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`\n\nconst VideoCoverOverlay = styled.div`\n  background: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.6));\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`\n\nconst VideoCoverInfo = styled(Flex)`\n  box-sizing: border-box;\n  z-index: 1;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n\n  ${IconVideoPlay} {\n    height: 60px;\n    width: 44px;\n    cursor: pointer;\n  }\n`\n\nexport const VideoCoverContainer = styled.div<{ hideCover?: boolean }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  color: white;\n  opacity: ${props => (props.hideCover ? \"0\" : \"1\")};\n  visibility: ${props => (props.hideCover ? \"hidden\" : \"visible\")};\n  transition: opacity 0.25s ease, visibility 0.25s ease;\n`\n"],"file":"VideoCover.js"}