{"version":3,"sources":["../../src/Components/Spinner.tsx"],"names":["Spinner","props","className","React","Component","spin","keyframes","getSize","base","width","height","spinnerSize","StyledSpinner","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAQA;;;;IAIaA,O;;;;;;;;;;;;;6BACF;AACP,aAAO;AAAK,QAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC;AAA3B,QAAP;AACD;;;;EAH0BC,eAAMC,S;;;AAMnC,IAAMC,IAAI,OAAGC,2BAAH,sCAAV;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAN,KAAK,EAAI;AACvB,MAAMO,IAAI,GAAG;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,MAAM,EAAE,CAArB,CAEb;;AAFa,GAAb;;AAGA,UAAQT,KAAK,CAACU,WAAd;AACE,SAAK,OAAL;AACE,aAAO;AACLF,QAAAA,KAAK,EAAED,IAAI,CAACC,KAAL,GAAa,GADf;AAELC,QAAAA,MAAM,EAAEF,IAAI,CAACE,MAAL,GAAc;AAFjB,OAAP;;AAIF,SAAK,QAAL;AACE,aAAO;AACLD,QAAAA,KAAK,EAAED,IAAI,CAACC,KAAL,GAAa,GADf;AAELC,QAAAA,MAAM,EAAEF,IAAI,CAACE,MAAL,GAAc;AAFjB,OAAP;;AAIF,SAAK,OAAL;AACE,aAAO;AACLD,QAAAA,KAAK,EAAED,IAAI,CAACC,KADP;AAELC,QAAAA,MAAM,EAAEF,IAAI,CAACE;AAFR,OAAP;;AAIF;AACE,aAAO;AACLD,QAAAA,KAAK,EAAER,KAAK,CAACQ,KADR;AAELC,QAAAA,MAAM,EAAET,KAAK,CAACS;AAFT,OAAP;AAjBJ;AAsBD,CA1BD;;AA4BA,IAAME,aAAa,GAAG,+BAAOZ,OAAP,CAAH;AAAA;AAAA;AAAA,mFAEJK,IAFI,EAKf,UAACJ,KAAD,EAAkB;AAAA,iBACQM,OAAO,CAACN,KAAD,CADf;AAAA,MACVQ,KADU,YACVA,KADU;AAAA,MACHC,MADG,YACHA,MADG;;AAGlB,kCACWD,KADX,gCAEYC,MAFZ,wCAGoBA,MAHpB,8CAIqBD,KAJrB;AAMD,CAdgB,CAAnB;AAiBAG,aAAa,CAACC,YAAd,GAA6B;AAC3BJ,EAAAA,KAAK,EAAE,EADoB;AAE3BC,EAAAA,MAAM,EAAE;AAFmB,CAA7B;eAKeE,a","sourcesContent":["import React from \"react\"\n\nimport styled, { keyframes } from \"styled-components\"\n\ninterface Props extends React.HTMLProps<Spinner> {\n  width?: number\n  height?: number\n  spinnerSize?: \"small\" | \"medium\" | \"large\"\n}\n\n/**\n * @deprecated in favor of our Design System Spinner component in @artsy/palette\n * https://palette.artsy.net/elements/loaders/spinner\n */\nexport class Spinner extends React.Component<Props> {\n  render() {\n    return <div className={this.props.className} />\n  }\n}\n\nconst spin = keyframes`\n  100% {\n    transform: rotate(360deg);\n  }\n`\n\nconst getSize = props => {\n  const base = { width: 25, height: 6 }\n\n  // tslint:disable-next-line\n  switch (props.spinnerSize) {\n    case \"small\":\n      return {\n        width: base.width * 0.5,\n        height: base.height * 0.5,\n      }\n    case \"medium\":\n      return {\n        width: base.width * 0.8,\n        height: base.height * 0.8,\n      }\n    case \"large\":\n      return {\n        width: base.width,\n        height: base.height,\n      }\n    default:\n      return {\n        width: props.width,\n        height: props.height,\n      }\n  }\n}\n\nconst StyledSpinner = styled(Spinner)`\n  background: black;\n  animation: ${spin} 1s infinite linear;\n  position: absolute;\n\n  ${(props: Props) => {\n    const { width, height } = getSize(props)\n\n    return `\n      width: ${width}px;\n      height: ${height}px;\n      top: calc(50% - ${height}px / 2);\n      left: calc(50% - ${width}px / 2);\n    `\n  }};\n`\n\nStyledSpinner.defaultProps = {\n  width: 25,\n  height: 6,\n}\n\nexport default StyledSpinner\n"],"file":"Spinner.js"}