{"version":3,"sources":["../../../src/Components/StepMarker/index.tsx"],"names":["StepMarker","props","state","computeStepState","nextProps","currentStepIndex","setState","steps","stepState","map","step","i","isActive","isComplete","style","key","onClick","label","Component","Container","styled","div","Markers","Mark","circleSize","bgColor","colors","white","circleBorderColor","grayRegular","connectingBorderColor","black","StyledText","Text","StyledIcon","Icon"],"mappings":"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","sourcesContent":["import { unica } from \"Assets/Fonts\"\nimport React, { Component } from \"react\"\nimport { ReactNode } from \"react\"\nimport styled from \"styled-components\"\nimport colors from \"../../Assets/Colors\"\nimport Icon from \"../Icon\"\nimport Text from \"../Text\"\n\nexport interface RenderProps {\n  nextStep: () => void\n  previousStep: () => void\n  gotoStep: (index: number) => void\n  stepState: StepMarkerState\n  isComplete: () => boolean\n}\n\nexport interface StepMarkerProps {\n  children?: (renderProps: RenderProps) => ReactNode | void\n  steps: MarkLabel[]\n  style?: any\n  onChange?: any\n  currentStepIndex: number\n}\n\nexport interface StepMarkerState {\n  currentStepIndex: number\n  steps: MarkState[]\n}\n\nexport type MarkState = MarkLabel & { isActive: boolean; isComplete: boolean }\n\nexport interface MarkLabel {\n  label?: string\n  onClick?: any\n}\n\nexport class StepMarker extends Component<StepMarkerProps, StepMarkerState> {\n  constructor(props: StepMarkerProps) {\n    super(props)\n    this.state = this.computeStepState(props)\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.currentStepIndex !== this.props.currentStepIndex) {\n      this.setState(this.computeStepState(nextProps))\n    }\n  }\n\n  computeStepState(props) {\n    const { currentStepIndex, steps } = props\n    const stepState = steps.map((step, i) => {\n      const isActive = i === currentStepIndex\n      const isComplete = i < currentStepIndex\n      return { ...step, isActive, isComplete }\n    })\n    return {\n      steps: stepState,\n      currentStepIndex,\n    }\n  }\n\n  render() {\n    const { style } = this.props\n    const { steps } = this.state\n\n    return (\n      <Container style={style}>\n        <Markers>\n          {steps.map((step, key) => {\n            return (\n              <Mark {...step} key={key}>\n                {step.isComplete && <StyledIcon name=\"check\" color=\"white\" />}\n                <StyledText onClick={step.onClick} align=\"center\">\n                  {step.label}\n                </StyledText>\n              </Mark>\n            )\n          })}\n        </Markers>\n      </Container>\n    )\n  }\n}\n\nconst Container = styled.div`\n  padding: 20px;\n`\n\nconst Markers = styled.div`\n  display: flex;\n`\n\nconst Mark = styled.div`\n  ${(props: MarkState) => {\n    const { isActive, isComplete } = props\n    const circleSize = \"10px\" // + 2px border\n    let bgColor = colors.white\n    let circleBorderColor = colors.grayRegular\n    let connectingBorderColor = colors.grayRegular\n\n    if (isActive) {\n      bgColor = colors.white\n      circleBorderColor = colors.black\n    }\n    if (isComplete) {\n      bgColor = colors.black\n      circleBorderColor = colors.black\n      connectingBorderColor = colors.black\n    }\n\n    return `\n      position: relative;\n      padding: 12px;\n      text-align: center;\n      width: 100%;\n\n      &::before {\n        background: ${bgColor};\n        border-radius: 50%;\n        border: 2px solid ${circleBorderColor};\n        top: calc(-${circleSize} / 2);\n        left: calc(50% - calc(${circleSize} / 2));\n        width: ${circleSize};\n        height: ${circleSize};\n        position: absolute;\n        content: \" \";\n        z-index: 2;\n      }\n\n      &::after {\n        border-top: 2px solid ${connectingBorderColor};\n        width: 100%;\n        left: 50%;\n        top: 1px;\n        position: absolute;\n        content: \" \";\n      }\n\n      &:last-child:after {\n        border-top: none;\n      }\n    `\n  }};\n`\n\nconst StyledText = styled(Text)`\n  ${unica(\"s12\", \"regular\")};\n  margin-top: 0;\n  margin-bottom: 0;\n`\n\nconst StyledIcon = styled(Icon)`\n  width: 100%;\n  text-align: center;\n  font-size: 6px;\n  color: white;\n  position: absolute;\n  top: -1px;\n  left: -3px;\n  z-index: 3;\n`\n"],"file":"index.js"}