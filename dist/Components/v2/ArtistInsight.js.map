{"version":3,"sources":["../../../src/Components/v2/ArtistInsight.tsx"],"names":["ICON_MAPPING","HIGH_AUCTION","AuctionIcon","SOLO_SHOW","SoloIcon","GROUP_SHOW","GroupIcon","BIENNIAL","FairIcon","REVIEWED","BookIcon","COLLECTED","MuseumIcon","BLUE_CHIP","BlueChipIcon","TOP_ESTABLISHED","TopEstablishedIcon","TOP_EMERGING","TopEmergingIcon","ArtistInsight","props","context_module","Schema","ContextModule","ArtistInsights","context_submodule","type","action_type","ActionType","Click","subject","expanded","setState","entities","length","state","join","handleExpand","bind","insightType","Component","label","value","renderIcon","renderEntities","React"],"mappings":"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","sourcesContent":["import { Box, Flex, Link, Sans } from \"@artsy/palette\"\nimport { track } from \"Artsy/Analytics\"\nimport * as Schema from \"Artsy/Analytics/Schema\"\nimport React from \"react\"\n\nimport {\n  AuctionIcon,\n  BlueChipIcon,\n  BookIcon,\n  FairIcon,\n  GroupIcon,\n  MuseumIcon,\n  SoloIcon,\n  TopEmergingIcon,\n  TopEstablishedIcon,\n} from \"@artsy/palette\"\n\ninterface ArtistInsightProps {\n  type: string\n  label: string\n  value?: string\n  entities?: ReadonlyArray<string>\n}\n\nconst ICON_MAPPING = {\n  HIGH_AUCTION: AuctionIcon,\n  SOLO_SHOW: SoloIcon,\n  GROUP_SHOW: GroupIcon,\n  BIENNIAL: FairIcon,\n  REVIEWED: BookIcon,\n  COLLECTED: MuseumIcon,\n  BLUE_CHIP: BlueChipIcon,\n  TOP_ESTABLISHED: TopEstablishedIcon,\n  TOP_EMERGING: TopEmergingIcon,\n}\n\n@track<ArtistInsightProps>(props => ({\n  context_module: Schema.ContextModule.ArtistInsights,\n  context_submodule: props.type,\n}))\nexport class ArtistInsight extends React.Component<ArtistInsightProps> {\n  state = {\n    expanded: false,\n  }\n\n  @track<ArtistInsightProps>(() => ({\n    action_type: Schema.ActionType.Click,\n    subject: \"Read more\",\n    type: \"Link\",\n  }))\n  handleExpand() {\n    this.setState({ expanded: true })\n  }\n\n  renderEntities() {\n    const { entities } = this.props\n\n    if (!entities || entities.length < 1) {\n      return null\n    } else if (this.state.expanded) {\n      return (\n        <Sans size=\"2\" verticalAlign=\"top\" color=\"black60\">\n          {entities.join(\", \")}.\n        </Sans>\n      )\n    } else {\n      return (\n        <Sans size=\"2\" verticalAlign=\"top\" color=\"black60\" textAlign=\"left\">\n          {entities[0]}\n\n          {entities.length > 1 && (\n            <>\n              , and{\" \"}\n              <Link onClick={this.handleExpand.bind(this)}>\n                {entities.length - 1}\n                &nbsp;more\n              </Link>\n            </>\n          )}\n        </Sans>\n      )\n    }\n  }\n\n  renderIcon(insightType) {\n    const Component = ICON_MAPPING[insightType]\n\n    return <Component />\n  }\n\n  render() {\n    const { label, type, value, entities } = this.props\n\n    if (value || (entities && entities.length > 0)) {\n      return (\n        <Flex mt={1} width={[\"100%\", \"48%\"]}>\n          <Flex pr={1}>{this.renderIcon(type)}</Flex>\n          <Flex flexDirection=\"column\">\n            <Box>\n              <Sans size=\"2\">{label}</Sans>\n              {value && (\n                <Sans size=\"2\" color=\"black60\">\n                  {value}\n                </Sans>\n              )}\n              {this.renderEntities()}\n            </Box>\n          </Flex>\n        </Flex>\n      )\n    }\n  }\n}\n"],"file":"ArtistInsight.js"}