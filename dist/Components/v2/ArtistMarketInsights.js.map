{"version":3,"sources":["../../../src/Components/v2/ArtistMarketInsights.tsx"],"names":["CATEGORIES","CATEGORY_LABEL_MAP","MarketInsights","props","artist","auctionResults","edges","length","topAuctionResult","node","display","price_realized","organization","sale_date","highlights","partners","highCategory","collections","label","join","Container","border","BorderBox","Box","renderAuctionHighlight","renderGalleryRepresentation","renderPermanentCollection","children","React","Component","ArtistMarketInsightsFragmentContainer","TextWrap"],"mappings":"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","sourcesContent":["import { BorderBox, Box, Flex, Sans } from \"@artsy/palette\"\nimport { ArtistMarketInsights_artist } from \"__generated__/ArtistMarketInsights_artist.graphql\"\nimport {\n  hasSections,\n  highestCategory,\n} from \"Apps/Artist/Components/MarketInsights/MarketInsights\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { Media } from \"Utils/Responsive\"\n\nexport interface MarketInsightsProps {\n  artist: ArtistMarketInsights_artist\n  border?: boolean\n  Container?: (props: { children: JSX.Element }) => JSX.Element\n}\n\nconst CATEGORIES = {\n  \"blue-chip\": \"Blue chip\",\n  \"top-established\": \"Established\",\n  \"top-emerging\": \"Emerging\",\n}\nconst CATEGORY_LABEL_MAP = {\n  \"blue-chip\": \"Represented by internationally recognized galleries.\",\n  \"top-established\": \"Represented by industry leading galleries.\",\n  \"top-emerging\": \"Represented by up-and-coming galleries.\",\n}\n\nexport class MarketInsights extends React.Component<MarketInsightsProps> {\n  static defaultProps = {\n    border: true,\n  }\n\n  renderAuctionHighlight() {\n    if (\n      !this.props.artist.auctionResults ||\n      this.props.artist.auctionResults.edges.length < 1\n    ) {\n      return null\n    }\n    const topAuctionResult = this.props.artist.auctionResults.edges[0].node\n    const display = `${topAuctionResult.price_realized.display}, ${\n      topAuctionResult.organization\n    }, ${topAuctionResult.sale_date}`\n    return (\n      <TextWrap>\n        <Sans size=\"2\" weight=\"medium\" display=\"inline\" mr={1}>\n          High auction record\n        </Sans>\n        <Sans size=\"2\" display=\"inline\" color=\"black60\">\n          {display}\n        </Sans>\n      </TextWrap>\n    )\n  }\n  renderGalleryRepresentation() {\n    const { highlights } = this.props.artist\n    const { partners } = highlights\n    if (partners && partners.edges && partners.edges.length > 0) {\n      const highCategory = highestCategory(partners.edges)\n      return (\n        <TextWrap>\n          <Sans size=\"2\" weight=\"medium\" display=\"inline\" mr={1}>\n            {CATEGORIES[highCategory]}\n          </Sans>\n          <Sans size=\"2\" display=\"inline\" color=\"black60\">\n            {CATEGORY_LABEL_MAP[highCategory]}\n          </Sans>\n        </TextWrap>\n      )\n    }\n  }\n  renderPermanentCollection() {\n    const { collections } = this.props.artist\n    if (!collections || collections.length === 0) {\n      return null\n    }\n    const label =\n      collections.length === 1\n        ? \"Collected by a major museum\"\n        : \"Collected by major museums\"\n    return (\n      <TextWrap>\n        <Sans size=\"2\" weight=\"medium\" display=\"inline\" mr={1}>\n          {label}\n        </Sans>\n        <Sans size=\"2\" display=\"inline\" color=\"black60\">\n          {collections.join(\", \")}\n        </Sans>\n      </TextWrap>\n    )\n  }\n\n  render() {\n    if (!hasSections(this.props.artist)) {\n      return null\n    }\n\n    let Container\n\n    if (this.props.Container) {\n      Container = this.props.Container\n    } else if (this.props.border) {\n      Container = BorderBox\n    } else {\n      Container = Box\n    }\n\n    return (\n      <>\n        <Container flexDirection=\"column\">\n          <div>\n            {this.renderAuctionHighlight()}\n            {this.renderGalleryRepresentation()}\n            {this.renderPermanentCollection()}\n          </div>\n        </Container>\n\n        {this.props.children}\n      </>\n    )\n  }\n}\n\nexport const ArtistMarketInsightsFragmentContainer = createFragmentContainer(\n  MarketInsights,\n  {\n    artist: graphql`\n      fragment ArtistMarketInsights_artist on Artist\n        @argumentDefinitions(\n          partner_category: {\n            type: \"[String]\"\n            defaultValue: [\"blue-chip\", \"top-established\", \"top-emerging\"]\n          }\n        ) {\n        collections\n        highlights {\n          partners(\n            first: 10\n            display_on_partner_profile: true\n            represented_by: true\n            partner_category: $partner_category\n          ) {\n            edges {\n              node {\n                categories {\n                  id\n                }\n              }\n            }\n          }\n        }\n        auctionResults(\n          recordsTrusted: true\n          first: 1\n          sort: PRICE_AND_DATE_DESC\n        ) {\n          edges {\n            node {\n              price_realized {\n                display(format: \"0a\")\n              }\n              organization\n              sale_date(format: \"YYYY\")\n            }\n          }\n        }\n      }\n    `,\n  }\n)\n\nconst TextWrap = props => (\n  <>\n    <Media at=\"xs\">\n      <Flex flexDirection=\"column\" mb={1} {...props} />\n    </Media>\n    <Media greaterThan=\"xs\">\n      <Box {...props} />\n    </Media>\n  </>\n)\n"],"file":"ArtistMarketInsights.js"}