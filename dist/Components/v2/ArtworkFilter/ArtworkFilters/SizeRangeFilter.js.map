{"version":3,"sources":["../../../../../src/Components/v2/ArtworkFilter/ArtworkFilters/SizeRangeFilter.tsx"],"names":["SizeRangeFilter","expanded","filterContext","rangeToTuple","initialMinHeight","initialMaxHeight","initialMinWidth","initialMaxWidth","MIN_HEIGHT","MAX_HEIGHT","min","max","minStr","maxStr","setFilter","MIN_WIDTH","MAX_WIDTH"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;;;AAWO,IAAMA,eAA0C,GAAG,SAA7CA,eAA6C,OAEpD;AAAA,2BADJC,QACI;AAAA,MADJA,QACI,8BADO,KACP;AACJ,MAAMC,aAAa,GAAG,oDAAtB;;AADI,8BAGyCA,aAAa,CAACC,YAAd,CAC3C,QAD2C,CAHzC;AAAA;AAAA,MAGGC,gBAHH;AAAA,MAGqBC,gBAHrB;;AAAA,+BAMuCH,aAAa,CAACC,YAAd,CAA2B,OAA3B,CANvC;AAAA;AAAA,MAMGG,eANH;AAAA,MAMoBC,eANpB;;AAQJ,SACE,6BAAC,eAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,QAAQ,EAAEN;AAA/B,KACE,6BAAC,aAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAA6B,IAAA,UAAU,EAAC,MAAxC;AAA+C,IAAA,EAAE,EAAE;AAAnD,KACE,4DACE,6BAAC,qBAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,UAAU,EAAE,KAFd;AAGE,IAAA,GAAG,EAAEO,wBAHP;AAIE,IAAA,GAAG,EAAEC,wBAJP;AAKE,IAAA,IAAI,EAAC,IALP;AAME,IAAA,IAAI,EAAE,CANR;AAOE,IAAA,YAAY,EAAE,CAACL,gBAAD,EAAmBC,gBAAnB,CAPhB;AAQE,IAAA,aAAa,EAAE,8BAAgB;AAAA;AAAA,UAAdK,GAAc;AAAA,UAATC,GAAS;;AAC7B,UAAMC,MAAM,GAAGF,GAAG,KAAKF,wBAAR,GAAqB,GAArB,GAA2BE,GAA1C;AACA,UAAMG,MAAM,GAAGF,GAAG,KAAKF,wBAAR,GAAqB,GAArB,GAA2BE,GAA1C;AACAT,MAAAA,aAAa,CAACY,SAAd,CAAwB,QAAxB,YAAqCF,MAArC,cAA+CC,MAA/C;AACD;AAZH,IADF,EAeE,6BAAC,qBAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,UAAU,EAAE,KAFd;AAGE,IAAA,GAAG,EAAEE,uBAHP;AAIE,IAAA,GAAG,EAAEC,uBAJP;AAKE,IAAA,IAAI,EAAC,IALP;AAME,IAAA,IAAI,EAAE,CANR;AAOE,IAAA,YAAY,EAAE,CAACV,eAAD,EAAkBC,eAAlB,CAPhB;AAQE,IAAA,aAAa,EAAE,8BAAgB;AAAA;AAAA,UAAdG,GAAc;AAAA,UAATC,GAAS;;AAC7B,UAAMC,MAAM,GAAGF,GAAG,KAAKK,uBAAR,GAAoB,GAApB,GAA0BL,GAAzC;AACA,UAAMG,MAAM,GAAGF,GAAG,KAAKK,uBAAR,GAAoB,GAApB,GAA0BL,GAAzC;AACAT,MAAAA,aAAa,CAACY,SAAd,CAAwB,OAAxB,YAAoCF,MAApC,cAA8CC,MAA9C;AACD;AAZH,IAfF,CADF,CADF,CADF;AAoCD,CA9CM","sourcesContent":["import { Flex, LabeledRange, Toggle } from \"@artsy/palette\"\nimport React, { FC } from \"react\"\nimport { useArtworkFilterContext } from \"../ArtworkFilterContext\"\n\nimport {\n  MAX_HEIGHT,\n  MAX_WIDTH,\n  MIN_HEIGHT,\n  MIN_WIDTH,\n} from \"../Utils/rangeToTuple\"\n\ninterface TimePeriodFilterProps {\n  expanded?: boolean\n}\n\nexport const SizeRangeFilter: FC<TimePeriodFilterProps> = ({\n  expanded = false,\n}) => {\n  const filterContext = useArtworkFilterContext()\n\n  const [initialMinHeight, initialMaxHeight] = filterContext.rangeToTuple(\n    \"height\"\n  )\n  const [initialMinWidth, initialMaxWidth] = filterContext.rangeToTuple(\"width\")\n\n  return (\n    <Toggle label=\"Size\" expanded={expanded}>\n      <Flex flexDirection=\"column\" alignItems=\"left\" my={1}>\n        <>\n          <LabeledRange\n            label=\"Height\"\n            allowCross={false}\n            min={MIN_HEIGHT}\n            max={MAX_HEIGHT}\n            unit=\"in\"\n            step={1}\n            defaultValue={[initialMinHeight, initialMaxHeight]}\n            onAfterChange={([min, max]) => {\n              const minStr = min === MIN_HEIGHT ? \"*\" : min\n              const maxStr = max === MAX_HEIGHT ? \"*\" : max\n              filterContext.setFilter(\"height\", `${minStr}-${maxStr}`)\n            }}\n          />\n          <LabeledRange\n            label=\"Width\"\n            allowCross={false}\n            min={MIN_WIDTH}\n            max={MAX_WIDTH}\n            unit=\"in\"\n            step={1}\n            defaultValue={[initialMinWidth, initialMaxWidth]}\n            onAfterChange={([min, max]) => {\n              const minStr = min === MIN_WIDTH ? \"*\" : min\n              const maxStr = max === MAX_WIDTH ? \"*\" : max\n              filterContext.setFilter(\"width\", `${minStr}-${maxStr}`)\n            }}\n          />\n        </>\n      </Flex>\n    </Toggle>\n  )\n}\n"],"file":"SizeRangeFilter.js"}