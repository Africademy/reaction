{"version":3,"sources":["../../../../../src/Components/v2/ArtworkFilter/ArtworkFilters/TimePeriodFilter.tsx"],"names":["TimePeriodFilter","expanded","aggregations","filterContext","timePeriods","find","agg","slice","periods","counts","filter","timePeriod","allowedPeriods","includes","name","map","selectedPeriod","filters","f","major_periods","selectedOption","setFilter","index"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAMO,IAAMA,gBAA2C,GAAG,SAA9CA,gBAA8C,OAErD;AAAA,2BADJC,QACI;AAAA,MADJA,QACI,8BADO,KACP;;AAAA,8BACuC,oDADvC;AAAA,MACIC,YADJ,yBACIA,YADJ;AAAA,MACqBC,aADrB;;AAEJ,MAAMC,WAAW,GAAGF,YAAY,CAACG,IAAb,CAAkB,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,KAAJ,KAAc,cAAlB;AAAA,GAArB,CAApB;AAEA,MAAIC,OAAJ;;AACA,MAAIJ,WAAW,IAAIA,WAAW,CAACK,MAA/B,EAAuC;AACrCD,IAAAA,OAAO,GAAGJ,WAAW,CAACK,MAAZ,CAAmBC,MAAnB,CAA0B,UAAAC,UAAU,EAAI;AAChD,aAAOC,cAAc,CAACC,QAAf,CAAwBF,UAAU,CAACG,IAAnC,CAAP;AACD,KAFS,CAAV;AAGD,GAJD,MAIO;AACLN,IAAAA,OAAO,GAAGI,cAAc,CAACG,GAAf,CAAmB,UAAAD,IAAI;AAAA,aAAK;AAAEA,QAAAA,IAAI,EAAJA;AAAF,OAAL;AAAA,KAAvB,CAAV;AACD;;AAED,MAAME,cAAc,GAAG,cACrBb,aAAa,CAACc,OADO,EAErB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,aAAF,CAAgB,CAAhB,KAAsB,EAA1B;AAAA,GAFoB,CAAvB;AAKA,SACE,6BAAC,eAAD;AAAQ,IAAA,KAAK,EAAC,aAAd;AAA4B,IAAA,QAAQ,EAAElB;AAAtC,KACE,6BAAC,aAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAA6B,IAAA,EAAE,EAAE;AAAjC,KACE,6BAAC,mBAAD;AACE,IAAA,YAAY,MADd;AAEE,IAAA,YAAY,EAAEe,cAFhB;AAGE,IAAA,QAAQ,EAAE,kBAAAI,cAAc,EAAI;AAC1BjB,MAAAA,aAAa,CAACkB,SAAd,CAAwB,eAAxB,EAAyCD,cAAzC;AACD;AALH,KAOGZ,OAAO,CAACO,GAAR,CAAY,UAACJ,UAAD,EAAaW,KAAb,EAAuB;AAClC,WACE,6BAAC,cAAD;AACE,MAAA,EAAE,EAAE,GADN;AAEE,MAAA,KAAK,EAAEX,UAAU,CAACG,IAFpB;AAGE,MAAA,GAAG,EAAEQ,KAHP;AAIE,MAAA,KAAK,EAAEX,UAAU,CAACG;AAJpB,MADF;AAQD,GATA,CAPH,CADF,CADF,CADF;AAwBD,CA5CM;;;AA8CP,IAAMF,cAAc,GAAG,CACrB,MADqB,EAErB,MAFqB,EAGrB,MAHqB,EAIrB,MAJqB,EAKrB,MALqB,EAMrB,MANqB,EAOrB,MAPqB,EAQrB,MARqB,EASrB,MATqB,EAUrB,MAVqB,EAWrB,MAXqB,EAYrB,MAZqB,EAarB,mBAbqB,EAcrB,kBAdqB,EAerB,oBAfqB,CAAvB","sourcesContent":["import { Flex, Radio, RadioGroup, Toggle } from \"@artsy/palette\"\nimport React, { FC } from \"react\"\nimport { get } from \"Utils/get\"\nimport { useArtworkFilterContext } from \"../ArtworkFilterContext\"\n\ninterface TimePeriodFilterProps {\n  expanded?: boolean\n}\n\nexport const TimePeriodFilter: FC<TimePeriodFilterProps> = ({\n  expanded = false,\n}) => {\n  const { aggregations, ...filterContext } = useArtworkFilterContext()\n  const timePeriods = aggregations.find(agg => agg.slice === \"MAJOR_PERIOD\")\n\n  let periods\n  if (timePeriods && timePeriods.counts) {\n    periods = timePeriods.counts.filter(timePeriod => {\n      return allowedPeriods.includes(timePeriod.name)\n    })\n  } else {\n    periods = allowedPeriods.map(name => ({ name }))\n  }\n\n  const selectedPeriod = get(\n    filterContext.filters,\n    f => f.major_periods[0] || \"\"\n  )\n\n  return (\n    <Toggle label=\"Time period\" expanded={expanded}>\n      <Flex flexDirection=\"column\" my={1}>\n        <RadioGroup\n          deselectable\n          defaultValue={selectedPeriod}\n          onSelect={selectedOption => {\n            filterContext.setFilter(\"major_periods\", selectedOption)\n          }}\n        >\n          {periods.map((timePeriod, index) => {\n            return (\n              <Radio\n                my={0.3}\n                value={timePeriod.name}\n                key={index}\n                label={timePeriod.name}\n              />\n            )\n          })}\n        </RadioGroup>\n      </Flex>\n    </Toggle>\n  )\n}\n\nconst allowedPeriods = [\n  \"2010\",\n  \"2000\",\n  \"1990\",\n  \"1980\",\n  \"1970\",\n  \"1960\",\n  \"1950\",\n  \"1940\",\n  \"1930\",\n  \"1920\",\n  \"1910\",\n  \"1900\",\n  \"Late 19th Century\",\n  \"Mid 19th Century\",\n  \"Early 19th Century\",\n]\n"],"file":"TimePeriodFilter.js"}