{"version":3,"sources":["../../../src/Components/v2/CollectionsHubsHomepageNav.tsx"],"names":["CollectionsHubsHomepageNav","context_page","AnalyticsSchema","PageName","HomePage","context_module","ContextModule","CollectionHubEntryPoint","subject","Subject","FeaturedCategories","action_type","ActionType","Impression","dispatch","data","Events","postEvent","props","trackEvent","marketingHubCollections","slice","map","hub","slug","thumbnail","width","height","title","subtitleFor","id","Click","type","Type","Thumbnail","desination_path","CollectionsHubsHomepageNavFragmentContainer","subtitlesMapping","Contemporary","Photography"],"mappings":";;;;;;;;;;;AAAA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAMO,IAAMA,0BAA0B,GAAG,4BACxC;AACEC,EAAAA,YAAY,EAAEC,2BAAgBC,QAAhB,CAAyBC,QADzC;AAEEC,EAAAA,cAAc,EAAEH,2BAAgBI,aAAhB,CAA8BC,uBAFhD;AAGEC,EAAAA,OAAO,EAAEN,2BAAgBO,OAAhB,CAAwBC,kBAHnC;AAIEC,EAAAA,WAAW,EAAET,2BAAgBU,UAAhB,CAA2BC;AAJ1C,CADwC,EAOxC;AAAEC,EAAAA,QAAQ,EAAE,kBAAAC,IAAI;AAAA,WAAIC,gBAAOC,SAAP,CAAiBF,IAAjB,CAAJ;AAAA;AAAhB,CAPwC,EAQxC,UAACG,KAAD,EAA4C;AAAA,qBACrB,iCADqB;AAAA,MACpCC,UADoC,gBACpCA,UADoC;;AAE5CA,EAAAA,UAAU,CAAC,EAAD,CAAV;AACA,SACE,6BAAC,gBAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,mBAAmB,EAAE,CACnB,gBADmB,EAEnB,gBAFmB,EAGnB,gBAHmB,CAFvB;AAOE,IAAA,OAAO,EAAE;AAPX,KASGD,KAAK,CAACE,uBAAN,CAA8BC,KAA9B,CAAoC,CAApC,EAAuC,CAAvC,EAA0CC,GAA1C,CAA8C,UAAAC,GAAG;AAAA,WAChD,6BAAC,oBAAD;AACE,MAAA,EAAE,wBAAiBA,GAAG,CAACC,IAArB,CADJ;AAEE,MAAA,GAAG,EAAE,qBAAOD,GAAG,CAACE,SAAX,EAAsB;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAtB,CAFP;AAGE,MAAA,KAAK,EAAE,CAAC,IAAD,CAHT;AAIE,MAAA,KAAK,EAAE,6BAAC,cAAD;AAAO,QAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN;AAAb,SAA0BJ,GAAG,CAACK,KAA9B,CAJT;AAKE,MAAA,QAAQ,EAAE,6BAAC,cAAD;AAAO,QAAA,IAAI,EAAC;AAAZ,SAAiBC,WAAW,CAACN,GAAG,CAACK,KAAL,CAA5B,CALZ;AAME,MAAA,GAAG,EAAEL,GAAG,CAACO,EANX;AAOE,MAAA,OAAO,EAAE,mBAAM;AACbX,QAAAA,UAAU,CAAC;AACTR,UAAAA,WAAW,EAAET,2BAAgBU,UAAhB,CAA2BmB,KAD/B;AAETC,UAAAA,IAAI,EAAE9B,2BAAgB+B,IAAhB,CAAqBC,SAFlB;AAGTC,UAAAA,eAAe,wBAAiBZ,GAAG,CAACC,IAArB;AAHN,SAAD,CAAV;AAKD;AAbH,MADgD;AAAA,GAAjD,CATH,CADF;AA6BD,CAxCyC,CAAnC;;AA0CA,IAAMY,2CAA2C,GAAG,yCACzDpC,0BADyD,EAEzD;AACEoB,EAAAA,uBAAuB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADzB,CAFyD,CAApD;AAeP;;;;;;;;;;;AAUA,IAAMiB,gBAAgB,GAAG;AACvBC,EAAAA,YAAY,EAAE,8CADS;AAEvB,cAAY,wCAFW;AAGvB,4BAA0B,gDAHH;AAIvB,sBAAoB,kDAJG;AAKvBC,EAAAA,WAAW,EAAE,iDALU;AAMvB,gBAAc;AANS,CAAzB;;AASA,IAAMV,WAAW,GAAG,SAAdA,WAAc,CAACD,KAAD,EAAmB;AACrC,SAAOS,gBAAgB,CAACT,KAAD,CAAvB;AACD,CAFD","sourcesContent":["import { CSSGrid } from \"@artsy/palette\"\nimport { Serif } from \"@artsy/palette\"\nimport { CollectionsHubsHomepageNav_marketingHubCollections } from \"__generated__/CollectionsHubsHomepageNav_marketingHubCollections.graphql\"\nimport { AnalyticsSchema } from \"Artsy/Analytics\"\nimport React from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport track, { useTracking } from \"react-tracking\"\nimport Events from \"Utils/Events\"\nimport { resize } from \"Utils/resizer\"\nimport { ImageLink } from \"./ImageLink\"\n\ninterface CollectionsHubsHomepageNavProps {\n  marketingHubCollections: CollectionsHubsHomepageNav_marketingHubCollections\n}\n\nexport const CollectionsHubsHomepageNav = track(\n  {\n    context_page: AnalyticsSchema.PageName.HomePage,\n    context_module: AnalyticsSchema.ContextModule.CollectionHubEntryPoint,\n    subject: AnalyticsSchema.Subject.FeaturedCategories,\n    action_type: AnalyticsSchema.ActionType.Impression,\n  },\n  { dispatch: data => Events.postEvent(data) }\n)((props: CollectionsHubsHomepageNavProps) => {\n  const { trackEvent } = useTracking()\n  trackEvent({})\n  return (\n    <CSSGrid\n      as=\"aside\"\n      gridTemplateColumns={[\n        \"repeat(2, 1fr)\",\n        \"repeat(2, 1fr)\",\n        \"repeat(3, 1fr)\",\n      ]}\n      gridGap={20}\n    >\n      {props.marketingHubCollections.slice(0, 6).map(hub => (\n        <ImageLink\n          to={`/collection/${hub.slug}`}\n          src={resize(hub.thumbnail, { width: 357, height: 175 })}\n          ratio={[0.49]}\n          title={<Serif size={[\"3\", \"4\"]}>{hub.title}</Serif>}\n          subtitle={<Serif size=\"2\">{subtitleFor(hub.title)}</Serif>}\n          key={hub.id}\n          onClick={() => {\n            trackEvent({\n              action_type: AnalyticsSchema.ActionType.Click,\n              type: AnalyticsSchema.Type.Thumbnail,\n              desination_path: `/collection/${hub.slug}`,\n            })\n          }}\n        />\n      ))}\n    </CSSGrid>\n  )\n})\n\nexport const CollectionsHubsHomepageNavFragmentContainer = createFragmentContainer(\n  CollectionsHubsHomepageNav,\n  {\n    marketingHubCollections: graphql`\n      fragment CollectionsHubsHomepageNav_marketingHubCollections on MarketingCollection\n        @relay(plural: true) {\n        id\n        slug\n        title\n        thumbnail\n      }\n    `,\n  }\n)\n\n/*\n * This is a customization just for the homepage entry-points use case.\n *\n * Valid hub collections will have a subtitle defined here, rather than in KAWS.\n * This mapping therefore will need to kept in sync as hubs are rotated\n * in/out of the entrypoint.\n *\n * TODO: remove (or replace with safer) placeholder once we have real data.\n */\n\nconst subtitlesMapping = {\n  Contemporary: \"Today’s leading artists and emerging talents\",\n  \"Post-War\": \"From Abstract Expressionism to Pop Art\",\n  \"Impressionist & Modern\": \"The birth of abstraction, Surrealism, and Dada\",\n  \"Pre-20th Century\": \"Ancient Rome, the Renaissance, Baroque, and more\",\n  Photography: \"Through the lens—from daguerreotypes to digital\",\n  \"Street Art\": \"The rise of graffiti, vinyl toys, and skate culture\",\n}\n\nconst subtitleFor = (title: string) => {\n  return subtitlesMapping[title]\n}\n"],"file":"CollectionsHubsHomepageNav.js"}