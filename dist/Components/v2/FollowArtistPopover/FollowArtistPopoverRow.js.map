{"version":3,"sources":["../../../../src/Components/v2/FollowArtistPopover/FollowArtistPopoverRow.tsx"],"names":["ArtistName","Serif","FollowArtistPopoverRow","swappedArtist","followed","artistID","props","user","relay","excludeArtistIdsState","excludeArtistIds","state","id","environment","mutation","variables","input","artist_id","unfollow","optimisticUpdater","setState","updater","store","data","node","followArtist","artist","related","suggested","edges","setTimeout","addArtist","_id","originalArtist","imageUrl","a","image","cropped","url","key","name","handleClick","React","Component","FollowArtistPopoverRowFragmentContainer","FollowArtistPopoverState"],"mappings":"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","sourcesContent":["import { Avatar, Box, Button, Flex, Serif } from \"@artsy/palette\"\nimport { FollowArtistPopoverRow_artist } from \"__generated__/FollowArtistPopoverRow_artist.graphql\"\nimport { FollowArtistPopoverRowMutation } from \"__generated__/FollowArtistPopoverRowMutation.graphql\"\nimport { SystemContextProps } from \"Artsy\"\nimport React from \"react\"\nimport {\n  commitMutation,\n  createFragmentContainer,\n  graphql,\n  RelayProp,\n} from \"react-relay\"\nimport { RecordSourceSelectorProxy, SelectorData } from \"relay-runtime\"\nimport styled from \"styled-components\"\nimport { Subscribe } from \"unstated\"\nimport { get } from \"Utils/get\"\nimport { FollowArtistPopoverState } from \"./state\"\n\ninterface Props extends SystemContextProps {\n  artist: FollowArtistPopoverRow_artist\n  excludeArtistIdsState?: FollowArtistPopoverState\n  relay: RelayProp\n}\n\ninterface State {\n  swappedArtist: FollowArtistPopoverRow_artist\n  followed: boolean\n}\n\nconst ArtistName = styled(Serif)`\n  width: 125px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`\n\nclass FollowArtistPopoverRow extends React.Component<Props, State> {\n  state: State = {\n    swappedArtist: null,\n    followed: false,\n  }\n\n  handleClick(artistID: string) {\n    const { user, relay, excludeArtistIdsState } = this.props\n    const {\n      state: { excludeArtistIds },\n    } = excludeArtistIdsState\n    if (user && user.id) {\n      commitMutation<FollowArtistPopoverRowMutation>(relay.environment, {\n        mutation: graphql`\n          mutation FollowArtistPopoverRowMutation(\n            $input: FollowArtistInput!\n            $excludeArtistIds: [String]!\n          ) {\n            followArtist(input: $input) {\n              artist {\n                __id\n                related {\n                  suggested(\n                    first: 1\n                    exclude_followed_artists: true\n                    exclude_artist_ids: $excludeArtistIds\n                  ) {\n                    edges {\n                      node {\n                        __id\n                        _id\n                        ...FollowArtistPopoverRow_artist @relay(mask: false)\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `,\n        variables: {\n          input: { artist_id: artistID, unfollow: false },\n          excludeArtistIds,\n        },\n        optimisticUpdater: () => {\n          this.setState({\n            followed: true,\n          })\n        },\n        updater: (store: RecordSourceSelectorProxy, data: SelectorData) => {\n          const { node } = data.followArtist.artist.related.suggested.edges[0]\n\n          // Add slight delay to make UX seem a bit nicer\n          this.setState(\n            {\n              followed: true,\n            },\n            () => {\n              setTimeout(() => {\n                this.setState({\n                  swappedArtist: node,\n                  followed: false,\n                })\n              }, 500)\n            }\n          )\n\n          excludeArtistIdsState.addArtist(node._id)\n        },\n      })\n    }\n  }\n\n  render() {\n    const { artist: originalArtist } = this.props\n    const { swappedArtist } = this.state\n    const artist = swappedArtist || originalArtist\n    const imageUrl = get(artist, a => a.image.cropped.url)\n    const { _id: artistID } = artist\n    const key = `avatar-${artistID}`\n    return (\n      <Flex alignItems=\"center\" mb={1} mt={1}>\n        <Avatar size=\"xs\" src={imageUrl} key={key} />\n        <ArtistName size=\"3t\" color=\"black100\" ml={1} mr={1}>\n          {artist.name}\n        </ArtistName>\n        <Box>\n          <Button\n            onClick={() => this.handleClick(artistID)}\n            variant=\"secondaryOutline\"\n            size=\"small\"\n            width=\"70px\"\n          >\n            {this.state.followed ? \"Followed\" : \"Follow\"}\n          </Button>\n        </Box>\n      </Flex>\n    )\n  }\n}\n\nexport const FollowArtistPopoverRowFragmentContainer = createFragmentContainer(\n  (props: Props) => {\n    return (\n      <Subscribe to={[FollowArtistPopoverState]}>\n        {(excludeArtistIdsState: FollowArtistPopoverState) => {\n          return (\n            <FollowArtistPopoverRow\n              excludeArtistIdsState={excludeArtistIdsState}\n              {...props}\n            />\n          )\n        }}\n      </Subscribe>\n    )\n  },\n  {\n    artist: graphql`\n      fragment FollowArtistPopoverRow_artist on Artist {\n        _id\n        name\n        image {\n          cropped(width: 45, height: 45) {\n            url\n          }\n        }\n      }\n    `,\n  }\n)\n"],"file":"FollowArtistPopoverRow.js"}