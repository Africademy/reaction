{"version":3,"sources":["../../../../src/Components/v2/FollowArtistPopover/index.tsx"],"names":["BorderedContainer","BorderBox","Container","Box","TitleContainer","FollowArtistPopover","props","suggested","artist","user","related","suggetionsCount","edges","length","excludeArtistIds","map","_id","node","onClose","FollowArtistPopoverState","index","__id","FollowArtistPopoverFragmentContainer","FollowArtistPopoverQueryRenderer","artistID","SystemContext","relayEnvironment"],"mappings":"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","sourcesContent":["import {\n  BorderBox,\n  Box,\n  CloseIcon,\n  Flex,\n  Link,\n  Sans,\n  Separator,\n  space,\n} from \"@artsy/palette\"\nimport { FollowArtistPopover_artist } from \"__generated__/FollowArtistPopover_artist.graphql\"\nimport { FollowArtistPopoverQuery } from \"__generated__/FollowArtistPopoverQuery.graphql\"\nimport { SystemContext, SystemContextProps } from \"Artsy\"\nimport { SystemQueryRenderer as QueryRenderer } from \"Artsy/Relay/SystemQueryRenderer\"\nimport React, { SFC, useContext } from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport styled from \"styled-components\"\nimport { Provider } from \"unstated\"\nimport { FollowArtistPopoverRowFragmentContainer as FollowArtistPopoverRow } from \"./FollowArtistPopoverRow\"\nimport { FollowArtistPopoverState } from \"./state\"\n\n// TODO: Revisit possibility of creating an Artsy popover for it.\nconst BorderedContainer = styled(BorderBox)`\n  background-color: white;\n  border-radius: 2px;\n  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.2);\n`\n\nconst Container = Box\nconst TitleContainer = Box\n\ninterface Props extends SystemContextProps {\n  artist: FollowArtistPopover_artist\n  onClose?: () => void\n}\n\nconst FollowArtistPopover: SFC<Props> = props => {\n  const { artist: suggested, user } = props\n  const { related } = suggested\n  const suggetionsCount = related.suggested.edges.length\n  if (suggetionsCount === 0) return null\n  const excludeArtistIds = related.suggested.edges.map(({ node: { _id } }) => {\n    return _id\n  })\n  return (\n    <BorderedContainer>\n      <Container>\n        <TitleContainer mb={1}>\n          <Sans size=\"3\" weight=\"medium\" color=\"black100\">\n            Other artists you might like\n          </Sans>\n          <Box position=\"absolute\" top={space(1)} right={space(1)}>\n            <Link onClick={props.onClose}>\n              <CloseIcon fill={\"black30\"} />\n            </Link>\n          </Box>\n        </TitleContainer>\n        <Flex flexDirection=\"column\">\n          <Provider\n            inject={[new FollowArtistPopoverState({ excludeArtistIds })]}\n          >\n            {related.suggested.edges.map(({ node: artist }, index) => {\n              return (\n                <React.Fragment key={artist.__id}>\n                  <FollowArtistPopoverRow user={user} artist={artist} />\n                  {index < suggetionsCount - 1 && <Separator />}\n                </React.Fragment>\n              )\n            })}\n          </Provider>\n        </Flex>\n      </Container>\n    </BorderedContainer>\n  )\n}\n\nexport const FollowArtistPopoverFragmentContainer = createFragmentContainer(\n  FollowArtistPopover,\n  {\n    artist: graphql`\n      fragment FollowArtistPopover_artist on Artist {\n        related {\n          suggested(first: 3, exclude_followed_artists: true) {\n            edges {\n              node {\n                __id\n                _id\n                ...FollowArtistPopoverRow_artist\n              }\n            }\n          }\n        }\n      }\n    `,\n  }\n)\n\nexport const FollowArtistPopoverQueryRenderer = ({\n  artistID,\n}: {\n  artistID: string\n}) => {\n  const { relayEnvironment, user } = useContext(SystemContext)\n  return (\n    <QueryRenderer<FollowArtistPopoverQuery>\n      environment={relayEnvironment}\n      variables={{ artistID }}\n      query={graphql`\n        query FollowArtistPopoverQuery($artistID: String!) {\n          artist(id: $artistID) {\n            ...FollowArtistPopover_artist\n          }\n        }\n      `}\n      render={({ props }) => {\n        return (\n          props && (\n            <FollowArtistPopoverFragmentContainer\n              artist={props.artist}\n              user={user}\n            />\n          )\n        )\n      }}\n    />\n  )\n}\n"],"file":"index.js"}