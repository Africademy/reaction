{"version":3,"sources":["../../../src/Components/v2/ImageLink.tsx"],"names":["ImageContainer","Box","HubImage","ResponsiveImage","ImageOverlay","OuterLink","RouterLink","space","ImageLink","to","src","title","subtitle","ratio","onClick","React","cloneElement","element","props","mt","mb","textAlign","className"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,cAAc,GAAG,+BAAOC,YAAP,CAAH;AAAA;AAAA;AAAA,0BAApB;AAIA,IAAMC,QAAQ,GAAG,+BAAOC,wBAAP,CAAH;AAAA;AAAA;AAAA,8BAAd;AAIA,IAAMC,YAAY,GAAG,+BAAOH,YAAP,CAAH;AAAA;AAAA;AAAA,yIAAlB;AAcA,IAAMI,SAAS,GAAG,+BAAOC,sBAAP,CAAH;AAAA;AAAA;AAAA,4GAQTF,YARS,EAeXG,mBAfW,CAAf;;AAqCO,IAAMC,SAA6B,GAAG,SAAhCA,SAAgC,OAOvC;AAAA,MANJC,EAMI,QANJA,EAMI;AAAA,MALJC,GAKI,QALJA,GAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADJC,OACI,QADJA,OACI;AACJ,SACE,6BAAC,SAAD;AAAW,IAAA,EAAE,EAAEL,EAAf;AAAmB,IAAA,OAAO,EAAEK;AAA5B,KACE,6BAAC,cAAD,QACE,6BAAC,YAAD,QACE,6BAAC,QAAD;AAAU,IAAA,GAAG,EAAEJ,GAAf;AAAoB,IAAA,KAAK,EAAC,MAA1B;AAAiC,IAAA,KAAK,EAAEG;AAAxC,IADF,CADF,CADF,EAMGE,eAAMC,YAAN,CAAmBL,KAAnB,EAA0B;AACzB;AACAM,IAAAA,OAAO,EAAEN,KAAK,CAACO,KAAN,CAAYD,OAAZ,IAAuB,IAFP;AAGzBE,IAAAA,EAAE,EAAE,GAHqB;AAIzBC,IAAAA,EAAE,EAAE,KAJqB;AAKzBC,IAAAA,SAAS,EAAE,QALc;AAMzBC,IAAAA,SAAS,EAAE;AANc,GAA1B,CANH,EAcE,6BAAC,iBAAD;AAAO,IAAA,WAAW,EAAC;AAAnB,KACGV,QAAQ,IACPG,eAAMC,YAAN,CAAmBJ,QAAnB,EAA6B;AAC3B;AACAK,IAAAA,OAAO,EAAEN,KAAK,CAACO,KAAN,CAAYD,OAAZ,IAAuB,IAFL;AAG3BI,IAAAA,SAAS,EAAE;AAHgB,GAA7B,CAFJ,CAdF,CADF;AAyBD,CAjCM","sourcesContent":["import { Box, ResponsiveImage, SerifProps } from \"@artsy/palette\"\nimport { RouterLink } from \"Artsy/Router/RouterLink\"\nimport React, { FC } from \"react\"\nimport styled from \"styled-components\"\nimport { space } from \"styled-system\"\nimport { Media } from \"Utils/Responsive\"\n\nconst ImageContainer = styled(Box)`\n  position: relative;\n`\n\nconst HubImage = styled(ResponsiveImage)`\n  vertical-align: middle;\n`\n\nconst ImageOverlay = styled(Box)`\n  &::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: none;\n    color: #fff;\n    content: \"\";\n    background: rgba(0, 0, 0, 0.3);\n  }\n`\n\nconst OuterLink = styled(RouterLink)`\n  text-decoration: none;\n\n  &:hover {\n    .title {\n      text-decoration: underline;\n    }\n\n    ${ImageOverlay} {\n      &::before {\n        display: block;\n      }\n    }\n  }\n\n  ${space}\n`\n\ninterface ImageLinkProps {\n  /** Source url for the image */\n  src: string\n\n  /** Destination for the hyperlink */\n  to: string\n\n  /** Primary text that appears below the image */\n  title: React.ReactElement<SerifProps & { className?: string }>\n\n  /** Secondary text that (optionally) appears below the title */\n  subtitle?: React.ReactElement<SerifProps>\n\n  /** A number corresponding to the ratio of height/width (inverted from the usual width/height aspect ratio) */\n  ratio: number | number[]\n\n  onClick?: () => void\n}\n\nexport const ImageLink: FC<ImageLinkProps> = ({\n  to,\n  src,\n  title,\n  subtitle,\n  ratio,\n  onClick,\n}) => {\n  return (\n    <OuterLink to={to} onClick={onClick}>\n      <ImageContainer>\n        <ImageOverlay>\n          <HubImage src={src} width=\"100%\" ratio={ratio} />\n        </ImageOverlay>\n      </ImageContainer>\n      {React.cloneElement(title, {\n        // kind of like \"default props\" for a cloned element.\n        element: title.props.element || \"h3\",\n        mt: \"1\",\n        mb: \"0.5\",\n        textAlign: \"center\",\n        className: \"title\",\n      })}\n      <Media greaterThan=\"xs\">\n        {subtitle &&\n          React.cloneElement(subtitle, {\n            // kind of like \"default props\" for a cloned element.\n            element: title.props.element || \"h4\",\n            textAlign: \"center\",\n          })}\n      </Media>\n    </OuterLink>\n  )\n}\n"],"file":"ImageLink.js"}