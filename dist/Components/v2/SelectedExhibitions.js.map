{"version":3,"sources":["../../../src/Components/v2/SelectedExhibitions.tsx"],"names":["MIN_FOR_SELECTED_EXHIBITIONS","MIN_EXHIBITIONS","SelectedExhibitions","props","exhibitions","length","isCollapsed","collapsible","expanded","ExhibitionsHeadline","exhibitionCount","onShowClicked","cursor","ExhibitionYearList","year","map","exhibition","index","name","partner","FullExhibitionList","ViewAllLink","artistID","start_at","reverse","totalExhibitions","SelectedExhibitionsContainer","Container","border","BorderBox","Box","state","setState","React","Component","SelectedExhibitionFragmentContainer"],"mappings":"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","sourcesContent":["import { BorderBox, Box, Flex, Sans } from \"@artsy/palette\"\nimport { SelectedExhibitions_exhibitions } from \"__generated__/SelectedExhibitions_exhibitions.graphql\"\nimport { Link } from \"found\"\nimport { groupBy, toPairs } from \"lodash\"\nimport React, { SFC } from \"react\"\nimport { createFragmentContainer, graphql } from \"react-relay\"\nimport { Media } from \"Utils/Responsive\"\n\nconst MIN_FOR_SELECTED_EXHIBITIONS = 3\nexport const MIN_EXHIBITIONS = 2\n\nexport type Year = string\n\nexport interface SelectedExhibitionsProps {\n  border?: boolean\n  collapsible?: boolean\n  exhibitions: SelectedExhibitions_exhibitions\n  artistID?: string\n  totalExhibitions?: number\n  ViewAllLink?: JSX.Element\n  Container?: (props: { children: JSX.Element }) => JSX.Element\n}\nexport const SelectedExhibitions: SFC<SelectedExhibitionsProps> = props => {\n  return props.exhibitions.length === 0 ? null : (\n    <>\n      <Media at=\"xs\">\n        <SelectedExhibitionsContainer collapsible {...props} />\n      </Media>\n      <Media greaterThan=\"xs\">\n        <SelectedExhibitionsContainer {...props} />\n      </Media>\n    </>\n  )\n}\n\nexport const isCollapsed = props => props.collapsible && !props.expanded\n\nexport interface ExhibitionsHeadlineProps {\n  exhibitionCount: number\n  expanded: boolean\n  collapsible: boolean\n  onShowClicked: (event: React.MouseEvent<HTMLElement>) => void\n}\nexport const ExhibitionsHeadline: SFC<ExhibitionsHeadlineProps> = props => (\n  <Flex justifyContent=\"space-between\" mb={isCollapsed(props) ? 0 : 1}>\n    <Sans size=\"2\" weight=\"medium\">\n      {props.exhibitionCount < MIN_FOR_SELECTED_EXHIBITIONS\n        ? \"Exhibitions\"\n        : \"Selected exhibitions\"}\n      {isCollapsed(props) ? ` (${props.exhibitionCount})` : \"\"}\n    </Sans>\n    {isCollapsed(props) && (\n      <div\n        onClick={props.onShowClicked}\n        style={{ cursor: \"pointer\" }}\n        className=\"showLink\"\n      >\n        <Sans size=\"2\" color=\"black60\" ml={2}>\n          Show\n        </Sans>\n      </div>\n    )}\n  </Flex>\n)\n\nexport interface ExhibitionYearListProps {\n  year: Year\n  exhibitions: SelectedExhibitions_exhibitions\n}\nexport const ExhibitionYearList: SFC<ExhibitionYearListProps> = props => {\n  return (\n    <Flex>\n      <Sans size=\"2\">{props.year}</Sans>\n      <Flex flexDirection=\"column\">\n        {props.exhibitions.map((exhibition, index) => (\n          <Box key={exhibition.name + \"-\" + index} display=\"inline\" ml={1}>\n            <Sans size=\"2\" display=\"inline\" verticalAlign=\"top\">\n              {exhibition.name}\n              {\", \"}\n            </Sans>\n            {exhibition.partner && (\n              <Sans\n                size=\"2\"\n                display=\"inline\"\n                verticalAlign=\"top\"\n                color=\"black60\"\n              >\n                {exhibition.partner.name}\n              </Sans>\n            )}\n          </Box>\n        ))}\n      </Flex>\n    </Flex>\n  )\n}\n\ninterface FullExhibitionListProps {\n  exhibitions: SelectedExhibitions_exhibitions\n  artistID: string\n  totalExhibitions: number\n  ViewAllLink?: JSX.Element\n}\nconst FullExhibitionList: SFC<FullExhibitionListProps> = props => {\n  const {\n    ViewAllLink = <Link to={`/artist/${props.artistID}/cv`}>View all</Link>,\n  } = props\n  return (\n    <React.Fragment>\n      {toPairs(groupBy(props.exhibitions, ({ start_at }) => start_at))\n        .reverse()\n        .map(([year, exhibitions]) => (\n          <ExhibitionYearList\n            key={year}\n            year={year}\n            exhibitions={exhibitions.reverse()}\n          />\n        ))}\n      {props.totalExhibitions > MIN_FOR_SELECTED_EXHIBITIONS && (\n        <Sans size=\"2\" color=\"black60\">\n          {ViewAllLink}\n        </Sans>\n      )}\n    </React.Fragment>\n  )\n}\n\nexport interface SelectedExhibitionsContainerProps\n  extends SelectedExhibitionsProps {\n  border?: boolean\n  collapsible?: boolean\n}\n\nexport class SelectedExhibitionsContainer extends React.Component<\n  SelectedExhibitionsContainerProps\n> {\n  static defaultProps = {\n    border: true,\n  }\n\n  state = {\n    expanded: false,\n  }\n\n  render() {\n    if (\n      !this.props.exhibitions.length ||\n      this.props.totalExhibitions < MIN_EXHIBITIONS\n    ) {\n      return null\n    }\n\n    let Container\n\n    if (this.props.Container) {\n      Container = this.props.Container\n    } else if (this.props.border) {\n      Container = BorderBox\n    } else {\n      Container = Box\n    }\n\n    return (\n      <Container>\n        <Flex flexDirection=\"column\">\n          <ExhibitionsHeadline\n            expanded={this.state.expanded}\n            collapsible={this.props.collapsible}\n            exhibitionCount={this.props.exhibitions.length}\n            onShowClicked={() => this.setState({ expanded: true })}\n          />\n          {!isCollapsed({\n            expanded: this.state.expanded,\n            ...this.props,\n          }) && (\n            <FullExhibitionList\n              artistID={this.props.artistID}\n              exhibitions={this.props.exhibitions}\n              totalExhibitions={this.props.totalExhibitions}\n              ViewAllLink={this.props.ViewAllLink}\n            />\n          )}\n        </Flex>\n      </Container>\n    )\n  }\n}\n\nexport const SelectedExhibitionFragmentContainer = createFragmentContainer(\n  SelectedExhibitions,\n  {\n    exhibitions: graphql`\n      fragment SelectedExhibitions_exhibitions on Show @relay(plural: true) {\n        partner {\n          ... on ExternalPartner {\n            name\n          }\n          ... on Partner {\n            name\n          }\n        }\n        name\n        start_at(format: \"YYYY\")\n        cover_image {\n          cropped(width: 800, height: 600) {\n            url\n          }\n        }\n        city\n      }\n    `,\n  }\n)\n"],"file":"SelectedExhibitions.js"}