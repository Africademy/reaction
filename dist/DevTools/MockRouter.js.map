{"version":3,"sources":["../../src/DevTools/MockRouter.tsx"],"names":["MockRouter","ClientApp","props","routes","initialRoute","historyOptions","mockResolvers","mockData","mockMutationResults","context","user","relayEnvironment","undefined","history","protocol","options","setState","console","error","state","initialState","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AAOA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAaaA,U;;;;;;;;;;;;;;;;;;4DACH;AACNC,MAAAA,SAAS,EAAE;AADL,K;;;;;;;;;;;;;;;;;8BAiBF,KAAKC,K,EAPPC,M,eAAAA,M,EACAC,Y,eAAAA,Y,EACAC,c,eAAAA,c,EACAC,a,eAAAA,a,EACAC,Q,eAAAA,Q,EACAC,mB,eAAAA,mB,EACAC,O,eAAAA,O;;AAIMC,gBAAAA,I,GAAO,mBAAQD,OAAO,IAAIA,OAAO,CAACC,IAA3B,C;AAEPC,gBAAAA,gB,GAAmBL,aAAa,GAClC,oDAAuBA,aAAvB,CADkC,GAElCC,QAAQ,IAAIC,mBAAZ,GACA,qDAAwB;AAAED,kBAAAA,QAAQ,EAARA,QAAF;AAAYC,kBAAAA,mBAAmB,EAAnBA;AAAZ,iBAAxB,CADA,GAEAI,S;;uBAEwB,oCAAe;AACzCT,kBAAAA,MAAM,EAANA,MADyC;AAEzCC,kBAAAA,YAAY,EAAZA,YAFyC;AAGzCS,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,QAAQ,EAAE,QADH;AAEPC,oBAAAA,OAAO,EAAEV;AAFF,mBAHgC;AAOzCI,kBAAAA,OAAO,oBACFA,OADE;AAELC,oBAAAA,IAAI,EAAJA,IAFK;AAGLC,oBAAAA,gBAAgB,EAAhBA;AAHK;AAPkC,iBAAf,C;;;;AAApBV,gBAAAA,S,QAAAA,S;AAcR,qBAAKe,QAAL,CAAc;AACZf,kBAAAA,SAAS,EAATA;AADY,iBAAd;;;;;;;AAIAgB,gBAAAA,OAAO,CAACC,KAAR,CAAc,YAAd;;;;;;;;;;;;;;;;6BAIK;AAAA,UACCjB,SADD,GACe,KAAKkB,KADpB,CACClB,SADD;AAGP,aACE,6BAAC,cAAD,CAAO,QAAP,QACGA,SAAS,IAAI,6BAAC,SAAD,EAAe,KAAKC,KAAL,CAAWkB,YAA1B,CADhB,CADF;AAKD;;;;EA3D6BC,eAAMC,S;;;;gBAAzBtB,U,kBAKW;AACpBI,EAAAA,YAAY,EAAE;AADM,C","sourcesContent":["import { RouterConfig } from \"Artsy/Router\"\nimport { buildClientApp } from \"Artsy/Router/buildClientApp\"\nimport {\n  createMockNetworkLayer,\n  createMockNetworkLayer2,\n} from \"DevTools/createMockNetworkLayer\"\nimport { HistoryOptions } from \"farce\"\nimport { RouteConfig } from \"found\"\nimport { IMocks } from \"graphql-tools/dist/Interfaces\"\nimport React from \"react\"\nimport { getUser } from \"Utils/user\"\n\ninterface Props {\n  routes: RouteConfig[]\n  initialRoute?: string\n  initialState?: object\n  historyOptions?: HistoryOptions\n  mockResolvers?: IMocks\n  mockData?: object\n  mockMutationResults?: object\n  context?: RouterConfig[\"context\"]\n}\n\nexport class MockRouter extends React.Component<Props> {\n  state = {\n    ClientApp: null,\n  }\n\n  static defaultProps = {\n    initialRoute: \"/\",\n  }\n\n  async componentDidMount() {\n    const {\n      routes,\n      initialRoute,\n      historyOptions,\n      mockResolvers,\n      mockData,\n      mockMutationResults,\n      context,\n    } = this.props\n\n    try {\n      const user = getUser(context && context.user)\n\n      const relayEnvironment = mockResolvers\n        ? createMockNetworkLayer(mockResolvers)\n        : mockData || mockMutationResults\n        ? createMockNetworkLayer2({ mockData, mockMutationResults })\n        : undefined\n\n      const { ClientApp } = await buildClientApp({\n        routes,\n        initialRoute,\n        history: {\n          protocol: \"memory\",\n          options: historyOptions,\n        },\n        context: {\n          ...context,\n          user,\n          relayEnvironment,\n        } as any,\n      })\n\n      this.setState({\n        ClientApp,\n      })\n    } catch (error) {\n      console.error(\"MockRouter\", error)\n    }\n  }\n\n  render() {\n    const { ClientApp } = this.state\n\n    return (\n      <React.Fragment>\n        {ClientApp && <ClientApp {...this.props.initialState} />}\n      </React.Fragment>\n    )\n  }\n}\n"],"file":"MockRouter.js"}