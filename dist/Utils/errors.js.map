{"version":3,"sources":["../../src/Utils/errors.tsx"],"names":["NetworkError","Error","ErrorWithMetadata","message","metadata","captureStackTrace","constructor","reportError","error","scope","Object","entries","forEach","key","value","setExtra","Sentry","captureException","sendErrorToService","withScope"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,Y;;;;;;;;;;;;;;;;;;;;;;;;mBAAqBC,K;;;;IAIrBC,iB;;;;;AAGX,6BAAYC,OAAZ,EAAoC;AAAA;;AAAA,QAAfC,QAAe,uEAAJ,EAAI;;AAAA;;AAClC,4FAAMD,OAAN;;AADkC;;AAElC,WAAKC,QAAL,GAAgBA,QAAhB;;AACA,QAAIH,KAAK,CAACI,iBAAV,EAA6B;AAC3BJ,MAAAA,KAAK,CAACI,iBAAN,iCAA8B,OAAKC,WAAnC;AACD;;AALiC;AAMnC;;;mBAToCL,K;;;;AAYhC,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,SAAI,UAAAC,KAAK,EAAI;AAC3C,QAAID,KAAK,YAAYN,iBAArB,EAAwC;AACtCQ,MAAAA,MAAM,CAACC,OAAP,CAAeH,KAAK,CAACJ,QAArB,EAA+BQ,OAA/B,CAAuC,gBAAkB;AAAA;AAAA,YAAhBC,GAAgB;AAAA,YAAXC,KAAW;;AACvDL,QAAAA,KAAK,CAACM,QAAN,CAAeF,GAAf,EAAoBC,KAApB;AACD,OAFD;AAGD;;AACDE,IAAAA,MAAM,CAACC,gBAAP,CAAwBT,KAAxB;AACD,GAP+B;AAAA,CAAzB;;;;AASA,IAAMU,kBAAkB,GAAG,SAArBA,kBAAqB,CAACV,KAAD,EAAsC;AACtEQ,EAAAA,MAAM,CAACG,SAAP,CAAiBZ,WAAW,CAACC,KAAD,CAA5B;AACD,CAFM","sourcesContent":["import * as Sentry from \"@sentry/browser\"\n\nexport class NetworkError extends Error {\n  response: any\n}\n\nexport class ErrorWithMetadata extends Error {\n  metadata: object\n\n  constructor(message, metadata = {}) {\n    super(message)\n    this.metadata = metadata\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor)\n    }\n  }\n}\n\nexport const reportError = error => scope => {\n  if (error instanceof ErrorWithMetadata) {\n    Object.entries(error.metadata).forEach(([key, value]) => {\n      scope.setExtra(key, value)\n    })\n  }\n  Sentry.captureException(error)\n}\n\nexport const sendErrorToService = (error: Error | ErrorWithMetadata) => {\n  Sentry.withScope(reportError(error))\n}\n"],"file":"errors.js"}