{"version":3,"sources":["../../src/Utils/resizer.ts"],"names":["GEMINI_CLOUDFRONT_URL","warn","message","process","env","NODE_ENV","console","crop","src","options","width","height","quality","config","resize_to","qs","stringify","join","resize","convert_to","resizeTo"],"mappings":";;;;;;;;;AAAA;;;;AACA,IAAMA,qBAAqB,GAAG,sCAA9B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,OAAO,EAAI;AACtB,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CC,IAAAA,OAAO,CAACL,IAAR,CAAaC,OAAb;AACD;AACF,CAJD;;AAMO,IAAMK,IAAI,GAAG,SAAPA,IAAO,CAClBC,GADkB,EAElBC,OAFkB,EAOf;AAAA,MACKC,KADL,GACgCD,OADhC,CACKC,KADL;AAAA,MACYC,MADZ,GACgCF,OADhC,CACYE,MADZ;AAAA,MACoBC,OADpB,GACgCH,OADhC,CACoBG,OADpB,EAGH;;AACA,MAAI,CAACJ,GAAL,EAAU,OAAO,IAAP;;AAEV,MAAI,CAACE,KAAD,IAAU,CAACC,MAAf,EAAuB;AACrBV,IAAAA,IAAI,CAAC,2BAAD,CAAJ;AACA,WAAOO,GAAP;AACD,GAHD,MAGO,IAAIE,KAAK,KAAK,CAAd,EAAiB;AACtBT,IAAAA,IAAI,CAAC,wBAAD,CAAJ;AACA,WAAOO,GAAP;AACD,GAHM,MAGA,IAAIG,MAAM,KAAK,CAAf,EAAkB;AACvBV,IAAAA,IAAI,CAAC,yBAAD,CAAJ;AACA,WAAOO,GAAP;AACD;;AAED,MAAMK,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAE,MADE;AAEbN,IAAAA,GAAG,EAAHA,GAFa;AAGbE,IAAAA,KAAK,EAALA,KAHa;AAIbC,IAAAA,MAAM,EAANA,MAJa;AAKbC,IAAAA,OAAO,EAAEA,OAAO,IAAI;AALP,GAAf;AAQA,SAAO,CAACZ,qBAAD,EAAwBe,YAAGC,SAAH,CAAaH,MAAb,CAAxB,EAA8CI,IAA9C,CAAmD,GAAnD,CAAP;AACD,CAjCM;;;;AAmCA,IAAMC,MAAM,GAAG,SAATA,MAAS,CACpBV,GADoB,EAEpBC,OAFoB,EAQjB;AAAA,MACKC,KADL,GAC4CD,OAD5C,CACKC,KADL;AAAA,MACYC,MADZ,GAC4CF,OAD5C,CACYE,MADZ;AAAA,MACoBC,OADpB,GAC4CH,OAD5C,CACoBG,OADpB;AAAA,MAC6BO,UAD7B,GAC4CV,OAD5C,CAC6BU,UAD7B,EAGH;;AACA,MAAI,CAACX,GAAL,EAAU,OAAO,IAAP;AAEV,MAAIY,QAAJ;;AACA,MAAIV,KAAK,IAAI,CAACC,MAAd,EAAsB;AACpBS,IAAAA,QAAQ,GAAG,OAAX;AACD,GAFD,MAEO,IAAIT,MAAM,IAAI,CAACD,KAAf,EAAsB;AAC3BU,IAAAA,QAAQ,GAAG,QAAX;AACD,GAFM,MAEA;AACLA,IAAAA,QAAQ,GAAG,KAAX;AACD;;AAED,MAAMP,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAEM,QADE;AAEbZ,IAAAA,GAAG,EAAHA,GAFa;AAGbE,IAAAA,KAAK,EAALA,KAHa;AAIbC,IAAAA,MAAM,EAANA,MAJa;AAKbC,IAAAA,OAAO,EAAEA,OAAO,IAAI,EALP;AAMbO,IAAAA,UAAU,EAAVA;AANa,GAAf;AASA,SAAO,CAACnB,qBAAD,EAAwBe,YAAGC,SAAH,CAAaH,MAAb,CAAxB,EAA8CI,IAA9C,CAAmD,GAAnD,CAAP;AACD,CAjCM","sourcesContent":["import qs from \"qs\"\nconst GEMINI_CLOUDFRONT_URL = \"https://d7hftxdivxxvm.cloudfront.net\"\n\nconst warn = message => {\n  if (process.env.NODE_ENV === \"development\") {\n    console.warn(message)\n  }\n}\n\nexport const crop = (\n  src: string,\n  options: {\n    width: number\n    height: number\n    quality?: number\n  }\n) => {\n  const { width, height, quality } = options\n\n  // dont call gemini with empty src\n  if (!src) return null\n\n  if (!width && !height) {\n    warn(\"requires width and height\")\n    return src\n  } else if (width === 0) {\n    warn(\"width must be non-zero\")\n    return src\n  } else if (height === 0) {\n    warn(\"height must be non-zero\")\n    return src\n  }\n\n  const config = {\n    resize_to: \"fill\",\n    src,\n    width,\n    height,\n    quality: quality || 95,\n  }\n\n  return [GEMINI_CLOUDFRONT_URL, qs.stringify(config)].join(\"?\")\n}\n\nexport const resize = (\n  src: string,\n  options: {\n    width?: number\n    height?: number\n    quality?: number\n    convert_to?: string\n  }\n) => {\n  const { width, height, quality, convert_to } = options\n\n  // dont call gemini with empty src\n  if (!src) return null\n\n  let resizeTo\n  if (width && !height) {\n    resizeTo = \"width\"\n  } else if (height && !width) {\n    resizeTo = \"height\"\n  } else {\n    resizeTo = \"fit\"\n  }\n\n  const config = {\n    resize_to: resizeTo,\n    src,\n    width,\n    height,\n    quality: quality || 80,\n    convert_to,\n  }\n\n  return [GEMINI_CLOUDFRONT_URL, qs.stringify(config)].join(\"?\")\n}\n"],"file":"resizer.js"}