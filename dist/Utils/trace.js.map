{"version":3,"sources":["../../src/Utils/trace.ts"],"names":["trace","name","work","activeScope","tracer","scopeManager","active","span","startSpan","childOf","then","result","finish","catch","error","addTags","message","stack"],"mappings":";;;;;;;;;;;AAAA;;;;AAEA;;;;;;AAMO,SAASA,KAAT,CAAuCC,IAAvC,EAAqDC,IAArD,EAAiE;AACtE,MAAMC,WAAW,GAAGC,iBAAOC,YAAP,GAAsBC,MAAtB,EAApB;;AACA,MAAMC,IAAI,GAAGH,iBAAOI,SAAP,oBAA6BP,IAA7B,GAAqC;AAChDQ,IAAAA,OAAO,EAAEN,WAAW,IAAIA,WAAW,CAACI,IAAZ;AADwB,GAArC,CAAb;;AAGA,SAAOL,IAAI,CACRQ,IADI,CACC,UAAAC,MAAM,EAAI;AACdJ,IAAAA,IAAI,CAACK,MAAL;AACA,WAAOD,MAAP;AACD,GAJI,EAKJE,KALI,CAKE,UAAAC,KAAK,EAAI;AACdP,IAAAA,IAAI,CAACQ,OAAL,CAAa;AACX,oBAAcD,KAAK,CAACb,IADT;AAEX,mBAAaa,KAAK,CAACE,OAFR;AAGX,qBAAeF,KAAK,CAACG;AAHV,KAAb;AAKAV,IAAAA,IAAI,CAACK,MAAL;AACA,UAAME,KAAN;AACD,GAbI,CAAP;AAcD","sourcesContent":["import tracer from \"dd-trace\"\n\n/**\n * Adds a DataDog trace around a unit of work wrapped by a Promise.\n *\n * @param name The name/resource for the trace span.\n * @param work The `Promise` that is performing the work to be traced.\n */\nexport function trace<T extends Promise<any>>(name: string, work: T): T {\n  const activeScope = tracer.scopeManager().active()\n  const span = tracer.startSpan(`reaction.${name}`, {\n    childOf: activeScope && activeScope.span(),\n  })\n  return work\n    .then(result => {\n      span.finish()\n      return result\n    })\n    .catch(error => {\n      span.addTags({\n        \"error.type\": error.name,\n        \"error.msg\": error.message,\n        \"error.stack\": error.stack,\n      })\n      span.finish()\n      throw error\n    }) as T\n}\n"],"file":"trace.js"}