{"version":3,"sources":["../../src/__generated__/RegisterValidTestQuery.graphql.ts"],"names":["node","v0","v1","v2","hash"],"mappings":";;;;;;;;;AAAA;;AAqBA;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAMA,IAAqB,GAAI,YAAU;AACzC,MAAIC,EAAE,GAAG,CACP;AACE,YAAQ,SADV;AAEE,YAAQ,IAFV;AAGE,aAAS,oBAHX;AAIE,YAAQ;AAJV,GADO,CAAT;AAAA,MAQAC,EAAE,GAAG;AACH,YAAQ,aADL;AAEH,aAAS,IAFN;AAGH,YAAQ,MAHL;AAIH,YAAQ,IAJL;AAKH,kBAAc;AALX,GARL;AAAA,MAeAC,EAAE,GAAG;AACH,YAAQ,aADL;AAEH,aAAS,IAFN;AAGH,YAAQ,IAHL;AAIH,YAAQ,IAJL;AAKH,kBAAc;AALX,GAfL;AAsBA,SAAO;AACL,YAAQ,SADH;AAEL,qBAAiB,OAFZ;AAGL,YAAQ,wBAHH;AAIL,UAAM,IAJD;AAKL,YAAQ,kRALH;AAML,gBAAY,EANP;AAOL,gBAAY;AACV,cAAQ,UADE;AAEV,cAAQ,wBAFE;AAGV,cAAQ,OAHE;AAIV,kBAAY,IAJF;AAKV,6BAAuB,EALb;AAMV,oBAAc,CACZ;AACE,gBAAQ,aADV;AAEE,iBAAS,IAFX;AAGE,gBAAQ,MAHV;AAIE,sBAAc,iCAJhB;AAKE,gBAAQF,EALV;AAME,wBAAgB,MANlB;AAOE,kBAAU,KAPZ;AAQE,sBAAc,CACZ;AACE,kBAAQ,gBADV;AAEE,kBAAQ,eAFV;AAGE,kBAAQ;AAHV,SADY,EAMZC,EANY;AARhB,OADY,EAkBZ;AACE,gBAAQ,aADV;AAEE,iBAAS,IAFX;AAGE,gBAAQ,IAHV;AAIE,sBAAc,IAJhB;AAKE,gBAAQ,IALV;AAME,wBAAgB,IANlB;AAOE,kBAAU,KAPZ;AAQE,sBAAc,CACZ;AACE,kBAAQ,gBADV;AAEE,kBAAQ,aAFV;AAGE,kBAAQ;AAHV,SADY,EAMZA,EANY;AARhB,OAlBY;AANJ,KAPP;AAkDL,iBAAa;AACX,cAAQ,WADG;AAEX,cAAQ,wBAFG;AAGX,6BAAuB,EAHZ;AAIX,oBAAc,CACZ;AACE,gBAAQ,aADV;AAEE,iBAAS,IAFX;AAGE,gBAAQ,MAHV;AAIE,sBAAc,iCAJhB;AAKE,gBAAQD,EALV;AAME,wBAAgB,MANlB;AAOE,kBAAU,KAPZ;AAQE,sBAAc,CACZE,EADY,EAEZ;AACE,kBAAQ,aADV;AAEE,mBAAS,IAFX;AAGE,kBAAQ,KAHV;AAIE,kBAAQ,IAJV;AAKE,wBAAc;AALhB,SAFY,EASZ;AACE,kBAAQ,aADV;AAEE,mBAAS,IAFX;AAGE,kBAAQ,QAHV;AAIE,kBAAQ,IAJV;AAKE,wBAAc;AALhB,SATY,EAgBZD,EAhBY;AARhB,OADY,EA4BZ;AACE,gBAAQ,aADV;AAEE,iBAAS,IAFX;AAGE,gBAAQ,IAHV;AAIE,sBAAc,IAJhB;AAKE,gBAAQ,IALV;AAME,wBAAgB,IANlB;AAOE,kBAAU,KAPZ;AAQE,sBAAc,CACZC,EADY,EAEZD,EAFY;AARhB,OA5BY;AAJH;AAlDR,GAAP;AAkGC,CAzH6B,EAA9B;;AA0HCF,IAAD,CAAcI,IAAd,GAAqB,kCAArB;eACeJ,I","sourcesContent":["/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nimport { Register_me$ref } from \"./Register_me.graphql\";\nimport { Register_sale$ref } from \"./Register_sale.graphql\";\nexport type RegisterValidTestQueryVariables = {};\nexport type RegisterValidTestQueryResponse = {\n    readonly sale: ({\n        readonly \" $fragmentRefs\": Register_sale$ref;\n    }) | null;\n    readonly me: ({\n        readonly \" $fragmentRefs\": Register_me$ref;\n    }) | null;\n};\nexport type RegisterValidTestQuery = {\n    readonly response: RegisterValidTestQueryResponse;\n    readonly variables: RegisterValidTestQueryVariables;\n};\n\n\n\n/*\nquery RegisterValidTestQuery {\n  sale(id: \"example-auction-id\") {\n    ...Register_sale\n    __id\n  }\n  me {\n    ...Register_me\n    __id\n  }\n}\n\nfragment Register_sale on Sale {\n  id\n  _id\n  status\n  __id\n}\n\nfragment Register_me on Me {\n  id\n  __id\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"id\",\n    \"value\": \"example-auction-id\",\n    \"type\": \"String!\"\n  }\n],\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"__id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv2 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"operationKind\": \"query\",\n  \"name\": \"RegisterValidTestQuery\",\n  \"id\": null,\n  \"text\": \"query RegisterValidTestQuery {\\n  sale(id: \\\"example-auction-id\\\") {\\n    ...Register_sale\\n    __id\\n  }\\n  me {\\n    ...Register_me\\n    __id\\n  }\\n}\\n\\nfragment Register_sale on Sale {\\n  id\\n  _id\\n  status\\n  __id\\n}\\n\\nfragment Register_me on Me {\\n  id\\n  __id\\n}\\n\",\n  \"metadata\": {},\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RegisterValidTestQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"sale\",\n        \"storageKey\": \"sale(id:\\\"example-auction-id\\\")\",\n        \"args\": v0,\n        \"concreteType\": \"Sale\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"Register_sale\",\n            \"args\": null\n          },\n          v1\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"me\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Me\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"Register_me\",\n            \"args\": null\n          },\n          v1\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"RegisterValidTestQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"sale\",\n        \"storageKey\": \"sale(id:\\\"example-auction-id\\\")\",\n        \"args\": v0,\n        \"concreteType\": \"Sale\",\n        \"plural\": false,\n        \"selections\": [\n          v2,\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"_id\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"status\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          v1\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"me\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Me\",\n        \"plural\": false,\n        \"selections\": [\n          v2,\n          v1\n        ]\n      }\n    ]\n  }\n};\n})();\n(node as any).hash = 'e09da6584348e9a59dfbc0da8831f992';\nexport default node;\n"],"file":"RegisterValidTestQuery.graphql.js"}