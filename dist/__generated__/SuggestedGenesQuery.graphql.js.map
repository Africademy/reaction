{"version":3,"sources":["../../src/__generated__/SuggestedGenesQuery.graphql.ts"],"names":["node","v0","hash"],"mappings":";;;;;;;;;AAAA;;AAiBA;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAMA,IAAqB,GAAI,YAAU;AACzC,MAAIC,EAAE,GAAG;AACP,YAAQ,aADD;AAEP,aAAS,IAFF;AAGP,YAAQ,MAHD;AAIP,YAAQ,IAJD;AAKP,kBAAc;AALP,GAAT;AAOA,SAAO;AACL,YAAQ,SADH;AAEL,qBAAiB,OAFZ;AAGL,YAAQ,qBAHH;AAIL,UAAM,IAJD;AAKL,YAAQ,0RALH;AAML,gBAAY,EANP;AAOL,gBAAY;AACV,cAAQ,UADE;AAEV,cAAQ,qBAFE;AAGV,cAAQ,OAHE;AAIV,kBAAY,IAJF;AAKV,6BAAuB,EALb;AAMV,oBAAc,CACZ;AACE,gBAAQ,aADV;AAEE,iBAAS,IAFX;AAGE,gBAAQ,iBAHV;AAIE,sBAAc,IAJhB;AAKE,gBAAQ,IALV;AAME,wBAAgB,MANlB;AAOE,kBAAU,IAPZ;AAQE,sBAAc,CACZ;AACE,kBAAQ,gBADV;AAEE,kBAAQ,gCAFV;AAGE,kBAAQ;AAHV,SADY,EAMZA,EANY;AARhB,OADY;AANJ,KAPP;AAiCL,iBAAa;AACX,cAAQ,WADG;AAEX,cAAQ,qBAFG;AAGX,6BAAuB,EAHZ;AAIX,oBAAc,CACZ;AACE,gBAAQ,aADV;AAEE,iBAAS,IAFX;AAGE,gBAAQ,iBAHV;AAIE,sBAAc,IAJhB;AAKE,gBAAQ,IALV;AAME,wBAAgB,MANlB;AAOE,kBAAU,IAPZ;AAQE,sBAAc,CACZ;AACE,kBAAQ,aADV;AAEE,mBAAS,IAFX;AAGE,kBAAQ,IAHV;AAIE,kBAAQ,IAJV;AAKE,wBAAc;AALhB,SADY,EAQZ;AACE,kBAAQ,aADV;AAEE,mBAAS,IAFX;AAGE,kBAAQ,KAHV;AAIE,kBAAQ,IAJV;AAKE,wBAAc;AALhB,SARY,EAeZ;AACE,kBAAQ,aADV;AAEE,mBAAS,IAFX;AAGE,kBAAQ,MAHV;AAIE,kBAAQ,IAJV;AAKE,wBAAc;AALhB,SAfY,EAsBZ;AACE,kBAAQ,aADV;AAEE,mBAAS,IAFX;AAGE,kBAAQ,OAHV;AAIE,wBAAc,IAJhB;AAKE,kBAAQ,IALV;AAME,0BAAgB,OANlB;AAOE,oBAAU,KAPZ;AAQE,wBAAc,CACZ;AACE,oBAAQ,aADV;AAEE,qBAAS,IAFX;AAGE,oBAAQ,SAHV;AAIE,0BAAc,+BAJhB;AAKE,oBAAQ,CACN;AACE,sBAAQ,SADV;AAEE,sBAAQ,QAFV;AAGE,uBAAS,GAHX;AAIE,sBAAQ;AAJV,aADM,EAON;AACE,sBAAQ,SADV;AAEE,sBAAQ,OAFV;AAGE,uBAAS,GAHX;AAIE,sBAAQ;AAJV,aAPM,CALV;AAmBE,4BAAgB,iBAnBlB;AAoBE,sBAAU,KApBZ;AAqBE,0BAAc,CACZ;AACE,sBAAQ,aADV;AAEE,uBAAS,IAFX;AAGE,sBAAQ,KAHV;AAIE,sBAAQ,IAJV;AAKE,4BAAc;AALhB,aADY;AArBhB,WADY,EAgCZ;AACE,oBAAQ,aADV;AAEE,qBAAS,MAFX;AAGE,oBAAQ,IAHV;AAIE,oBAAQ,IAJV;AAKE,0BAAc;AALhB,WAhCY;AARhB,SAtBY,EAuEZA,EAvEY;AARhB,OADY;AAJH;AAjCR,GAAP;AA2HC,CAnI6B,EAA9B;;AAoICD,IAAD,CAAcE,IAAd,GAAqB,kCAArB;eACeF,I","sourcesContent":["/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nimport { SuggestedGenes_suggested_genes$ref } from \"./SuggestedGenes_suggested_genes.graphql\";\nexport type SuggestedGenesQueryVariables = {};\nexport type SuggestedGenesQueryResponse = {\n    readonly suggested_genes: ReadonlyArray<({\n        readonly \" $fragmentRefs\": SuggestedGenes_suggested_genes$ref;\n    }) | null> | null;\n};\nexport type SuggestedGenesQuery = {\n    readonly response: SuggestedGenesQueryResponse;\n    readonly variables: SuggestedGenesQueryVariables;\n};\n\n\n\n/*\nquery SuggestedGenesQuery {\n  suggested_genes {\n    ...SuggestedGenes_suggested_genes\n    __id\n  }\n}\n\nfragment SuggestedGenes_suggested_genes on Gene {\n  id\n  _id\n  name\n  image {\n    cropped(width: 100, height: 100) {\n      url\n    }\n    __id: id\n  }\n  __id\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"__id\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"operationKind\": \"query\",\n  \"name\": \"SuggestedGenesQuery\",\n  \"id\": null,\n  \"text\": \"query SuggestedGenesQuery {\\n  suggested_genes {\\n    ...SuggestedGenes_suggested_genes\\n    __id\\n  }\\n}\\n\\nfragment SuggestedGenes_suggested_genes on Gene {\\n  id\\n  _id\\n  name\\n  image {\\n    cropped(width: 100, height: 100) {\\n      url\\n    }\\n    __id: id\\n  }\\n  __id\\n}\\n\",\n  \"metadata\": {},\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"SuggestedGenesQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"suggested_genes\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Gene\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"SuggestedGenes_suggested_genes\",\n            \"args\": null\n          },\n          v0\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"SuggestedGenesQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"suggested_genes\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Gene\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"id\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"_id\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"name\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"image\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"Image\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"cropped\",\n                \"storageKey\": \"cropped(height:100,width:100)\",\n                \"args\": [\n                  {\n                    \"kind\": \"Literal\",\n                    \"name\": \"height\",\n                    \"value\": 100,\n                    \"type\": \"Int!\"\n                  },\n                  {\n                    \"kind\": \"Literal\",\n                    \"name\": \"width\",\n                    \"value\": 100,\n                    \"type\": \"Int!\"\n                  }\n                ],\n                \"concreteType\": \"CroppedImageUrl\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"url\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  }\n                ]\n              },\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": \"__id\",\n                \"name\": \"id\",\n                \"args\": null,\n                \"storageKey\": null\n              }\n            ]\n          },\n          v0\n        ]\n      }\n    ]\n  }\n};\n})();\n(node as any).hash = '42530c5bcd10f72dbb90c9e06541717d';\nexport default node;\n"],"file":"SuggestedGenesQuery.graphql.js"}