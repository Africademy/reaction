{"version":3,"sources":["../../src/__generated__/createMockNetworkLayerTestAliasPrecendenceQuery.graphql.ts"],"names":["node","v0","v1","hash"],"mappings":";;;;;;;;;AAAA;;AAkBA;;;;;;;;;;AAWA,IAAMA,IAAqB,GAAI,YAAU;AACzC,MAAIC,EAAE,GAAG;AACP,YAAQ,aADD;AAEP,aAAS,IAFF;AAGP,YAAQ,MAHD;AAIP,YAAQ,IAJD;AAKP,kBAAc;AALP,GAAT;AAAA,MAOAC,EAAE,GAAG,CACH;AACE,YAAQ,aADV;AAEE,aAAS,IAFX;AAGE,YAAQ,QAHV;AAIE,kBAAc,uBAJhB;AAKE,YAAQ,CACN;AACE,cAAQ,SADV;AAEE,cAAQ,IAFV;AAGE,eAAS,QAHX;AAIE,cAAQ;AAJV,KADM,CALV;AAaE,oBAAgB,QAblB;AAcE,cAAU,KAdZ;AAeE,kBAAc,CACZ;AACE,cAAQ,aADV;AAEE,eAAS,iBAFX;AAGE,cAAQ,UAHV;AAIE,oBAAc,kCAJhB;AAKE,cAAQ,CACN;AACE,gBAAQ,SADV;AAEE,gBAAQ,QAFV;AAGE,iBAAS,aAHX;AAIE,gBAAQ;AAJV,OADM,CALV;AAaE,sBAAgB,SAblB;AAcE,gBAAU,IAdZ;AAeE,oBAAc,CACZD,EADY;AAfhB,KADY,EAoBZA,EApBY;AAfhB,GADG,CAPL;AA+CA,SAAO;AACL,YAAQ,SADH;AAEL,qBAAiB,OAFZ;AAGL,YAAQ,iDAHH;AAIL,UAAM,IAJD;AAKL,YAAQ,kLALH;AAML,gBAAY,EANP;AAOL,gBAAY;AACV,cAAQ,UADE;AAEV,cAAQ,iDAFE;AAGV,cAAQ,OAHE;AAIV,kBAAY,IAJF;AAKV,6BAAuB,EALb;AAMV,oBAAcC;AANJ,KAPP;AAeL,iBAAa;AACX,cAAQ,WADG;AAEX,cAAQ,iDAFG;AAGX,6BAAuB,EAHZ;AAIX,oBAAcA;AAJH;AAfR,GAAP;AAsBC,CAtE6B,EAA9B;;AAuECF,IAAD,CAAcG,IAAd,GAAqB,kCAArB;eACeH,I","sourcesContent":["/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type createMockNetworkLayerTestAliasPrecendenceQueryVariables = {};\nexport type createMockNetworkLayerTestAliasPrecendenceQueryResponse = {\n    readonly artist: ({\n        readonly forSaleArtworks: ReadonlyArray<({\n            readonly __id: string;\n        }) | null> | null;\n    }) | null;\n};\nexport type createMockNetworkLayerTestAliasPrecendenceQuery = {\n    readonly response: createMockNetworkLayerTestAliasPrecendenceQueryResponse;\n    readonly variables: createMockNetworkLayerTestAliasPrecendenceQueryVariables;\n};\n\n\n\n/*\nquery createMockNetworkLayerTestAliasPrecendenceQuery {\n  artist(id: \"banksy\") {\n    forSaleArtworks: artworks(filter: IS_FOR_SALE) {\n      __id\n    }\n    __id\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"__id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv1 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"artist\",\n    \"storageKey\": \"artist(id:\\\"banksy\\\")\",\n    \"args\": [\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"id\",\n        \"value\": \"banksy\",\n        \"type\": \"String!\"\n      }\n    ],\n    \"concreteType\": \"Artist\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"forSaleArtworks\",\n        \"name\": \"artworks\",\n        \"storageKey\": \"artworks(filter:\\\"IS_FOR_SALE\\\")\",\n        \"args\": [\n          {\n            \"kind\": \"Literal\",\n            \"name\": \"filter\",\n            \"value\": \"IS_FOR_SALE\",\n            \"type\": \"[ArtistArtworksFilters]\"\n          }\n        ],\n        \"concreteType\": \"Artwork\",\n        \"plural\": true,\n        \"selections\": [\n          v0\n        ]\n      },\n      v0\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"operationKind\": \"query\",\n  \"name\": \"createMockNetworkLayerTestAliasPrecendenceQuery\",\n  \"id\": null,\n  \"text\": \"query createMockNetworkLayerTestAliasPrecendenceQuery {\\n  artist(id: \\\"banksy\\\") {\\n    forSaleArtworks: artworks(filter: IS_FOR_SALE) {\\n      __id\\n    }\\n    __id\\n  }\\n}\\n\",\n  \"metadata\": {},\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"createMockNetworkLayerTestAliasPrecendenceQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": v1\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"createMockNetworkLayerTestAliasPrecendenceQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": v1\n  }\n};\n})();\n(node as any).hash = 'ce15fb8d6e1436f250f61e9fb17cccb3';\nexport default node;\n"],"file":"createMockNetworkLayerTestAliasPrecendenceQuery.graphql.js"}