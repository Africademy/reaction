{"version":3,"sources":["components/__stories__/artwork_filter.js","../src/components/__stories__/artwork_filter.tsx"],"names":["storybook_1","require","React","Relay","config_1","root_queries_1","dropdown_1","index_1","total_count_1","FilterArtworksDropdown","props","state","selected","count","setState","name","dropdowns","filter_artworks","aggregations","map","createElement","default","aggregation","key","slice","onSelect","showSelection","style","padding","Component","FilterArtworksDropdownContainer","createContainer","fragments","getFragment","FilterArtworksTotalCount","FilterArtworksTotalCountContainer","FilterArtworksDropdownExample","injectNetworkLayer","artsyNetworkLayer","RootContainer","route","FilterArtworksQueryConfig","FilterArtworksTotalCountExample","FilterArtworksExample","storiesOf","add"],"mappings":"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","file":"artwork_filter.js","sourcesContent":["\"use strict\";\nconst storybook_1 = require(\"@kadira/storybook\");\nconst React = require(\"react\");\nconst Relay = require(\"react-relay\");\nconst config_1 = require(\"../../relay/config\");\nconst root_queries_1 = require(\"../../relay/root_queries\");\nconst dropdown_1 = require(\"../artwork_filter/dropdown\");\nconst index_1 = require(\"../artwork_filter/index\");\nconst total_count_1 = require(\"../artwork_filter/total_count\");\nclass FilterArtworksDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: \"\",\n        };\n    }\n    showSelection(count) {\n        this.setState({\n            selected: count.name,\n        });\n    }\n    render() {\n        const dropdowns = this.props\n            .filter_artworks\n            .filter_artworks.aggregations.map(aggregation => (React.createElement(dropdown_1.default, { aggregation: aggregation, key: aggregation.slice, onSelect: this.showSelection })));\n        const selected = React.createElement(\"div\", null, this.state.selected);\n        return (React.createElement(\"div\", null,\n            React.createElement(\"div\", null, dropdowns),\n            React.createElement(\"div\", { style: { padding: \"20px 0\" } },\n                \"Selected: \",\n                selected)));\n    }\n}\nconst FilterArtworksDropdownContainer = Relay.createContainer(FilterArtworksDropdown, {\n    fragments: {\n        filter_artworks: () => Relay.QL `\n      fragment on Viewer {\n        filter_artworks(\n          aggregations: [MEDIUM, GALLERY], \n          artist_id: \"christopher-williams\"\n        ) {\n          aggregations {\n            ${dropdown_1.default.getFragment(\"aggregation\")}\n          }\n        }\n      }\n    `,\n    },\n});\nclass FilterArtworksTotalCount extends React.Component {\n    render() {\n        return (React.createElement(total_count_1.default, { filter_artworks: this.props.filter_artworks.filter_artworks }));\n    }\n}\nconst FilterArtworksTotalCountContainer = Relay.createContainer(FilterArtworksTotalCount, {\n    fragments: {\n        filter_artworks: () => Relay.QL `\n      fragment on Viewer {\n        filter_artworks(\n          aggregations: [TOTAL], \n          artist_id: \"christopher-williams\"\n        ) {\n          ${total_count_1.default.getFragment(\"filter_artworks\")}\n        }\n      }\n    `,\n    },\n});\nfunction FilterArtworksDropdownExample() {\n    Relay.injectNetworkLayer(config_1.artsyNetworkLayer());\n    return (React.createElement(Relay.RootContainer, { Component: FilterArtworksDropdownContainer, route: new root_queries_1.FilterArtworksQueryConfig() }));\n}\nfunction FilterArtworksTotalCountExample() {\n    Relay.injectNetworkLayer(config_1.artsyNetworkLayer());\n    return (React.createElement(Relay.RootContainer, { Component: FilterArtworksTotalCountContainer, route: new root_queries_1.FilterArtworksQueryConfig() }));\n}\nfunction FilterArtworksExample() {\n    Relay.injectNetworkLayer(config_1.artsyNetworkLayer());\n    return (React.createElement(Relay.RootContainer, { Component: index_1.default, route: new root_queries_1.FilterArtworksQueryConfig() }));\n}\nstorybook_1.storiesOf(\"Artwork Filter Components\", dropdown_1.default)\n    .add(\"Filter dropdown\", () => (React.createElement(FilterArtworksDropdownExample, null)))\n    .add(\"Total Count\", () => (React.createElement(FilterArtworksTotalCountExample, null)))\n    .add(\"Artwork filter\", () => (React.createElement(FilterArtworksExample, null)));\n","import { action, storiesOf } from \"@kadira/storybook\"\nimport * as React from \"react\"\nimport * as Relay from \"react-relay\"\n\nimport { artsyNetworkLayer } from \"../../relay/config\"\nimport { FilterArtworksQueryConfig } from \"../../relay/root_queries\"\n\nimport Dropdown from \"../artwork_filter/dropdown\"\nimport ArtworksFilter from \"../artwork_filter/index\"\nimport TotalCount from \"../artwork_filter/total_count\"\n\ninterface FilterArtworksDropdownState {\n  selected: string\n}\n\nclass FilterArtworksDropdown extends React.Component<DropdownRelayProps, FilterArtworksDropdownState> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selected: \"\",\n    }\n  }\n\n  showSelection(count) {\n    this.setState ({\n      selected: count.name,\n    })\n  }\n\n  render() {\n    const dropdowns = this.props\n      .filter_artworks\n      .filter_artworks.aggregations.map(aggregation =>\n        (\n          <Dropdown\n            aggregation={aggregation}\n            key={aggregation.slice}\n            onSelect={this.showSelection}\n          />\n        ),\n      )\n\n    const selected = <div>{this.state.selected}</div>\n\n    return (\n      <div>\n        <div>{dropdowns}</div>\n        <div style={{padding: \"20px 0\"}}>\n          Selected: {selected}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst FilterArtworksDropdownContainer = Relay.createContainer(FilterArtworksDropdown, {\n  fragments: {\n    filter_artworks: () => Relay.QL`\n      fragment on Viewer {\n        filter_artworks(\n          aggregations: [MEDIUM, GALLERY], \n          artist_id: \"christopher-williams\"\n        ) {\n          aggregations {\n            ${Dropdown.getFragment(\"aggregation\")}\n          }\n        }\n      }\n    `,\n  },\n})\n\ninterface DropdownRelayProps {\n  filter_artworks: {\n    filter_artworks: {\n      aggregations: Array<{\n        slice: string | null,\n        counts: {\n          name: string | null,\n          count: number | null,\n          id: string | null,\n        },\n      } | null> | null,\n    } | null,\n  } | null,\n}\n\nclass FilterArtworksTotalCount extends React.Component<TotalCountRelayProps, null> {\n  render() {\n    return (<TotalCount filter_artworks={this.props.filter_artworks.filter_artworks} />)\n  }\n}\n\nconst FilterArtworksTotalCountContainer = Relay.createContainer(FilterArtworksTotalCount, {\n  fragments: {\n    filter_artworks: () => Relay.QL`\n      fragment on Viewer {\n        filter_artworks(\n          aggregations: [TOTAL], \n          artist_id: \"christopher-williams\"\n        ) {\n          ${TotalCount.getFragment(\"filter_artworks\")}\n        }\n      }\n    `,\n  },\n})\n\ninterface TotalCountRelayProps {\n  filter_artworks: {\n    filter_artworks: {\n      counts: {\n        total: number | null,\n      } | null,\n    } | null,\n  } | null,\n}\n\nfunction FilterArtworksDropdownExample() {\n  Relay.injectNetworkLayer(artsyNetworkLayer())\n  return (\n    <Relay.RootContainer\n      Component={FilterArtworksDropdownContainer}\n      route={new FilterArtworksQueryConfig()}\n    />\n  )\n}\n\nfunction FilterArtworksTotalCountExample() {\n  Relay.injectNetworkLayer(artsyNetworkLayer())\n  return (\n    <Relay.RootContainer\n      Component={FilterArtworksTotalCountContainer}\n      route={new FilterArtworksQueryConfig()}\n    />\n  )\n}\n\nfunction FilterArtworksExample() {\n  Relay.injectNetworkLayer(artsyNetworkLayer())\n  return (\n    <Relay.RootContainer\n      Component={ArtworksFilter}\n      route={new FilterArtworksQueryConfig()}\n    />\n  )\n}\n\nstoriesOf(\"Artwork Filter Components\", Dropdown)\n  .add(\"Filter dropdown\", () => (\n    <FilterArtworksDropdownExample />\n  ))\n  .add(\"Total Count\", () => (\n    <FilterArtworksTotalCountExample />\n  ))\n  .add(\"Artwork filter\", () => (\n    <FilterArtworksExample />\n  ))\n"]}