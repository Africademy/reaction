{"version":3,"sources":["components/__stories__/artwork_grid.js","../src/components/__stories__/artwork_grid.tsx"],"names":["storybook_1","require","React","Relay","artwork_grid_1","config_1","root_queries_1","ArtistArtworks","createElement","default","artworks","props","artist","Component","exports","ArtistArtworksContainer","createContainer","fragments","getFragment","GridExample","injectNetworkLayer","artsyNetworkLayer","RootContainer","route","ArtistQueryConfig","artistID","storiesOf","add"],"mappings":"AAAA,a;ACAA,IAAAA,cAAAC,QAAA,mBAAA,CAAA;AACA,IAAAC,QAAAD,QAAA,OAAA,CAAA;AACA,IAAAE,QAAAF,QAAA,aAAA,CAAA;AAGA,IAAAG,iBAAAH,QAAA,iBAAA,CAAA;AAEA,IAAAI,WAAAJ,QAAA,oBAAA,CAAA;AACA,IAAAK,iBAAAL,QAAA,0BAAA,CAAA,C;AAEAM,c;AACQ;AACJ,mBACEL,MAAAM,aAAA,CAACJ,eAAAK,OAAD,EAAY,EAACC,UAAU,KAAKC,KAAL,CAAWC,MAAX,CAAkBF,QAA7B,EAAZ,CADF;AAGD,S,6BALiCR,MAAMW,S;;AAA1CC,QAAAP,cAAA,GAAAA,cAAA;AAQA,IAAMQ,0BAA0BZ,MAAMa,eAAN,CAAsBT,cAAtB,EAAsC;AACpEU,eAAW;AACTL,gBAAQ;;;AAGAR,2BAAAK,OAAA,CAAYS,WAAZ,CAAwB,UAAxB,CAHA,GADC,EADyD,EAAtC,CAAhC;;;;;;AAkBA,SAAAC,WAAA,CAAqBR,KAArB,EAAgD;AAC9CR,UAAMiB,kBAAN,CAAyBf,SAAAgB,iBAAA,EAAzB;AACA,WACEnB,MAAAM,aAAA,CAACL,MAAMmB,aAAP,EAAoB,EAClBT,WAAWE,uBADO,EAElBQ,OAAO,IAAIjB,eAAAkB,iBAAJ,CAAsB,EAAEC,UAAUd,MAAMc,QAAlB,EAAtB,CAFW,EAApB,CADF;AAMD;AAEDzB,YAAA0B,SAAA,CAAU,aAAV,EAAyBtB,eAAAK,OAAzB;AACGkB,GADH,CACO,gBADP,EACyB,oBACrBzB,MAAAM,aAAA,CAACW,WAAD,EAAY,EAACM,UAAS,QAAV,EAAZ,CADqB,EADzB","file":"artwork_grid.js","sourcesContent":["\"use strict\";\nconst storybook_1 = require(\"@kadira/storybook\");\nconst React = require(\"react\");\nconst Relay = require(\"react-relay\");\nconst artwork_grid_1 = require(\"../artwork_grid\");\nconst config_1 = require(\"../../relay/config\");\nconst root_queries_1 = require(\"../../relay/root_queries\");\nclass ArtistArtworks extends React.Component {\n    render() {\n        return (React.createElement(artwork_grid_1.default, { artworks: this.props.artist.artworks }));\n    }\n}\nexports.ArtistArtworks = ArtistArtworks;\nconst ArtistArtworksContainer = Relay.createContainer(ArtistArtworks, {\n    fragments: {\n        artist: () => Relay.QL `\n      fragment on Artist {\n        artworks: artworks_connection(first: 10) {\n          ${artwork_grid_1.default.getFragment(\"artworks\")}\n        }\n      }\n    `,\n    },\n});\nfunction GridExample(props) {\n    Relay.injectNetworkLayer(config_1.artsyNetworkLayer());\n    return (React.createElement(Relay.RootContainer, { Component: ArtistArtworksContainer, route: new root_queries_1.ArtistQueryConfig({ artistID: props.artistID }) }));\n}\nstorybook_1.storiesOf(\"ArtworkGrid\", artwork_grid_1.default)\n    .add(\"A typical grid\", () => (React.createElement(GridExample, { artistID: \"banksy\" })));\n","import { action, storiesOf } from \"@kadira/storybook\"\nimport * as React from \"react\"\nimport * as Relay from \"react-relay\"\n\nimport Artwork from \"../artwork/index\"\nimport ArtworkGrid from \"../artwork_grid\"\n\nimport { artsyNetworkLayer } from \"../../relay/config\"\nimport { ArtistQueryConfig } from \"../../relay/root_queries\"\n\nexport class ArtistArtworks extends React.Component<RelayProps, null> {\n  render() {\n    return (\n      <ArtworkGrid artworks={this.props.artist.artworks as any} />\n    )\n  }\n}\n\nconst ArtistArtworksContainer = Relay.createContainer(ArtistArtworks, {\n  fragments: {\n    artist: () => Relay.QL`\n      fragment on Artist {\n        artworks: artworks_connection(first: 10) {\n          ${ArtworkGrid.getFragment(\"artworks\")}\n        }\n      }\n    `,\n  },\n})\n\ninterface RelayProps {\n  artist: {\n    artworks: Array<any | null> | null,\n  },\n}\n\nfunction GridExample(props: { artistID: string }) {\n  Relay.injectNetworkLayer(artsyNetworkLayer())\n  return (\n    <Relay.RootContainer\n      Component={ArtistArtworksContainer}\n      route={new ArtistQueryConfig({ artistID: props.artistID })}\n    />\n  )\n}\n\nstoriesOf(\"ArtworkGrid\", ArtworkGrid)\n  .add(\"A typical grid\", () => (\n    <GridExample artistID=\"banksy\" />\n  ))\n"]}