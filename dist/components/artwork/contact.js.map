{"version":3,"sources":["components/artwork/contact.js","../src/components/artwork/contact.tsx"],"names":["React","require","Relay","text_link_1","ArtworkContact","artwork","props","sale","is_auction","auctionLine","is_inquireable","contactPartnerLine","is_live_open","createElement","default","href","underline","is_open","sa","sale_artwork","bids","counts","bidder_positions","s","highest_bid","display","opening_bid","is_closed","partner","type","toLowerCase","contactLine","Component","exports","Object","defineProperty","value","createContainer","fragments"],"mappings":"AAAA,a;ACAA,IAAAA,QAAAC,QAAA,OAAA,CAAA;AACA,IAAAC,QAAAD,QAAA,aAAA,CAAA;AACA,IAAAE,cAAAF,QAAA,cAAA,CAAA,C;AAMAG,c;AAEa;AACDC,mBADC,GACW,KAAKC,KADhB,CACDD,OADC;AAET,gBAAIA,QAAQE,IAAR,IAAgBF,QAAQE,IAAR,CAAaC,UAAjC,EAA6C;AAC3C,uBAAO,KAAKC,WAAL,EAAP;AACD,aAFD;AAEO,gBAAIJ,QAAQK,cAAZ,EAA4B;AACjC,uBAAO,KAAKC,kBAAL,EAAP;AACD;AACF,S;AAEU;AACDN,mBADC,GACW,KAAKC,KADhB,CACDD,OADC;AAET,gBAAIA,QAAQE,IAAR,CAAaK,YAAjB,EAA+B;AAC7B,uBAAOZ,MAAAa,aAAA,CAACV,YAAAW,OAAD,EAAS,EAACC,MAAMV,QAAQU,IAAf,EAAqBC,WAAW,IAAhC,EAAT,EAA6C,oBAA7C,CAAP;AACD,aAFD;AAEO,gBAAIX,QAAQE,IAAR,CAAaU,OAAjB,EAA0B;AAC/B,oBAAMC,KAAKb,QAAQc,YAAnB;AACA,oBAAMC,OAAOF,GAAGG,MAAH,CAAUC,gBAAvB;AACA,oBAAIF,OAAO,CAAX,EAAc;AACZ,wBAAMG,IAAIH,OAAO,CAAP,GAAW,GAAX,GAAiB,EAA3B;AACA,2BAAOpB,MAAAa,aAAA,CAAA,MAAA,EAAA,IAAA;AAAOK,uBAAGM,WAAH,CAAeC,OAAtB;ADFK,wBCEL;AAAiCL,wBAAjC;ADAK,0BCAL;AAA2CG,qBAA3C;ADEK,uBCFL,CAAP;AACD,iBAHD;AAGO;AACL,2BAAOvB,MAAAa,aAAA,CAAA,MAAA,EAAA,IAAA,EAAOK,GAAGQ,WAAH,CAAeD,OAAtB,CAAP;AACD;AACF,aATM;AASA,gBAAIpB,QAAQE,IAAR,CAAaoB,SAAjB,EAA4B;AACjC,uBAAO3B,MAAAa,aAAA,CAAA,MAAA,EAAA,IAAA,EAAA,gBAAA,CAAP;AACD,aAFM;AAEA;AACL,uBAAOb,MAAAa,aAAA,CAAA,MAAA,EAAA,IAAA,CAAP;AACD;AACF,S;AAEiB;AAChB,mBACEb,MAAAa,aAAA,CAACV,YAAAW,OAAD,EAAS,EAACC,MAAM,KAAKT,KAAL,CAAWD,OAAX,CAAmBU,IAA1B,EAAgCC,WAAW,IAA3C,EAAT;ADIM,sBCJN;AACW,iBAAKV,KAAL,CAAWD,OAAX,CAAmBuB,OAAnB,CAA2BC,IAA3B,CAAgCC,WAAhC,EADX,CADF;AAKD,S;AAEK;AACJ,mBAAO9B,MAAAa,aAAA,CAAA,KAAA,EAAA,IAAA,EAAM,KAAKkB,WAAL,EAAN,CAAP;AACD,S,6BAzCiC/B,MAAMgC,S;;AAA1CC,QAAA7B,cAAA,GAAAA,cAAA;AD6CA8B,OAAOC,cAAP,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,EAAEG,OAAO,IAAT,EAA7C;ACDAH,QAAAnB,OAAA,GAAeZ,MAAMmC,eAAN,CAAsBjC,cAAtB,EAAsC;AACnDkC,eAAW;AACTjC,iBAAS,+tEADA,EADwC,EAAtC,CAAf","file":"contact.js","sourcesContent":["\"use strict\";\nconst React = require(\"react\");\nconst Relay = require(\"react-relay\");\nconst text_link_1 = require(\"../text_link\");\nclass ArtworkContact extends React.Component {\n    contactLine() {\n        const { artwork } = this.props;\n        if (artwork.sale && artwork.sale.is_auction) {\n            return this.auctionLine();\n        }\n        else if (artwork.is_inquireable) {\n            return this.contactPartnerLine();\n        }\n    }\n    auctionLine() {\n        const { artwork } = this.props;\n        if (artwork.sale.is_live_open) {\n            return React.createElement(text_link_1.default, { href: artwork.href, underline: true }, \"Enter Live Auction\");\n        }\n        else if (artwork.sale.is_open) {\n            const sa = artwork.sale_artwork;\n            const bids = sa.counts.bidder_positions;\n            if (bids > 0) {\n                const s = bids > 1 ? \"s\" : \"\";\n                return React.createElement(\"span\", null,\n                    sa.highest_bid.display,\n                    \" (\",\n                    bids,\n                    \" bid\",\n                    s,\n                    \")\");\n            }\n            else {\n                return React.createElement(\"span\", null, sa.opening_bid.display);\n            }\n        }\n        else if (artwork.sale.is_closed) {\n            return React.createElement(\"span\", null, \"Auction closed\");\n        }\n        else {\n            return React.createElement(\"span\", null);\n        }\n    }\n    contactPartnerLine() {\n        return (React.createElement(text_link_1.default, { href: this.props.artwork.href, underline: true },\n            \"Contact \",\n            this.props.artwork.partner.type.toLowerCase()));\n    }\n    render() {\n        return React.createElement(\"div\", null, this.contactLine());\n    }\n}\nexports.ArtworkContact = ArtworkContact;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Relay.createContainer(ArtworkContact, {\n    fragments: {\n        artwork: () => Relay.QL `\n      fragment on Artwork {\n        _id\n        href\n        is_inquireable\n        sale {\n          is_auction\n          is_live_open\n          is_open\n          is_closed\n        }\n        partner(shallow: true) {\n          type\n        }\n        sale_artwork {\n          highest_bid {\n            display\n          }\n          opening_bid {\n            display\n          }\n          counts {\n            bidder_positions\n          }\n        }\n      }\n    `,\n    },\n});\n","import * as React from \"react\"\nimport * as Relay from \"react-relay\"\nimport TextLink from \"../text_link\"\n\nexport interface ContactProps extends React.HTMLProps<ArtworkContact> {\n  artwork: any\n}\n\nexport class ArtworkContact extends React.Component<ContactProps, null> {\n\n  contactLine() {\n    const { artwork } = this.props\n    if (artwork.sale && artwork.sale.is_auction) {\n      return this.auctionLine()\n    } else if (artwork.is_inquireable) {\n      return this.contactPartnerLine()\n    }\n  }\n\n  auctionLine() {\n    const { artwork } = this.props\n    if (artwork.sale.is_live_open) {\n      return <TextLink href={artwork.href} underline={true}>Enter Live Auction</TextLink>\n    } else if (artwork.sale.is_open) {\n      const sa = artwork.sale_artwork\n      const bids = sa.counts.bidder_positions\n      if (bids > 0) {\n        const s = bids > 1 ? \"s\" : \"\"\n        return <span>{sa.highest_bid.display} ({bids} bid{s})</span>\n      } else {\n        return <span>{sa.opening_bid.display}</span>\n      }\n    } else if (artwork.sale.is_closed) {\n      return <span>Auction closed</span>\n    } else {\n      return <span/>\n    }\n  }\n\n  contactPartnerLine() {\n    return (\n      <TextLink href={this.props.artwork.href} underline={true}>\n        Contact {this.props.artwork.partner.type.toLowerCase()}\n      </TextLink>\n    )\n  }\n\n  render() {\n    return <div>{this.contactLine()}</div>\n  }\n}\n\nexport default Relay.createContainer(ArtworkContact, {\n  fragments: {\n    artwork: () => Relay.QL`\n      fragment on Artwork {\n        _id\n        href\n        is_inquireable\n        sale {\n          is_auction\n          is_live_open\n          is_open\n          is_closed\n        }\n        partner(shallow: true) {\n          type\n        }\n        sale_artwork {\n          highest_bid {\n            display\n          }\n          opening_bid {\n            display\n          }\n          counts {\n            bidder_positions\n          }\n        }\n      }\n    `,\n  },\n})\n\ninterface RelayProps {\n  artwork: {\n    _id: string,\n    href: string | null,\n    is_inquireable: boolean | null,\n    sale: {\n      is_auction: boolean | null,\n      is_live_open: boolean | null,\n      is_open: boolean | null,\n      is_closed: boolean | null,\n    } | null,\n    partner: {\n      type: string | null,\n    } | null,\n    sale_artwork: {\n      highest_bid: {\n        display: string | null,\n      } | null,\n      opening_bid: {\n        display: string | null,\n      } | null,\n      counts: {\n        bidder_positions: boolean | number | string | null,\n      } | null,\n    } | null,\n  },\n}\n"]}