{"version":3,"sources":["components/artwork_filter/headline.js","../src/components/artwork_filter/headline.tsx"],"names":["React","require","fonts_1","lodash_1","styled_components_1","Headline","dimension_range","props","medium","price_range","for_sale","headline","compact","size","priceRange","forSale","join","charAt","toUpperCase","substr","createElement","className","renderHeadline","Component","exports","StyledHeadline","default","secondary","style","Object","defineProperty","value"],"mappings":"AAAA,a;ACAA,IAAAA,QAAAC,QAAA,OAAA,CAAA;AAEA,IAAAC,UAAAD,QAAA,oBAAA,CAAA;AAGA,IAAAE,WAAAF,QAAA,QAAA,CAAA;AACA,IAAAG,sBAAAH,QAAA,mBAAA,CAAA,C;AASAI,Q;AACM;AACMC,2BADN,GAC0B,KAAKC,KAD/B,CACMD,eADN;AAGF,gBAAIA,mBAAmBA,oBAAoB,GAA3C,EAAgD;AAC9C,uBAAOA,eAAP;AACD;AACD,mBAAO,KAAP;AACD,S;AAEK;AACIE,kBADJ,GACe,KAAKD,KADpB,CACIC,MADJ;AAGJ,gBAAIA,UAAUA,WAAW,GAAzB,EAA8B;AAC5B,uBAAOA,MAAP;AACD;AACD,mBAAO,OAAP;AACD,S;AAES;AACAC,uBADA,GACgB,KAAKF,KADrB,CACAE,WADA;AAGR,gBAAIA,eAAeA,gBAAgB,GAAnC,EAAwC;AACtC,uBAAOA,WAAP;AACD;AACD,mBAAO,KAAP;AACD,S;AAEM;AACL,gBAAI,KAAKF,KAAL,CAAWG,QAAf,EAAyB;AACvB,uBAAO,UAAP;AACD;AACD,mBAAO,KAAP;AACD,S;AAEa;AACZ,gBAAMC,WAAWR,SAAAS,OAAA,CAAQ;AACvB,iBAAKC,IAAL,EADuB;AAEvB,iBAAKL,MAAL,EAFuB;AAGvB,iBAAKM,UAAL,EAHuB;AAIvB,iBAAKC,OAAL,EAJuB,CAAR;AAKdC,gBALc,CAKT,GALS,CAAjB;AAMA,gBAAIL,aAAa,OAAjB,EAA0B;AACxB,uBAAO,UAAP;AACD;AACD,mBAAOA,SAASM,MAAT,CAAgB,CAAhB,EAAmBC,WAAnB,KAAmCP,SAASQ,MAAT,CAAgB,CAAhB,CAA1C;AACD,S;AAEK;AACJ,mBACEnB,MAAAoB,aAAA,CAAA,IAAA,EAAA,EAAIC,WAAW,KAAKd,KAAL,CAAWc,SAA1B,EAAA,EACG,KAAKC,cAAL,EADH,CADF;AAKD,S,uBAtD2BtB,MAAMuB,S;;AAApCC,QAAAnB,QAAA,GAAAA,QAAA;AAyDA,IAAMoB,iBAAiBrB,oBAAAsB,OAAA,CAAOrB,QAAP,CAAjB;AACFH,QAAAyB,SAAA,CAAUC,KADR,CAAN;;;;ADjBAC,OAAOC,cAAP,CAAsBN,OAAtB,EAA+B,YAA/B,EAA6C,EAAEO,OAAO,IAAT,EAA7C;ACuBAP,QAAAE,OAAA,GAAeD,cAAf","file":"headline.js","sourcesContent":["\"use strict\";\nconst React = require(\"react\");\nconst fonts_1 = require(\"../../assets/fonts\");\nconst lodash_1 = require(\"lodash\");\nconst styled_components_1 = require(\"styled-components\");\nclass Headline extends React.Component {\n    size() {\n        const { dimension_range } = this.props;\n        if (dimension_range && dimension_range !== \"*\") {\n            return dimension_range;\n        }\n        return false;\n    }\n    medium() {\n        const { medium } = this.props;\n        if (medium && medium !== \"*\") {\n            return medium;\n        }\n        return \"Works\";\n    }\n    priceRange() {\n        const { price_range } = this.props;\n        if (price_range && price_range !== \"*\") {\n            return price_range;\n        }\n        return false;\n    }\n    forSale() {\n        if (this.props.for_sale) {\n            return \"For Sale\";\n        }\n        return false;\n    }\n    renderHeadline() {\n        const headline = lodash_1.compact([\n            this.size(),\n            this.medium(),\n            this.priceRange(),\n            this.forSale(),\n        ]).join(\" \");\n        if (headline === \"works\") {\n            return \"Artworks\";\n        }\n        return headline.charAt(0).toUpperCase() + headline.substr(1);\n    }\n    render() {\n        return (React.createElement(\"h1\", { className: this.props.className }, this.renderHeadline()));\n    }\n}\nexports.Headline = Headline;\nconst StyledHeadline = styled_components_1.default(Headline) `\n  ${fonts_1.secondary.style}\n  font-weight: normal;\n  margin: 0;\n`;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyledHeadline;\n","import * as React from \"react\"\n\nimport { secondary } from \"../../assets/fonts\"\nimport labelMap from \"./param_map\"\n\nimport { compact } from \"lodash\"\nimport styled from \"styled-components\"\n\ninterface Props extends React.HTMLProps<Headline> {\n  medium: string,\n  price_range: string,\n  dimension_range: string,\n  for_sale: boolean,\n}\n\nexport class Headline extends React.Component<Props, null> {\n  size() {\n    const { dimension_range } = this.props\n\n    if (dimension_range && dimension_range !== \"*\") {\n      return dimension_range\n    }\n    return false\n  }\n\n  medium() {\n    const { medium } = this.props\n\n    if (medium && medium !== \"*\") {\n      return medium\n    }\n    return \"Works\"\n  }\n\n  priceRange() {\n    const { price_range } = this.props\n\n    if (price_range && price_range !== \"*\") {\n      return price_range\n    }\n    return false\n  }\n\n  forSale() {\n    if (this.props.for_sale) {\n      return \"For Sale\"\n    }\n    return false\n  }\n\n  renderHeadline() {\n    const headline = compact([\n      this.size(),\n      this.medium(),\n      this.priceRange(),\n      this.forSale(),\n    ]).join(\" \")\n    if (headline === \"works\") {\n      return \"Artworks\"\n    }\n    return headline.charAt(0).toUpperCase() + headline.substr(1)\n  }\n\n  render() {\n    return (\n      <h1 className={this.props.className}>\n        {this.renderHeadline()}\n      </h1>\n    )\n  }\n}\n\nconst StyledHeadline = styled(Headline)`\n  ${secondary.style}\n  font-weight: normal;\n  margin: 0;\n`\n\nexport default StyledHeadline\n"]}