{"version":3,"sources":["components/bordered_pulldown.js","../src/components/bordered_pulldown.tsx"],"names":["React","require","icon_1","styled_components_1","colors_1","fonts_1","BorderedPulldown","props","state","selected","isHovered","option","setState","onChange","options","defaultValue","optionEls","map","createElement","key","val","onClick","name","displayValue","className","Toggle","CaretHolder","default","fontSize","color","grayMedium","PulldownOptions","Component","exports","StyledBorderedPulldown","secondary","style","grayBold","div","gray","Object","defineProperty","value"],"mappings":"AAAA,a;ACAA,IAAAA,QAAAC,QAAA,OAAA,CAAA;AAEA,IAAAC,SAAAD,QAAA,QAAA,CAAA;AAEA,IAAAE,sBAAAF,QAAA,mBAAA,CAAA;AACA,IAAAG,WAAAH,QAAA,kBAAA,CAAA;AACA,IAAAI,UAAAJ,QAAA,iBAAA,CAAA,C;AAaAK,gB;AACE,4BAAYC,KAAZ,EAAiB;AACTA,SADS;AAEf,UAAKC,KAAL,GAAa;AACXC,gBAAU,IADC;AAEXC,iBAAW,KAFA,EAAb,CAFe;;AAMhB,G;AAEQC,U,EAAM;AACb,WAAKC,QAAL,CAAc;AACZH,kBAAUE,MADE,EAAd;;AAGA,WAAKJ,KAAL,CAAWM,QAAX,CAAoBF,MAApB;AACD,K;AAEK;AAC8B,WAAKJ,KADnC,CACIO,OADJ,UACIA,OADJ,CACaC,YADb,UACaA,YADb;AAGJ,UAAMC,YAAYF,QAAQG,GAAR,CAAY,kBAAM;AAClC,eACEjB,MAAAkB,aAAA,CAAA,GAAA,EAAA,EACEC,KAAKR,OAAOS,GADd,EAEEC,SAAS,2BAAO,OAAKR,QAAL,CAAcF,MAAd,CAAP,EAFX,EAAA,EAIGA,OAAOW,IAJV,CADF;AAQD,OATiB,CAAlB;AAWA,UAAMC,eAAe,KAAKf,KAAL,CAAWC,QAAX,IAAuB,KAAKD,KAAL,CAAWC,QAAX,CAAoBa,IAA3C,IAAmDP,YAAxE;AAEA,aACEf,MAAAkB,aAAA,CAAA,KAAA,EAAA,EAAKM,WAAW,KAAKjB,KAAL,CAAWiB,SAA3B,EAAA;AACExB,YAAAkB,aAAA,CAACO,MAAD,EAAO,IAAP;AACEzB,YAAAkB,aAAA,CAAA,MAAA,EAAA,IAAA,EACGK,YADH,CADF;AAIEvB,YAAAkB,aAAA,CAACQ,WAAD,EAAY,IAAZ;AACE1B,YAAAkB,aAAA,CAAChB,OAAAyB,OAAD,EAAK,EACHL,MAAK,YADF,EAEHM,UAAS,KAFN,EAGHC,OAAOzB,SAAAuB,OAAA,CAAOG,UAHX,EAAL,CADF,CAJF,CADF;AAaE9B,YAAAkB,aAAA,CAACa,eAAD,EAAgB,EAACP,WAAU,2BAAX,EAAhB,EACGR,SADH,CAbF,CADF;AAmBD,K,+BAnDmChB,MAAMgC,S;;AAA5CC,QAAA3B,gBAAA,GAAAA,gBAAA;AAsDA,IAAM4B,yBAAyB/B,oBAAAwB,OAAA,CAAOrB,gBAAP,CAAzB;AACFD,QAAA8B,SAAA,CAAUC,KADR;;;;AAKgBhC,SAAAuB,OAAA,CAAOG,UALvB;;;;;;;;;;AAeS1B,SAAAuB,OAAA,CAAOU,QAfhB,CAAN;;;;AAoBA,IAAMZ,SAAStB,oBAAAwB,OAAA,CAAOW,GAAhB,kBAAN;;;;;AAMA,IAAMZ,cAAcvB,oBAAAwB,OAAA,CAAOW,GAArB;;;AAGqBlC,SAAAuB,OAAA,CAAOG,UAH5B,CAAN;;AAMA,IAAMC,kBAAkB5B,oBAAAwB,OAAA,CAAOW,GAAzB;;;;AAIgBlC,SAAAuB,OAAA,CAAOG,UAJvB;;;;;;;;;;;;;AAiBoB1B,SAAAuB,OAAA,CAAOY,IAjB3B,CAAN;;;;ADpBAC,OAAOC,cAAP,CAAsBR,OAAtB,EAA+B,YAA/B,EAA6C,EAAES,OAAO,IAAT,EAA7C;AC0CAT,QAAAN,OAAA,GAAeO,sBAAf","file":"bordered_pulldown.js","sourcesContent":["\"use strict\";\nconst React = require(\"react\");\nconst icon_1 = require(\"./icon\");\nconst styled_components_1 = require(\"styled-components\");\nconst colors_1 = require(\"../assets/colors\");\nconst fonts_1 = require(\"../assets/fonts\");\nclass BorderedPulldown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: null,\n            isHovered: false,\n        };\n    }\n    onChange(option) {\n        this.setState({\n            selected: option,\n        });\n        this.props.onChange(option);\n    }\n    render() {\n        const { options, defaultValue } = this.props;\n        const optionEls = options.map(option => {\n            return (React.createElement(\"a\", { key: option.val, onClick: () => this.onChange(option) }, option.name));\n        });\n        const displayValue = this.state.selected && this.state.selected.name || defaultValue;\n        return (React.createElement(\"div\", { className: this.props.className },\n            React.createElement(Toggle, null,\n                React.createElement(\"span\", null, displayValue),\n                React.createElement(CaretHolder, null,\n                    React.createElement(icon_1.default, { name: \"arrow-down\", fontSize: \"9px\", color: colors_1.default.grayMedium }))),\n            React.createElement(PulldownOptions, { className: \"bordered-pulldown-options\" }, optionEls)));\n    }\n}\nexports.BorderedPulldown = BorderedPulldown;\nconst StyledBorderedPulldown = styled_components_1.default(BorderedPulldown) `\n  ${fonts_1.secondary.style}\n  display: inline-block;\n  width: 200px;\n  position :relative;\n  border: 2px solid ${colors_1.default.grayMedium};\n  text-align: left;\n  font-size: 17px;\n  &:hover > .bordered-pulldown-options {\n    display: block;\n    border-color: gray-color;\n  }\n  &.is-disabled {\n    .bordered-pulldown-toggle {\n      cursor: default;\n      color: ${colors_1.default.grayBold};\n    }\n  }\n`;\nconst Toggle = styled_components_1.default.div `\n  display: block;\n  padding: 8px 10px 6px;\n  text-decoration: none;\n`;\nconst CaretHolder = styled_components_1.default.div `\n  float: right;\n  padding-left: 5px;\n  border-left: 1px solid ${colors_1.default.grayMedium};\n`;\nconst PulldownOptions = styled_components_1.default.div `\n  display: none;\n  position: absolute;\n  background: white;\n  border: 2px solid ${colors_1.default.grayMedium};\n  top: -2px;\n  left: -2px;\n  right: -2px;\n  z-index: 2;\n  > a {\n    text-decoration: none;\n    overflow: ellipsis;\n    display: block;\n    padding: 8px 10px 6px;\n    text-decoration: none;\n    cursor: pointer;\n    &:hover {\n      background-color: ${colors_1.default.gray};\n    } \n  } \n`;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyledBorderedPulldown;\n","import * as React from \"react\"\n\nimport Icon from \"./icon\"\n\nimport styled from \"styled-components\"\nimport colors from \"../assets/colors\"\nimport { secondary } from \"../assets/fonts\"\n\ninterface Props extends React.HTMLProps<BorderedPulldown> {\n  options: any,\n  defaultValue: string,\n  onChange?: any,\n}\n\ninterface State {\n  selected: any,\n  isHovered: boolean,\n}\n\nexport class BorderedPulldown extends React.Component<Props, State> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selected: null,\n      isHovered: false,\n    }\n  }\n\n  onChange(option) {\n    this.setState({\n      selected: option,\n    })\n    this.props.onChange(option)\n  }\n\n  render() {\n    const { options, defaultValue } = this.props\n\n    const optionEls = options.map(option => {\n      return (\n        <a\n          key={option.val}\n          onClick={() =>  this.onChange(option)}\n        >\n          {option.name}\n        </a>\n      )\n    })\n\n    const displayValue = this.state.selected && this.state.selected.name || defaultValue\n\n    return (\n      <div className={this.props.className}>\n        <Toggle>\n          <span>\n            {displayValue}\n          </span>\n          <CaretHolder>\n            <Icon\n              name=\"arrow-down\"\n              fontSize=\"9px\"\n              color={colors.grayMedium}\n            />\n          </CaretHolder>\n        </Toggle>\n        <PulldownOptions className=\"bordered-pulldown-options\">\n          {optionEls}\n        </PulldownOptions>\n      </div>\n    )\n  }\n}\n\nconst StyledBorderedPulldown = styled(BorderedPulldown)`\n  ${secondary.style}\n  display: inline-block;\n  width: 200px;\n  position :relative;\n  border: 2px solid ${colors.grayMedium};\n  text-align: left;\n  font-size: 17px;\n  &:hover > .bordered-pulldown-options {\n    display: block;\n    border-color: gray-color;\n  }\n  &.is-disabled {\n    .bordered-pulldown-toggle {\n      cursor: default;\n      color: ${colors.grayBold};\n    }\n  }\n`\n\nconst Toggle = styled.div`\n  display: block;\n  padding: 8px 10px 6px;\n  text-decoration: none;\n`\n\nconst CaretHolder = styled.div`\n  float: right;\n  padding-left: 5px;\n  border-left: 1px solid ${colors.grayMedium};\n`\n\nconst PulldownOptions = styled.div`\n  display: none;\n  position: absolute;\n  background: white;\n  border: 2px solid ${colors.grayMedium};\n  top: -2px;\n  left: -2px;\n  right: -2px;\n  z-index: 2;\n  > a {\n    text-decoration: none;\n    overflow: ellipsis;\n    display: block;\n    padding: 8px 10px 6px;\n    text-decoration: none;\n    cursor: pointer;\n    &:hover {\n      background-color: ${colors.gray};\n    } \n  } \n`\n\nexport default StyledBorderedPulldown\n"]}