{"version":3,"sources":["relay/root_queries.js","../src/relay/root_queries.ts"],"names":["Relay","require","FilterArtworksQueryConfig","Route","queries","filter_artworks","component","params","getFragment","routeName","exports","ArtworkQueryConfig","artwork","paramDefinitions","artworkID","required","ArtistQueryConfig","artist","artistID"],"mappings":"AAAA,a;ACAA,IAAAA,QAAAC,QAAA,aAAA,CAAA,C;AAEAC,yB,oWAA+CF,MAAMG,K;;AACrCD,0BAAAE,OAAA,GAAU;AACtBC,mBAAiB,yBAACC,SAAD,EAAYC,MAAZ;;;AAGTD,cAAUE,WAAV,CAAsB,iBAAtB,CAHS,GADK,EAAV;;;;;AAUAN,0BAAAO,SAAA,GAAY,2BAAZ;AAXhBC,QAAAR,yBAAA,GAAAA,yBAAA,C;AAcAS,kB,4TAAwCX,MAAMG,K;;AAC9BQ,mBAAAP,OAAA,GAAU;AACtBQ,WAAS,iBAACN,SAAD,EAAYC,MAAZ;;;AAGDD,cAAUE,WAAV,CAAsB,SAAtB,EAAiCD,MAAjC,CAHC,GADa,EAAV;;;;;AAUAI,mBAAAE,gBAAA,GAAmB;AAC/BC,aAAW,EAAEC,UAAU,IAAZ,EADoB,EAAnB;;AAIAJ,mBAAAF,SAAA,GAAY,oBAAZ;AAfhBC,QAAAC,kBAAA,GAAAA,kBAAA,C;AAkBAK,iB,sTAAuChB,MAAMG,K;;AAC7Ba,kBAAAZ,OAAA,GAAU;AACtBa,UAAQ,gBAACX,SAAD,EAAYC,MAAZ;;;AAGAD,cAAUE,WAAV,CAAsB,QAAtB,EAAgCD,MAAhC,CAHA,GADc,EAAV;;;;;AAUAS,kBAAAH,gBAAA,GAAmB;AAC/BK,YAAU,EAAEH,UAAU,IAAZ,EADqB,EAAnB;;AAIAC,kBAAAP,SAAA,GAAY,mBAAZ;AAfhBC,QAAAM,iBAAA,GAAAA,iBAAA","file":"root_queries.js","sourcesContent":["\"use strict\";\nconst Relay = require(\"react-relay\");\nclass FilterArtworksQueryConfig extends Relay.Route {\n}\nFilterArtworksQueryConfig.queries = {\n    filter_artworks: (component, params) => Relay.QL `\n      query {\n        viewer {\n          ${component.getFragment(\"filter_artworks\")}\n        }\n      }\n    `,\n};\nFilterArtworksQueryConfig.routeName = \"FilterArtworksQueryConfig\";\nexports.FilterArtworksQueryConfig = FilterArtworksQueryConfig;\nclass ArtworkQueryConfig extends Relay.Route {\n}\nArtworkQueryConfig.queries = {\n    artwork: (component, params) => Relay.QL `\n      query {\n        artwork(id: $artworkID) {\n          ${component.getFragment(\"artwork\", params)}\n        }\n      }\n    `,\n};\nArtworkQueryConfig.paramDefinitions = {\n    artworkID: { required: true },\n};\nArtworkQueryConfig.routeName = \"ArtworkQueryConfig\";\nexports.ArtworkQueryConfig = ArtworkQueryConfig;\nclass ArtistQueryConfig extends Relay.Route {\n}\nArtistQueryConfig.queries = {\n    artist: (component, params) => Relay.QL `\n      query {\n        artist(id: $artistID) {\n          ${component.getFragment(\"artist\", params)}\n        }\n      }\n    `,\n};\nArtistQueryConfig.paramDefinitions = {\n    artistID: { required: true },\n};\nArtistQueryConfig.routeName = \"ArtistQueryConfig\";\nexports.ArtistQueryConfig = ArtistQueryConfig;\n","import * as Relay from \"react-relay\"\n\nexport class FilterArtworksQueryConfig extends Relay.Route {\n  public static queries = {\n    filter_artworks: (component, params) => Relay.QL`\n      query {\n        viewer {\n          ${component.getFragment(\"filter_artworks\")}\n        }\n      }\n    `,\n  }\n\n  public static routeName = \"FilterArtworksQueryConfig\"\n}\n\nexport class ArtworkQueryConfig extends Relay.Route {\n  public static queries = {\n    artwork: (component, params) => Relay.QL`\n      query {\n        artwork(id: $artworkID) {\n          ${component.getFragment(\"artwork\", params)}\n        }\n      }\n    `,\n  }\n\n  public static paramDefinitions = {\n    artworkID: { required: true },\n  }\n\n  public static routeName = \"ArtworkQueryConfig\"\n}\n\nexport class ArtistQueryConfig extends Relay.Route {\n  public static queries = {\n    artist: (component, params) => Relay.QL`\n      query {\n        artist(id: $artistID) {\n          ${component.getFragment(\"artist\", params)}\n        }\n      }\n    `,\n  }\n\n  public static paramDefinitions = {\n    artistID: { required: true },\n  }\n\n  public static routeName = \"ArtistQueryConfig\"\n}\n"]}