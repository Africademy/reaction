{"version":3,"sources":["../src/setup_jest.ts"],"names":["jest","mock","track","_track","mockImplementation","y","x","fn","c","d","Enzyme","configure","adapter","Adapter","window","open","matchMedia","undefined","grecaptcha","ready","cb","execute","mockResolvedValue","scrollTo","HTMLMediaElement","prototype","pause","play","process","env","ALLOW_CONSOLE_LOGS","logToError","type","args","constructorOpt","explanation","chalk","white","gray","Error","msg","red","message","err","stack","replace","format","slice","captureStackTrace","originalLoggers","error","console","warn","beforeEach","done","forEach","handler","includes","fail","spyOn"],"mappings":"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","sourcesContent":["import chalk from \"chalk\"\nimport Enzyme from \"enzyme\"\nimport Adapter from \"enzyme-adapter-react-16\"\nimport \"regenerator-runtime/runtime\"\nimport { format } from \"util\"\n\njest.mock(\"react-tracking\")\nimport _track from \"react-tracking\"\nconst track = _track as jest.Mock<typeof _track>\ntrack.mockImplementation(y => x => x as any)\n\njest.mock(\"react-sizeme\", () => jest.fn(c => d => d))\njest.mock(\"Utils/logger\")\n\n/**\n * We want each test to have assertions, otherwise it’s too easy to write async\n * tests that never end up making any, leading to false positives.\n *\n * TODO: Find a way to make this not emit after failing tests.\n *\n * SEE: https://github.com/facebook/jest/issues/2209#issuecomment-458706599\n */\n// afterEach(() => expect.hasAssertions())\n\nimport \"DevTools/renderUntil\"\nEnzyme.configure({ adapter: new Adapter() })\n\nimport \"jsdom\"\n\nif (typeof window !== \"undefined\") {\n  window.open = jest.fn()\n  window.matchMedia = undefined\n  window.grecaptcha = {\n    ready: jest.fn(cb => cb()),\n    execute: jest.fn().mockResolvedValue(\"recaptcha-token\"),\n  }\n  window.scrollTo = jest.fn()\n  HTMLMediaElement.prototype.pause = jest.fn()\n  HTMLMediaElement.prototype.play = jest.fn()\n}\n\nif (process.env.ALLOW_CONSOLE_LOGS !== \"true\") {\n  const originalLoggers = {\n    error: console.error,\n    warn: console.warn,\n  }\n\n  function logToError(type, args, constructorOpt: () => void) {\n    const explanation =\n      chalk.white(`Test failed due to \\`console.${type}(…)\\` call.\\n`) +\n      chalk.gray(\"(Disable with ALLOW_CONSOLE_LOGS=true env variable.)\\n\\n\")\n    if (args[0] instanceof Error) {\n      const msg = explanation + chalk.red(args[0].message)\n      const err = new Error(msg)\n      err.stack = args[0].stack.replace(`Error: ${args[0].message}`, msg)\n      return err\n    } else {\n      const err = new Error(\n        explanation + chalk.red(format(args[0], ...args.slice(1)))\n      )\n      Error.captureStackTrace(err, constructorOpt)\n      return err\n    }\n  }\n\n  beforeEach(done => {\n    ;[\"error\", \"warn\"].forEach((type: \"error\" | \"warn\") => {\n      // Don't spy on loggers that have been modified by the current test.\n      if (console[type] === originalLoggers[type]) {\n        const handler = (...args) => {\n          // FIXME: React 16.8.x doesn't support async `act` testing hooks and so this\n          // suppresses for now. Remove once we upgrade to React 16.9.\n          // @see https://github.com/facebook/react/issues/14769\n          if (\n            !args[0].includes(\n              \"Warning: An update to %s inside a test was not wrapped in act\"\n            )\n          ) {\n            done.fail(logToError(type, args, handler))\n          }\n        }\n\n        jest.spyOn(console, type).mockImplementation(handler)\n      }\n    })\n    done() // it is important to call this here or every test will timeout\n  })\n}\n"],"file":"setup_jest.js"}