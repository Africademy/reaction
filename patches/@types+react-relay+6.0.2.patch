diff --git a/node_modules/@types/react-relay/index.d.ts b/node_modules/@types/react-relay/index.d.ts
index 45e5360..1813ae0 100644
--- a/node_modules/@types/react-relay/index.d.ts
+++ b/node_modules/@types/react-relay/index.d.ts
@@ -107,23 +107,28 @@ export {
 
 export type FetchPolicy = 'store-and-network' | 'network-only';
 
-interface QueryRendererProps<TOperation extends OperationType> {
+export interface QueryRendererReadyState<TResponse> {
+    error: Error | null;
+    props: TResponse | null;
+    retry: (() => void) | null;
+}
+
+export interface QueryRendererPropsBase<TOperation extends OperationType> {
     environment: Environment;
     query: GraphQLTaggedNode | null | undefined;
-    render: (renderProps: {
-        error: Error | null;
-        props: TOperation['response'] | null;
-        retry: (() => void) | null;
-    }) => React.ReactNode;
+    render: (renderProps: QueryRendererReadyState<TOperation['response']>) => React.ReactNode;
     variables: TOperation['variables'];
 }
-declare class ReactRelayQueryRenderer<TOperation extends OperationType> extends React.Component<{
+
+export interface QueryRendererProps<TOperation extends OperationType> extends QueryRendererPropsBase<TOperation> {
     cacheConfig?: CacheConfig | null;
     fetchPolicy?: FetchPolicy;
-} & QueryRendererProps<TOperation>> {}
+}
+
+declare class ReactRelayQueryRenderer<TOperation extends OperationType> extends React.Component<QueryRendererProps<TOperation>> {}
 export { ReactRelayQueryRenderer as QueryRenderer };
 
-declare class ReactRelayLocalQueryRenderer<TOperation extends OperationType> extends React.Component<QueryRendererProps<TOperation>> {}
+declare class ReactRelayLocalQueryRenderer<TOperation extends OperationType> extends React.Component<QueryRendererPropsBase<TOperation>> {}
 export { ReactRelayLocalQueryRenderer as LocalQueryRenderer };
 
 export const ReactRelayContext: React.Context<RelayContext | null>;
